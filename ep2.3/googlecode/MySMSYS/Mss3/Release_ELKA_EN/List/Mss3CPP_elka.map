################################################################################
#                                                                              #
#      IAR Universal Linker V4.60I/386                                         #
#                                                                              #
#           Link time     =  14/Jan/2011  23:28:49                             #
#           Target CPU    =  ARM                                               #
#           List file     =  D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\List\Mss3CPP_elka.map                         #
#           Output file 1 =  D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Exe\Mss3CPP_elka.elf                          #
#                            Format: elf, variant: -ynpra                      #
#           Command line  =  D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\AFile.r79                                 #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\AdrList.r79                               #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\CreateMenu.r79                            #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\DaemonCSM.r79                             #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\DialogCSM.r79                             #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\EditGUI.r79                               #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\File.r79                                  #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\GlobalVariable.r79                        #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\IconPack.r79                              #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\KeyHook.r79                               #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\LangPack.r79                              #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\MainMenu.r79                              #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\Mss3App.r79                               #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\MyIpcMessage.r79                          #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\NativeAddressbook.r79                     #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\NumList.r79                               #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\OthersMenu.r79                            #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\PlaySound.r79                             #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\PopupGUI.r79                              #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\SendList.r79                              #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\SiemensPDU.r79                            #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\SmsData.r79                               #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\SmsListMenu.r79                           #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\StrConst.r79                              #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\TViewGUI.r79                              #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\TabGUI.r79                                #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\Template.r79                              #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\Vibra.r79                                 #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\_cpp2.r79                                 #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\conf_loader.r79                           #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\config_data.r79                           #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\func.r79                                  #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\main.r79                                  #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Obj\string_works.r79                          #
#                            -o                                                #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\Exe\Mss3CPP_elka.elf                          #
#                            -Felf -l                                          #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA #
#                            _EN\List\Mss3CPP_elka.map                         #
#                            -xmsnio                                           #
#                            "-ID:\pasha\Embedded Workbench 4.0 Evaluation2\AR #
#                            M\LIB\"                                           #
#                            -f                                                #
#                            D:\pasha\elf\googlecode\MySMSYS\Mss3\test.xcl     #
#                            (-carm -V(CODE)CODE_AREA,12                       #
#                            -V(DATA)DATA_AREA,12                              #
#                            -Z(CODE_AREA)ELFBEGIN,DATA_ID,START,CODE,DATA_C,I #
#                            NITTAB,DATA_Z,DATA_N,MYSEG,CONFIG_C=0-FFFFFFFF    #
#                            -Z(DATA_AREA)DATA_I=0-FFFFFFFF) -ynpra            #
#                            "D:\pasha\Embedded Workbench 4.0 Evaluation2\ARM\ #
#                            LIB\dl5tpainl8n.r79"                              #
#                            -s main                                           #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE_AREA 0000AC5C  Relocatable, from module : main




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  StackAlign4  = USED
  __cpu_mode   = __pcs__interwork
  __data_model = absolute
  __endian     = little
  __rt_version = 6



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\AFile.r79
  PROGRAM MODULE, NAME : AFile

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::new AFile(char const *, unsigned int, unsigned int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::new AFile()      
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::delete ~AFile(AFile *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000430 - 0000043B (0xc bytes), align: 2
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::AFile()          00000430        OthMenu::ShowHelp() (OthersMenu)
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::AFile(char const *, unsigned int, unsigned int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000043C - 00000463 (0x28 bytes), align: 2
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::~AFile()         0000043C        OthMenu::ShowHelp() (OthersMenu)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000464 - 0000048B (0x28 bytes), align: 2
  Segment part 15.            Intra module refs:   AFile::FOpen(char const *, unsigned int, unsigned int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::FClose()         00000464        OthMenu::ShowHelp() (OthersMenu)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000048C - 000004CF (0x44 bytes), align: 2
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::FOpen(char const *, unsigned int, unsigned int)
                                   0000048C        OthMenu::ShowHelp() (OthersMenu)
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000004D0 - 000004F3 (0x24 bytes), align: 2
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::FRead(void *, int)
                                   000004D0        OthMenu::ShowHelp() (OthersMenu)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::FWrite(void const *, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AFile::LSeek(unsigned int, unsigned int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\AdrList.r79
  PROGRAM MODULE, NAME : AdrList

  SEGMENTS IN THE MODULE
  ======================
DATA_Z
  Relative segment, address: CODE_AREA 0000BED0 - 0000BED3 (0x4 bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADRLST                  0000BED0        EditGUI::GHook(void *, int) (EditGUI)
                                                   PopupNewIn::CreatePopupNewIn(DLG_CSM *, _SDLIST *) (PopupGUI)
                                                   Segment part 156 (SmsData)
                                                   Segment part 23 (DaemonCSM)
                                                   Segment part 42 (NumList)
                                                   SmsListMenu::ItemProc(void *, int, void *) (SmsListMenu)
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000004F4 - 0000050F (0x1c bytes), align: 2
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::new AdrList()
                                   000004F4        DaemonCSM::OnCreate(CSM_RAM *) (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000510 - 0000052B (0x1c bytes), align: 2
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::delete ~AdrList(AdrList *)
                                   00000510        DaemonCSM::OnClose(CSM_RAM *) (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000052C - 0000054F (0x24 bytes), align: 2
  Segment part 11.            Intra module refs:   AdrList::new AdrList()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::AdrList()      0000052C 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::~AdrList()     
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000550 - 000005D3 (0x84 bytes), align: 2
  Segment part 15.            Intra module refs:   AdrList::ConstructList()
                                                   AdrList::delete ~AdrList(AdrList *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::FreeCLIST()    00000550 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000005D4 - 00000AA3 (0x4d0 bytes), align: 2
  Segment part 17.            Intra module refs:   AdrList::ConstructListCHK(AdrList *)
                                                   AdrList::ConstructListFRC(AdrList *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::ConstructList()
                                   000005D4 
               stack 1 = 00000000 ( 00000464 )
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000AA4 - 00000ABB (0x18 bytes), align: 2
  Segment part 19.            Intra module refs:   Segment part 24
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::ConstructListCHK(AdrList *)
                                   00000AA4 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000ABC - 00000ABF (0x4 bytes), align: 2
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::ConstructListFRC(AdrList *)
                                   00000ABC        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000AC0 - 00000ADF (0x20 bytes), align: 2
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::ConstructListCFGUPD()
                                   00000AC0        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000AE0 - 00000AE3 (0x4 bytes), align: 2
  Segment part 24.            Intra module refs:   AdrList::AdrList()
                                                   AdrList::ConstructListCFGUPD()
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000AE4 - 00000B9F (0xbc bytes), align: 2
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::FindName(WSHDR *, char const *)
                                   00000AE4        EditGUI::GHook(void *, int) (EditGUI)
                                                   NumList::AddToList(char const *) (NumList)
                                                   NumList::AllocNL(char const *) (NumList)
                                                   NumList::UpdateNL(_NLST *, char const *) (NumList)
                                                   SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int) (SmsData)
                                                   SmsListMenu::ItemProc(void *, int, void *) (SmsListMenu)
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000BA0 - 00000C0F (0x70 bytes), align: 2
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AdrList::FindCList(char const *)
                                   00000BA0        PopupNewIn::CreatePopupNewIn(DLG_CSM *, _SDLIST *) (PopupGUI)
                                                   SmsData::ExportAllToText() (SmsData)
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.Intra module refs:   AdrList::ConstructList()
                                                   AdrList::new AdrList()
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.Intra module refs:   AdrList::FreeCLIST()
                                                   AdrList::delete ~AdrList(AdrList *)
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.Intra module refs:   AdrList::ConstructList()
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.Intra module refs:   AdrList::FindCList(char const *)
                                                   AdrList::FindName(WSHDR *, char const *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE_AREA 0000BEB8 - 0000BEC3 (0xc bytes), align: 2
  Segment part 33. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        0000BEB8 
    -------------------------------------------------------------------------
DATA_C
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B234 - 0000B263 (0x30 bytes), align: 2
  Segment part 3.             Intra module refs:   AdrList::ConstructList()
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B264 - 0000B26B (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   AdrList::FindName(WSHDR *, char const *)

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\CreateMenu.r79
  PROGRAM MODULE, NAME : CreateMenu

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE_AREA 00000C10 - 00000C53 (0x44 bytes), align: 2
  Segment part 2.             Intra module refs:   CreateMenu30or2(MENU_DESC const *, HEADER_DESC const *, int, int, void *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           patch_option_header(HEADER_DESC const *)
                                   00000C10 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000C54 - 00000CF7 (0xa4 bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateMenu(ML_MENU_DESC const *, HEADER_DESC const *, int, int, void *)
                                   00000C54        SmsListMenu::CreateSmsListMenu(int, int, DLG_CSM *) (SmsListMenu)
                                                   SmsListMenu::ReCreateMe(void *) (SmsListMenu)
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000CF8 - 00000D9B (0xa4 bytes), align: 2
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateMenu(MENU_DESC const *, HEADER_DESC const *, int, int, void *)
                                   00000CF8        OthMenu::CreateOthMenu(DLG_CSM *) (OthersMenu)
                                                   TplMenu::CreateTplMenu(void *) (Template)
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateMenu(ML_MENU_DESC const *, HEADER_DESC const *, WSHDR *, int, int, void *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateMenu(MENU_DESC const *, HEADER_DESC const *, WSHDR *, int, int, void *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateMenu30or2(ML_MENU_DESC const *, HEADER_DESC const *, WSHDR *, int, int, void *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateMenu30or2(MENU_DESC const *, HEADER_DESC const *, WSHDR *, int, int, void *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateMenu30or2(ML_MENU_DESC const *, HEADER_DESC const *, int, int, void *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000D9C - 00000E1F (0x84 bytes), align: 2
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CreateMenu30or2(MENU_DESC const *, HEADER_DESC const *, int, int, void *)
                                   00000D9C        EditOptionMenu::CreateEditOptionMenu(DLG_CSM *, _SDLIST *, int, int, int) (EditGUI)
                                                   SmsOptionMenu::CreateSmsOptionMenu(DLG_CSM *, int, int, _SDLIST *) (SmsListMenu)
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.Intra module refs:   CreateMenu30or2(MENU_DESC const *, HEADER_DESC const *, int, int, void *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\DaemonCSM.r79
  PROGRAM MODULE, NAME : DaemonCSM

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000E20 - 00000E3B (0x1c bytes), align: 2
  Segment part 6.             Intra module refs:   DaemonCSM::OnClose(CSM_RAM *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::delete ~DaemonCSM(DaemonCSM *)
                                   00000E20 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000E3C - 00000E57 (0x1c bytes), align: 2
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::new DaemonCSM()
                                   00000E3C        Mss3App::Start(char *, char *) (Mss3App)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000E58 - 00000F2F (0xd8 bytes), align: 2
  Segment part 10.            Intra module refs:   DaemonCSM::new DaemonCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::DaemonCSM()
                                   00000E58 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000F30 - 00000F53 (0x24 bytes), align: 2
  Segment part 12.            Intra module refs:   DaemonCSM::delete ~DaemonCSM(DaemonCSM *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::~DaemonCSM()
                                   00000F30 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000F54 - 00000FC7 (0x74 bytes), align: 2
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::CreateDaemonCSM()
                                   00000F54        Mss3App::Start(char *, char *) (Mss3App)
               stack 1 = 00000000 ( 0000003C )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00000FC8 - 00001003 (0x3c bytes), align: 2
  Segment part 16.            Intra module refs:   DaemonCSM::DaemonCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::OnCreate(CSM_RAM *)
                                   00000FC8 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001004 - 00001717 (0x714 bytes), align: 2
  Segment part 18.            Intra module refs:   DaemonCSM::DaemonCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
                                   00001004 
               stack 1 = 00000000 ( 00000034 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001718 - 0000177F (0x68 bytes), align: 2
  Segment part 20.            Intra module refs:   DaemonCSM::DaemonCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::OnClose(CSM_RAM *)
                                   00001718 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001780 - 00001783 (0x4 bytes), align: 2
  Segment part 21.            Intra module refs:   DaemonCSM::OnClose(CSM_RAM *)
                                                   DaemonCSM::OnCreate(CSM_RAM *)
                                                   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001784 - 00001787 (0x4 bytes), align: 2
  Segment part 22.            Intra module refs:   DaemonCSM::OnClose(CSM_RAM *)
                                                   DaemonCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001788 - 0000178B (0x4 bytes), align: 2
  Segment part 23.            Intra module refs:   DaemonCSM::OnClose(CSM_RAM *)
                                                   DaemonCSM::OnCreate(CSM_RAM *)
                                                   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000178C - 000017BB (0x30 bytes), align: 2
  Segment part 25.            Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::AddDlgCsmID(int)
                                   0000178C 
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::AddDlgCsmID_Forced0(int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000017BC - 000017F3 (0x38 bytes), align: 2
  Segment part 29.            Intra module refs:   DaemonCSM::OnClose(CSM_RAM *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::CloseAllDlgCSM()
                                   000017BC 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000017F4 - 0000181F (0x2c bytes), align: 2
  Segment part 31.            Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::DelDlgCsmID(int)
                                   000017F4 
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001820 - 00001873 (0x54 bytes), align: 2
  Segment part 33.            Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::IsOnTopMyCSM()
                                   00001820 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001874 - 0000187B (0x8 bytes), align: 2
  Segment part 35.            Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::DoNewProc()
                                   00001874 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000187C - 00001883 (0x8 bytes), align: 2
  Segment part 37.            Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::UpdateNProc()
                                   0000187C 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001884 - 000018C7 (0x44 bytes), align: 2
  Segment part 39.            Intra module refs:   DaemonCSM::DaemonCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::AddIconBar(short *)
                                   00001884 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000018C8 - 000018CB (0x4 bytes), align: 2
  Segment part 40.            Intra module refs:   DaemonCSM::AddIconBar(short *)
                                                   DaemonCSM::OnClose(CSM_RAM *)
                                                   DaemonCSM::OnCreate(CSM_RAM *)
                                                   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000018CC - 000018FB (0x30 bytes), align: 2
  Segment part 42.            Intra module refs:   DaemonCSM::IsOnTopMyCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::GetTopCSM()
                                   000018CC        SendList::Send(SendList *) (SendList)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000018FC - 0000192F (0x34 bytes), align: 2
  Segment part 44.            Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DaemonCSM::StartDialog(int, void *)
                                   000018FC 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 45. NOT NEEDED.Intra module refs:   DaemonCSM::delete ~DaemonCSM(DaemonCSM *)
    -------------------------------------------------------------------------
CODE
  Segment part 46. NOT NEEDED.Intra module refs:   DaemonCSM::new DaemonCSM()
    -------------------------------------------------------------------------
CODE
  Segment part 47. NOT NEEDED.Intra module refs:   DaemonCSM::DaemonCSM()
    -------------------------------------------------------------------------
CODE
  Segment part 48. NOT NEEDED.Intra module refs:   DaemonCSM::DaemonCSM()
    -------------------------------------------------------------------------
CODE
  Segment part 49. NOT NEEDED.Intra module refs:   DaemonCSM::DaemonCSM()
    -------------------------------------------------------------------------
CODE
  Segment part 50. NOT NEEDED.Intra module refs:   DaemonCSM::~DaemonCSM()
    -------------------------------------------------------------------------
CODE
  Segment part 51. NOT NEEDED.Intra module refs:   DaemonCSM::~DaemonCSM()
    -------------------------------------------------------------------------
CODE
  Segment part 52. NOT NEEDED.Intra module refs:   DaemonCSM::~DaemonCSM()
    -------------------------------------------------------------------------
CODE
  Segment part 53. NOT NEEDED.Intra module refs:   DaemonCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 54. NOT NEEDED.Intra module refs:   DaemonCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 55. NOT NEEDED.Intra module refs:   DaemonCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 56. NOT NEEDED.Intra module refs:   DaemonCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 57. NOT NEEDED.Intra module refs:   DaemonCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 58. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 59. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 60. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 61. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 62. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 63. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 64. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
                                                   DaemonCSM::StartDialog(int, void *)
    -------------------------------------------------------------------------
CODE
  Segment part 65. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 66. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 67. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 68. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 69. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 70. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 71. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 72. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 73. NOT NEEDED.Intra module refs:   DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 74. NOT NEEDED.Intra module refs:   DaemonCSM::OnClose(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 75. NOT NEEDED.Intra module refs:   DaemonCSM::OnClose(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 76. NOT NEEDED.Intra module refs:   DaemonCSM::OnClose(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 77. NOT NEEDED.Intra module refs:   DaemonCSM::OnClose(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 78. NOT NEEDED.Intra module refs:   DaemonCSM::OnClose(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 79. NOT NEEDED.Intra module refs:   DaemonCSM::DoNewProc()
                                                   DaemonCSM::UpdateNProc()
    -------------------------------------------------------------------------
CODE
  Segment part 80. NOT NEEDED.Intra module refs:   DaemonCSM::StartDialog(int, void *)
    -------------------------------------------------------------------------
CODE
  Segment part 81. NOT NEEDED.Intra module refs:   DaemonCSM::StartDialog(int, void *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B26C - 0000B273 (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   DaemonCSM::DaemonCSM()
    -------------------------------------------------------------------------
DATA_C
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B274 - 0000B27B (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   DaemonCSM::CreateDaemonCSM()

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\DialogCSM.r79
  PROGRAM MODULE, NAME : DialogCSM

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DialogCSM::delete ~DialogCSM(DialogCSM *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001930 - 0000194B (0x1c bytes), align: 2
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DialogCSM::new DialogCSM()
                                   00001930        DaemonCSM::StartDialog(int, void *) (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000194C - 000019CF (0x84 bytes), align: 2
  Segment part 8.             Intra module refs:   DialogCSM::new DialogCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DialogCSM::DialogCSM()
                                   0000194C 
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DialogCSM::~DialogCSM()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000019D0 - 000019FF (0x30 bytes), align: 2
  Segment part 12.            Intra module refs:   DialogCSM::DialogCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DialogCSM::OnMessage(CSM_RAM *, GBS_MSG *)
                                   000019D0 
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001A00 - 00001EBF (0x4c0 bytes), align: 2
  Segment part 14.            Intra module refs:   DialogCSM::DialogCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DialogCSM::OnCreate(CSM_RAM *)
                                   00001A00 
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001EC0 - 00001ED7 (0x18 bytes), align: 2
  Segment part 16.            Intra module refs:   DialogCSM::DialogCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DialogCSM::OnClose(CSM_RAM *)
                                   00001EC0 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001ED8 - 00001F4F (0x78 bytes), align: 2
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DialogCSM::CreateDialogCSM(int, void *)
                                   00001ED8        DaemonCSM::StartDialog(int, void *) (DaemonCSM)
               stack 1 = 00000000 ( 00000040 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001F50 - 00001F53 (0x4 bytes), align: 2
  Segment part 19.            Intra module refs:   DialogCSM::CreateDialogCSM(int, void *)
                                                   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DialogCSM::UpdateNameDlgCSM(DLG_CSM *, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001F54 - 00001F57 (0x4 bytes), align: 2
  Segment part 22.            Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.Intra module refs:   DialogCSM::OnClose(CSM_RAM *)
                                                   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.Intra module refs:   DialogCSM::new DialogCSM()
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B27C - 0000B283 (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   DialogCSM::OnCreate(CSM_RAM *)

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\EditGUI.r79
  PROGRAM MODULE, NAME : EditGUI

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B284 - 0000B28F (0xc bytes), align: 2
  Segment part 3.             Intra module refs:   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B290 - 0000B2A7 (0x18 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B2A8 - 0000B2AF (0x8 bytes), align: 2
  Segment part 5.             Intra module refs:   EditGUI::EditGUI()
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000000 - 00000013 (0x14 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 61
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           editgui_hdr             00000000 
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001F58 - 00001F73 (0x1c bytes), align: 2
  Segment part 15.            Intra module refs:   EditGUI::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditOptionMenu::new EditOptionMenu()
                                   00001F58 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001F74 - 00001F8F (0x1c bytes), align: 2
  Segment part 17.            Intra module refs:   EditGUI::OnKey(void *, GUI_MSG *)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::new EditGUI()
                                   00001F74        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
                                                   MainMenu::OnKey(void *, GUI_MSG *) (MainMenu)
                                                   PopupNewIn::OnKey(void *, GUI_MSG *) (PopupGUI)
                                                   SmsListMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001F90 - 00001FAB (0x1c bytes), align: 2
  Segment part 19.            Intra module refs:   EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int)
                                                   EditGUI::CreateEditGUI(DLG_CSM *, char const *)
                                                   EditGUI::GHook(void *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::delete ~EditGUI(EditGUI *)
                                   00001F90 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditOptionMenu::delete ~EditOptionMenu(EditOptionMenu *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00001FAC - 0000204F (0xa4 bytes), align: 2
  Segment part 23.            Intra module refs:   EditGUI::new EditGUI()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::EditGUI()      00001FAC 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002050 - 0000206B (0x1c bytes), align: 2
  Segment part 25.            Intra module refs:   EditGUI::delete ~EditGUI(EditGUI *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::~EditGUI()     00002050 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000206C - 000021FF (0x194 bytes), align: 2
  Segment part 27.            Intra module refs:   EditGUI::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::EdOpUserItem(USR_MENU_ITEM *)
                                   0000206C 
               stack 1 = 00000000 ( 00000040 )
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002200 - 0000257F (0x380 bytes), align: 2
  Segment part 29.            Intra module refs:   EditGUI::EditGUI()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::OnKey(void *, GUI_MSG *)
                                   00002200 
               stack 1 = 00000000 ( 00000044 )
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000014 - 0000003B (0x28 bytes), align: 2
  Segment part 8.             Intra module refs:   EditGUI::GHook(void *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SK_ADRBK                0000001C        LangPack::InitLgp() (LangPack)
           SK_CANCEL               00000024        LangPack::InitLgp() (LangPack)
           SK_INSNM                00000034        LangPack::InitLgp() (LangPack)
           SK_OPTIONS              00000014        LangPack::InitLgp() (LangPack)
           SK_OP_PIC               0000002C 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002580 - 00002667 (0xe8 bytes), align: 2
  Segment part 31.            Intra module refs:   EditGUI::GHook(void *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::DoSmsWorkBG(void *, int)
                                   00002580 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002668 - 00002AFB (0x494 bytes), align: 2
  Segment part 33.            Intra module refs:   EditGUI::EditGUI()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::GHook(void *, int)
                                   00002668 
               stack 1 = 00000000 ( 00000054 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002AFC - 00002AFF (0x4 bytes), align: 2
  Segment part 34.            Intra module refs:   EditGUI::EdOpUserItem(USR_MENU_ITEM *)
                                                   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002B00 - 00002B03 (0x4 bytes), align: 2
  Segment part 35.            Intra module refs:   EditGUI::EdOpUserItem(USR_MENU_ITEM *)
                                                   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002B04 - 00002B07 (0x4 bytes), align: 2
  Segment part 37.            Intra module refs:   EditGUI::EditGUI()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::Locret()       00002B04 
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002B08 - 00002E5B (0x354 bytes), align: 2
  Segment part 39.            Intra module refs:   EditGUI::OnKey(void *, GUI_MSG *)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int)
                                   00002B08        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
                                                   MainMenu::OnKey(void *, GUI_MSG *) (MainMenu)
                                                   PopupNewIn::OnKey(void *, GUI_MSG *) (PopupGUI)
                                                   SmsListMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
               stack 1 = 00000000 ( 00001078 )
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B2B0 - 0000B2C3 (0x14 bytes), align: 2
  Segment part 10.            Intra module refs:   EditOptionMenu::CreateEditOptionMenu(DLG_CSM *, _SDLIST *, int, int, int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002E5C - 00002EBF (0x64 bytes), align: 2
  Segment part 41.            Intra module refs:   EditOptionMenu::new EditOptionMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditOptionMenu::EditOptionMenu()
                                   00002E5C 
    -------------------------------------------------------------------------
CODE
  Segment part 42. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditOptionMenu::~EditOptionMenu()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 44. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00002EC0 - 0000305B (0x19c bytes), align: 2
  Segment part 45.            Intra module refs:   EditOptionMenu::EditOptionMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditOptionMenu::OnKey(void *, GUI_MSG *)
                                   00002EC0 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000305C - 0000305F (0x4 bytes), align: 2
  Segment part 46.            Intra module refs:   EditGUI::DoSmsWorkBG(void *, int)
                                                   EditGUI::GHook(void *, int)
                                                   EditGUI::OnKey(void *, GUI_MSG *)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 47. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003060 - 000030EF (0x90 bytes), align: 2
  Segment part 48.            Intra module refs:   EditOptionMenu::EditOptionMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditOptionMenu::GHook(void *, int)
                                   00003060 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000030F0 - 000030F3 (0x4 bytes), align: 2
  Segment part 49.            Intra module refs:   EditOptionMenu::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 50. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 0000003C - 00000057 (0x1c bytes), align: 2
  Segment part 11.            Intra module refs:   EditOptionMenu::ItemProc(void *, int, void *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EDO_ITEM_LGPS           0000003C        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B2C4 - 0000B2CB (0x8 bytes), align: 2
  Segment part 13.            Intra module refs:   EditOptionMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000030F4 - 0000316B (0x78 bytes), align: 2
  Segment part 51.            Intra module refs:   EditOptionMenu::EditOptionMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditOptionMenu::ItemProc(void *, int, void *)
                                   000030F4 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 52. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000316C - 000031AB (0x40 bytes), align: 2
  Segment part 53.            Intra module refs:   EditGUI::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditOptionMenu::CreateEditOptionMenu(DLG_CSM *, _SDLIST *, int, int, int)
                                   0000316C 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 54. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 55. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::UpdateCSMName(DLG_CSM *, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000031AC - 000031AF (0x4 bytes), align: 2
  Segment part 56.            Intra module refs:   EditOptionMenu::GHook(void *, int)
                                                   EditOptionMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CODE
  Segment part 57. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000031B0 - 00003407 (0x258 bytes), align: 2
  Segment part 58.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::CreateEditGUI(DLG_CSM *, char const *)
                                   000031B0        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
               stack 1 = 00000000 ( 0000107C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003408 - 0000340B (0x4 bytes), align: 2
  Segment part 59.            Intra module refs:   EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int)
                                                   EditGUI::CreateEditGUI(DLG_CSM *, char const *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000340C - 0000340F (0x4 bytes), align: 2
  Segment part 60.            Intra module refs:   EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int)
                                                   EditGUI::CreateEditGUI(DLG_CSM *, char const *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003410 - 00003413 (0x4 bytes), align: 2
  Segment part 61.            Intra module refs:   EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int)
                                                   EditGUI::CreateEditGUI(DLG_CSM *, char const *)
    -------------------------------------------------------------------------
CODE
  Segment part 62. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003414 - 000034FB (0xe8 bytes), align: 2
  Segment part 63.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::InsertText(void *, WSHDR *)
                                   00003414        NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *) (NativeAddressbook)
               stack 1 = 00000000 ( 0000004C )
    -------------------------------------------------------------------------
CODE
  Segment part 64. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 65. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::SetNumber(void *, WSHDR *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 66. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 67. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::InsertNumber(void *, WSHDR *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 68. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000034FC - 00003597 (0x9c bytes), align: 2
  Segment part 69.            Intra module refs:   EditGUI::EdOpUserItem(USR_MENU_ITEM *)
                                                   EditGUI::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::EditSendSMS(WSHDR *)
                                   000034FC 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 70. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003598 - 0000360F (0x78 bytes), align: 2
  Segment part 71.            Intra module refs:   EditGUI::EdOpUserItem(USR_MENU_ITEM *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::SaveDraft(WSHDR *)
                                   00003598 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003610 - 00003613 (0x4 bytes), align: 2
  Segment part 72.            Intra module refs:   EditGUI::SaveDraft(WSHDR *)
    -------------------------------------------------------------------------
CODE
  Segment part 73. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003614 - 0000373F (0x12c bytes), align: 2
  Segment part 74.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::InsertNumber(void *, char *)
                                   00003614        NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *) (NativeAddressbook)
               stack 1 = 00000000 ( 0000005C )
    -------------------------------------------------------------------------
CODE
  Segment part 75. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003740 - 000037D7 (0x98 bytes), align: 2
  Segment part 76.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::SetNumber(void *, char *)
                                   00003740        NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *) (NativeAddressbook)
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 77. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000037D8 - 000038EB (0x114 bytes), align: 2
  Segment part 78.            Intra module refs:   EditGUI::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           EditGUI::AddNumberBlank(void *)
                                   000037D8 
               stack 1 = 00000000 ( 0000005C )
    -------------------------------------------------------------------------
CODE
  Segment part 79. NOT NEEDED.Intra module refs:   EditGUI::new EditGUI()
                                                   EditOptionMenu::new EditOptionMenu()
    -------------------------------------------------------------------------
CODE
  Segment part 80. NOT NEEDED.Intra module refs:   EditGUI::delete ~EditGUI(EditGUI *)
                                                   EditOptionMenu::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 81. NOT NEEDED.Intra module refs:   EditGUI::EditGUI()
    -------------------------------------------------------------------------
CODE
  Segment part 82. NOT NEEDED.Intra module refs:   EditGUI::~EditGUI()
    -------------------------------------------------------------------------
CODE
  Segment part 83. NOT NEEDED.Intra module refs:   EditGUI::EdOpUserItem(USR_MENU_ITEM *)
                                                   EditGUI::OnKey(void *, GUI_MSG *)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 84. NOT NEEDED.Intra module refs:   EditGUI::EdOpUserItem(USR_MENU_ITEM *)
                                                   EditGUI::OnKey(void *, GUI_MSG *)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 85. NOT NEEDED.Intra module refs:   EditGUI::EdOpUserItem(USR_MENU_ITEM *)
    -------------------------------------------------------------------------
CODE
  Segment part 86. NOT NEEDED.Intra module refs:   EditGUI::EdOpUserItem(USR_MENU_ITEM *)
    -------------------------------------------------------------------------
CODE
  Segment part 87. NOT NEEDED.Intra module refs:   EditGUI::OnKey(void *, GUI_MSG *)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 88. NOT NEEDED.Intra module refs:   EditGUI::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 89. NOT NEEDED.Intra module refs:   EditGUI::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 90. NOT NEEDED.Intra module refs:   EditGUI::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 91. NOT NEEDED.Intra module refs:   EditGUI::DoSmsWorkBG(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 92. NOT NEEDED.Intra module refs:   EditGUI::DoSmsWorkBG(void *, int)
                                                   EditGUI::SaveDraft(WSHDR *)
    -------------------------------------------------------------------------
CODE
  Segment part 93. NOT NEEDED.Intra module refs:   EditGUI::DoSmsWorkBG(void *, int)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 94. NOT NEEDED.Intra module refs:   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 95. NOT NEEDED.Intra module refs:   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 96. NOT NEEDED.Intra module refs:   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 97. NOT NEEDED.Intra module refs:   EditGUI::AddNumberBlank(void *)
                                                   EditGUI::GHook(void *, int)
                                                   EditGUI::InsertNumber(void *, char *)
                                                   EditGUI::SetNumber(void *, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 98. NOT NEEDED.Intra module refs:   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 99. NOT NEEDED.Intra module refs:   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 100. NOT NEEDED.Intra module refs   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 101. NOT NEEDED.Intra module refs   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 102. NOT NEEDED.Intra module refs   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 103. NOT NEEDED.Intra module refs   EditGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 104. NOT NEEDED.Intra module refs   EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int)
    -------------------------------------------------------------------------
CODE
  Segment part 105. NOT NEEDED.Intra module refs   EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int)
                                                   EditGUI::CreateEditGUI(DLG_CSM *, char const *)
    -------------------------------------------------------------------------
CODE
  Segment part 106. NOT NEEDED.Intra module refs   EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int)
                                                   EditGUI::CreateEditGUI(DLG_CSM *, char const *)
    -------------------------------------------------------------------------
CODE
  Segment part 107. NOT NEEDED.Intra module refs   EditOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 108. NOT NEEDED.Intra module refs   EditOptionMenu::CreateEditOptionMenu(DLG_CSM *, _SDLIST *, int, int, int)
    -------------------------------------------------------------------------
CODE
  Segment part 109. NOT NEEDED.Intra module refs   EditGUI::CreateEditGUI(DLG_CSM *, char const *)
    -------------------------------------------------------------------------
CODE
  Segment part 110. NOT NEEDED.Intra module refs   EditGUI::InsertNumber(void *, char *)
                                                   EditGUI::SetNumber(void *, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 111. NOT NEEDED.Intra module refs   EditGUI::SetNumber(void *, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 112. NOT NEEDED.Intra module refs   EditGUI::AddNumberBlank(void *)
                                                   EditGUI::InsertNumber(void *, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 113. NOT NEEDED.Intra module refs   EditGUI::AddNumberBlank(void *)
                                                   EditGUI::InsertNumber(void *, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 114. NOT NEEDED.Intra module refs   EditGUI::EditSendSMS(WSHDR *)
    -------------------------------------------------------------------------
CODE
  Segment part 115. NOT NEEDED.Intra module refs   EditGUI::EditSendSMS(WSHDR *)
    -------------------------------------------------------------------------
CODE
  Segment part 116. NOT NEEDED.Intra module refs   EditGUI::EditSendSMS(WSHDR *)
    -------------------------------------------------------------------------
CODE
  Segment part 117. NOT NEEDED.Intra module refs   EditGUI::EditSendSMS(WSHDR *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000000 - 00000013 (0x14 bytes), align: 2
  Segment part 7.             Intra module refs:   editgui_hdr
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000014 - 0000003B (0x28 bytes), align: 2
  Segment part 9.             Intra module refs:   Segment part 8
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 0000003C - 00000057 (0x1c bytes), align: 2
  Segment part 12.            Intra module refs:   EDO_ITEM_LGPS
    -------------------------------------------------------------------------
DATA_ID
  Segment part 118. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE_AREA 0000BEC4 - 0000BECF (0xc bytes), align: 2
  Segment part 119. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        0000BEC4 

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\File.r79
  PROGRAM MODULE, NAME : File

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000038EC - 0000390B (0x20 bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::FOpen(char const *, unsigned int, unsigned int)
                                   000038EC        LangPack::LoadLangFile() (LangPack)
                                                   SmsData::ExportAllToText() (SmsData)
                                                   SmsData::NewToReadSMS(_SDLIST *) (SmsData)
                                                   SmsData::ReadDat() (SmsData)
                                                   SmsData::ReadMss(char *, _SDLIST *) (SmsData)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int) (SmsData)
                                                   TplMenu::ReadTpl() (Template)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000390C - 0000392B (0x20 bytes), align: 2
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::FRead(int, void *, int)
                                   0000390C        LangPack::LoadLangFile() (LangPack)
                                                   SmsData::NewToReadSMS(_SDLIST *) (SmsData)
                                                   SmsData::ReadDat() (SmsData)
                                                   SmsData::ReadMss(char *, _SDLIST *) (SmsData)
                                                   TplMenu::ReadTpl() (Template)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000392C - 0000394B (0x20 bytes), align: 2
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::FWrite(int, void const *, int)
                                   0000392C        SmsData::ExportAllToText() (SmsData)
                                                   SmsData::NewToReadSMS(_SDLIST *) (SmsData)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int) (SmsData)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000394C - 00003963 (0x18 bytes), align: 2
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::FClose(int)      0000394C        LangPack::LoadLangFile() (LangPack)
                                                   SmsData::ExportAllToText() (SmsData)
                                                   SmsData::NewToReadSMS(_SDLIST *) (SmsData)
                                                   SmsData::ReadDat() (SmsData)
                                                   SmsData::ReadMss(char *, _SDLIST *) (SmsData)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int) (SmsData)
                                                   TplMenu::ReadTpl() (Template)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003964 - 00003987 (0x24 bytes), align: 2
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::LSeek(int, unsigned int, unsigned int)
                                   00003964        LangPack::LoadLangFile() (LangPack)
                                                   SmsData::NewToReadSMS(_SDLIST *) (SmsData)
                                                   SmsData::ReadDat() (SmsData)
                                                   SmsData::ReadMss(char *, _SDLIST *) (SmsData)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003988 - 0000399F (0x18 bytes), align: 2
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::MkDir(char const *)
                                   00003988        IconPack::LoadIconPack() (IconPack)
                                                   SmsData::ExportAllToText() (SmsData)
                                                   SmsData::MoveToArchive(_SDLIST *) (SmsData)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int) (SmsData)
                                                   TplMenu::ReadTpl() (Template)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000039A0 - 000039B7 (0x18 bytes), align: 2
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::IsDir(char const *)
                                   000039A0        IconPack::LoadIconPack() (IconPack)
                                                   LangPack::LoadLangFile() (LangPack)
                                                   SmsData::CheckFolder(int) (SmsData)
                                                   SmsData::ExportAllToText() (SmsData)
                                                   SmsData::MoveToArchive(_SDLIST *) (SmsData)
                                                   SmsData::ReadFolder(int) (SmsData)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int) (SmsData)
                                                   TplMenu::ReadTpl() (Template)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000039B8 - 000039D3 (0x1c bytes), align: 2
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::FindFirstFile(DIR_ENTRY *, char *)
                                   000039B8        SmsData::CheckFolder(int) (SmsData)
                                                   SmsData::ReadFolder(int) (SmsData)
                                                   TplMenu::ReadTpl() (Template)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000039D4 - 000039EB (0x18 bytes), align: 2
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::FindNextFile(DIR_ENTRY *)
                                   000039D4        SmsData::CheckFolder(int) (SmsData)
                                                   SmsData::ReadFolder(int) (SmsData)
                                                   TplMenu::ReadTpl() (Template)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000039EC - 00003A03 (0x18 bytes), align: 2
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::FindClose(DIR_ENTRY *)
                                   000039EC        SmsData::CheckFolder(int) (SmsData)
                                                   SmsData::ReadFolder(int) (SmsData)
                                                   TplMenu::ReadTpl() (Template)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003A04 - 00003A33 (0x30 bytes), align: 2
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::IsFileExist(char const *)
                                   00003A04        IconPack::LoadIconPack() (IconPack)
                                                   PlaySouNd::PlayStart(PlaySouNd *, char const *) (PlaySound)
                                                   SmsData::CheckSDList() (SmsData)
                                                   SmsData::ExportAllToText() (SmsData)
                                                   SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int) (SmsData)
                                                   SmsData::GetMssPath(char *, char *, TTime *, TDate *) (SmsData)
               stack 1 = 00000000 ( 0000002C )
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003A34 - 00003A4B (0x18 bytes), align: 2
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::FDelete(char const *)
                                   00003A34        SmsData::DeleteAllMss() (SmsData)
                                                   SmsData::DeleteMessage(_SDLIST *) (SmsData)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003A4C - 00003A67 (0x1c bytes), align: 2
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::FMove(char const *, char const *)
                                   00003A4C        SmsData::MoveToArchive(_SDLIST *) (SmsData)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFile::GetFileCountOfDir(char const *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Segment part 2. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\GlobalVariable.r79
  PROGRAM MODULE, NAME : GlobalVariable

  SEGMENTS IN THE MODULE
  ======================
DATA_Z
  Relative segment, address: CODE_AREA 0000BED4 - 0000BF53 (0x80 bytes), align: 2
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sms_dat                 0000BED4        Mss3App::InitDatPath() (Mss3App)
                                                   SmsData::ReadDat() (SmsData)
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: CODE_AREA 0000BF54 - 0000BFD3 (0x80 bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main_folder             0000BF54        IconPack::LoadIconPack() (IconPack)
                                                   LangPack::LoadLangFile() (LangPack)
                                                   Mss3App::InitDatPath() (Mss3App)
                                                   Segment part 155 (SmsData)
                                                   Segment part 39 (OthersMenu)
                                                   Segment part 91 (SmsData)
                                                   TplMenu::ReadTpl() (Template)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B2CC - 0000B2D7 (0xc bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           softkeys                0000B2CC        EditOptionMenu::EditOptionMenu() (EditGUI)
                                                   MainMenu::MainMenu() (MainMenu)
                                                   OthMenu::OthMenu() (OthersMenu)
                                                   PopupNewIn::PopupNewIn() (PopupGUI)
                                                   Segment part 38 (SmsListMenu)
                                                   Segment part 6 (TViewGUI)
                                                   Segment part 9 (PopupGUI)
                                                   TplMenu::TplMenu() (Template)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B2D8 - 0000B2DB (0x4 bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           minus11                 0000B2D8        DaemonCSM::DaemonCSM() (DaemonCSM)
                                                   DialogCSM::DialogCSM() (DialogCSM)
                                                   NAbCSM::NAbCSM() (NativeAddressbook)
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000058 - 0000006F (0x18 bytes), align: 2
  Segment part 6.             Intra module refs:   sel_menu_skt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sel_menu_sk             00000058        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B2DC - 0000B2E3 (0x8 bytes), align: 2
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sel_menu_skt            0000B2DC        EditOptionMenu::EditOptionMenu() (EditGUI)
                                                   OthMenu::OthMenu() (OthersMenu)
                                                   SmsOptionMenu::SmsOptionMenu() (SmsListMenu)
                                                   TplMenu::TplMenu() (Template)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000058 - 0000006F (0x18 bytes), align: 2
  Segment part 7.             Intra module refs:   sel_menu_sk
    -------------------------------------------------------------------------
DATA_ID
  Segment part 9. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 10. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        
    -------------------------------------------------------------------------
INITTAB
  Segment part 11. TENTATIVE. Used definition from AdrList
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\IconPack.r79
  PROGRAM MODULE, NAME : IconPack

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 00000070 - 000000E7 (0x78 bytes), align: 2
  Segment part 33.            Intra module refs:   IconPack::LoadIconPack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IconNames               00000070 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B2E4 - 0000B2F3 (0x10 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B2F4 - 0000B307 (0x14 bytes), align: 2
  Segment part 3.             Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BEA4 - 0000BEA4 (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B308 - 0000B317 (0x10 bytes), align: 2
  Segment part 5.             Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B318 - 0000B327 (0x10 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B328 - 0000B337 (0x10 bytes), align: 2
  Segment part 7.             Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B338 - 0000B343 (0xc bytes), align: 2
  Segment part 8.             Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B344 - 0000B353 (0x10 bytes), align: 2
  Segment part 9.             Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B354 - 0000B363 (0x10 bytes), align: 2
  Segment part 10.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B364 - 0000B373 (0x10 bytes), align: 2
  Segment part 11.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B374 - 0000B383 (0x10 bytes), align: 2
  Segment part 12.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B384 - 0000B393 (0x10 bytes), align: 2
  Segment part 13.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B394 - 0000B3A3 (0x10 bytes), align: 2
  Segment part 14.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B3A4 - 0000B3B3 (0x10 bytes), align: 2
  Segment part 15.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B3B4 - 0000B3C3 (0x10 bytes), align: 2
  Segment part 16.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B3C4 - 0000B3D3 (0x10 bytes), align: 2
  Segment part 17.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B3D4 - 0000B3E3 (0x10 bytes), align: 2
  Segment part 18.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B3E4 - 0000B3EB (0x8 bytes), align: 2
  Segment part 19.            Intra module refs:   IconPack::LoadIconPack()
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B3EC - 0000B3FB (0x10 bytes), align: 2
  Segment part 20.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B3FC - 0000B40B (0x10 bytes), align: 2
  Segment part 21.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B40C - 0000B41B (0x10 bytes), align: 2
  Segment part 22.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B41C - 0000B42B (0x10 bytes), align: 2
  Segment part 23.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B42C - 0000B43B (0x10 bytes), align: 2
  Segment part 24.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B43C - 0000B44B (0x10 bytes), align: 2
  Segment part 25.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B44C - 0000B45B (0x10 bytes), align: 2
  Segment part 26.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B45C - 0000B46B (0x10 bytes), align: 2
  Segment part 27.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B46C - 0000B47B (0x10 bytes), align: 2
  Segment part 28.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B47C - 0000B48F (0x14 bytes), align: 2
  Segment part 29.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B490 - 0000B49F (0x10 bytes), align: 2
  Segment part 30.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B4A0 - 0000B4AF (0x10 bytes), align: 2
  Segment part 31.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B4B0 - 0000B4BF (0x10 bytes), align: 2
  Segment part 32.            Intra module refs:   Segment part 34
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B4C0 - 0000B53B (0x7c bytes), align: 2
  Segment part 35.            Intra module refs:   IconPack::LoadDefaultIP()
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003A68 - 00003A8F (0x28 bytes), align: 2
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IconPack::new IconPack()
                                   00003A68        DaemonCSM::OnCreate(CSM_RAM *) (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003A90 - 00003AAB (0x1c bytes), align: 2
  Segment part 40.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IconPack::delete ~IconPack(IconPack *)
                                   00003A90        DaemonCSM::OnClose(CSM_RAM *) (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003AAC - 00003B8B (0xe0 bytes), align: 2
  Segment part 42.            Intra module refs:   IconPack::new IconPack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IconPack::LoadIconPack()
                                   00003AAC 
               stack 1 = 00000000 ( 00000114 )
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003B8C - 00003BC7 (0x3c bytes), align: 2
  Segment part 44.            Intra module refs:   IconPack::delete ~IconPack(IconPack *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IconPack::FreeIconPack()
                                   00003B8C 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 45. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003BC8 - 00003BE3 (0x1c bytes), align: 2
  Segment part 46.            Intra module refs:   IconPack::FreeIconPack()
                                                   IconPack::new IconPack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IconPack::LoadDefaultIP()
                                   00003BC8 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 47. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 48. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IconPack::ZeroIconPack()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 49. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003BE4 - 00003CE7 (0x104 bytes), align: 2
  Segment part 50.            Intra module refs:   IconPack::LoadIconPack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IconPack::InitIconPack()
                                   00003BE4 
    -------------------------------------------------------------------------
CODE
  Segment part 51. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 52. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IconPack::IconPack()    
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 53. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 54. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IconPack::~IconPack()   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 55. NOT NEEDED.Intra module refs:   IconPack::new IconPack()
    -------------------------------------------------------------------------
CODE
  Segment part 56. NOT NEEDED.Intra module refs:   IconPack::FreeIconPack()
                                                   IconPack::delete ~IconPack(IconPack *)
    -------------------------------------------------------------------------
CODE
  Segment part 57. NOT NEEDED.Intra module refs:   IconPack::LoadIconPack()
    -------------------------------------------------------------------------
CODE
  Segment part 58. NOT NEEDED.Intra module refs:   IconPack::LoadIconPack()
    -------------------------------------------------------------------------
CODE
  Segment part 59. NOT NEEDED.Intra module refs:   IconPack::LoadIconPack()
    -------------------------------------------------------------------------
CODE
  Segment part 60. NOT NEEDED.Intra module refs:   IconPack::LoadIconPack()
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: CODE_AREA 0000BFD4 - 0000BFD7 (0x4 bytes), align: 2
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IP                      0000BFD4        Segment part 22 (DaemonCSM)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000070 - 000000E7 (0x78 bytes), align: 2
  Segment part 34.            Intra module refs:   IconNames
    -------------------------------------------------------------------------
INITTAB
  Segment part 61. TENTATIVE. Used definition from AdrList
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        
    -------------------------------------------------------------------------
DATA_ID
  Segment part 62. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 63. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\KeyHook.r79
  PROGRAM MODULE, NAME : KeyHook

  SEGMENTS IN THE MODULE
  ======================
DATA_Z
  Relative segment, address: CODE_AREA 0000BFD8 - 0000BFDB (0x4 bytes), align: 2
  Segment part 2.             Intra module refs:   KeyHook::HookProc(int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KeyHook::mode           0000BFD8 
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003CE8 - 00003CF7 (0x10 bytes), align: 2
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KeyHook::Create()       00003CE8        DaemonCSM::OnCreate(CSM_RAM *) (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003CF8 - 00003DFF (0x108 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KeyHook::HookProc(int, int)
                                   00003CF8 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003E00 - 00003E0F (0x10 bytes), align: 2
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KeyHook::Remove()       00003E00        DaemonCSM::OnClose(CSM_RAM *) (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003E10 - 00003E13 (0x4 bytes), align: 2
  Segment part 9.             Intra module refs:   KeyHook::Create()
                                                   KeyHook::Remove()
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003E14 - 00003E6F (0x5c bytes), align: 2
  Segment part 11.            Intra module refs:   KeyHook::HookProc(int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KeyHook::IsSS()         00003E14 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003E70 - 00003E9B (0x2c bytes), align: 2
  Segment part 13.            Intra module refs:   KeyHook::HookProc(int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KeyHook::IsIdle()       00003E70 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.Intra module refs:   KeyHook::HookProc(int, int)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Segment part 15. TENTATIVE. Used definition from AdrList
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\LangPack.r79
  PROGRAM MODULE, NAME : LangPack

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Relative segment, address: CODE_AREA 0000B53C - 0000B547 (0xc bytes), align: 2
  Segment part 2.             Intra module refs:   LangPack::LoadLangFile()
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BEA5 - 0000BEA7 (0x3 bytes), align: 0
  Segment part 3.             Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B548 - 0000B54F (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B550 - 0000B55B (0xc bytes), align: 2
  Segment part 5.             Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B55C - 0000B563 (0x8 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B564 - 0000B56B (0x8 bytes), align: 2
  Segment part 7.             Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B56C - 0000B573 (0x8 bytes), align: 2
  Segment part 8.             Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B574 - 0000B57B (0x8 bytes), align: 2
  Segment part 9.             Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B57C - 0000B587 (0xc bytes), align: 2
  Segment part 10.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B588 - 0000B58F (0x8 bytes), align: 2
  Segment part 11.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B590 - 0000B597 (0x8 bytes), align: 2
  Segment part 12.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B598 - 0000B59F (0x8 bytes), align: 2
  Segment part 13.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B5A0 - 0000B5A7 (0x8 bytes), align: 2
  Segment part 14.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B5A8 - 0000B5AF (0x8 bytes), align: 2
  Segment part 15.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B5B0 - 0000B5B7 (0x8 bytes), align: 2
  Segment part 16.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B5B8 - 0000B5C3 (0xc bytes), align: 2
  Segment part 17.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B5C4 - 0000B5CB (0x8 bytes), align: 2
  Segment part 18.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B5CC - 0000B5D3 (0x8 bytes), align: 2
  Segment part 19.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B5D4 - 0000B5DB (0x8 bytes), align: 2
  Segment part 20.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B5DC - 0000B5E3 (0x8 bytes), align: 2
  Segment part 21.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B5E4 - 0000B5F3 (0x10 bytes), align: 2
  Segment part 22.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B5F4 - 0000B603 (0x10 bytes), align: 2
  Segment part 23.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B604 - 0000B623 (0x20 bytes), align: 2
  Segment part 24.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B624 - 0000B637 (0x14 bytes), align: 2
  Segment part 25.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B638 - 0000B63F (0x8 bytes), align: 2
  Segment part 26.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B640 - 0000B647 (0x8 bytes), align: 2
  Segment part 27.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B648 - 0000B64F (0x8 bytes), align: 2
  Segment part 28.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B650 - 0000B657 (0x8 bytes), align: 2
  Segment part 29.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B658 - 0000B667 (0x10 bytes), align: 2
  Segment part 30.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B668 - 0000B66F (0x8 bytes), align: 2
  Segment part 31.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B670 - 0000B67B (0xc bytes), align: 2
  Segment part 32.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B67C - 0000B683 (0x8 bytes), align: 2
  Segment part 33.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B684 - 0000B697 (0x14 bytes), align: 2
  Segment part 34.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B698 - 0000B6AF (0x18 bytes), align: 2
  Segment part 35.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B6B0 - 0000B6BB (0xc bytes), align: 2
  Segment part 36.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B6BC - 0000B6D3 (0x18 bytes), align: 2
  Segment part 37.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B6D4 - 0000B6EF (0x1c bytes), align: 2
  Segment part 38.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B6F0 - 0000B6F7 (0x8 bytes), align: 2
  Segment part 39.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B6F8 - 0000B70F (0x18 bytes), align: 2
  Segment part 40.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B710 - 0000B71F (0x10 bytes), align: 2
  Segment part 41.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B720 - 0000B72F (0x10 bytes), align: 2
  Segment part 42.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B730 - 0000B73F (0x10 bytes), align: 2
  Segment part 43.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B740 - 0000B757 (0x18 bytes), align: 2
  Segment part 44.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B758 - 0000B767 (0x10 bytes), align: 2
  Segment part 45.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B768 - 0000B783 (0x1c bytes), align: 2
  Segment part 46.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B784 - 0000B7AF (0x2c bytes), align: 2
  Segment part 47.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B7B0 - 0000B7C7 (0x18 bytes), align: 2
  Segment part 48.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B7C8 - 0000B7D3 (0xc bytes), align: 2
  Segment part 49.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B7D4 - 0000B7E7 (0x14 bytes), align: 2
  Segment part 50.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B7E8 - 0000B7FB (0x14 bytes), align: 2
  Segment part 51.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B7FC - 0000B817 (0x1c bytes), align: 2
  Segment part 52.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B818 - 0000B823 (0xc bytes), align: 2
  Segment part 53.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B824 - 0000B837 (0x14 bytes), align: 2
  Segment part 54.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B838 - 0000B84B (0x14 bytes), align: 2
  Segment part 55.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B84C - 0000B85B (0x10 bytes), align: 2
  Segment part 56.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B85C - 0000B863 (0x8 bytes), align: 2
  Segment part 57.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B864 - 0000B873 (0x10 bytes), align: 2
  Segment part 58.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B874 - 0000B887 (0x14 bytes), align: 2
  Segment part 59.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B888 - 0000B8A3 (0x1c bytes), align: 2
  Segment part 60.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B8A4 - 0000B8AF (0xc bytes), align: 2
  Segment part 61.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B8B0 - 0000B8C3 (0x14 bytes), align: 2
  Segment part 62.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B8C4 - 0000B8CF (0xc bytes), align: 2
  Segment part 63.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B8D0 - 0000B8DB (0xc bytes), align: 2
  Segment part 64.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B8DC - 0000B8E7 (0xc bytes), align: 2
  Segment part 65.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B8E8 - 0000B8EF (0x8 bytes), align: 2
  Segment part 66.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B8F0 - 0000B8FF (0x10 bytes), align: 2
  Segment part 67.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B900 - 0000B90F (0x10 bytes), align: 2
  Segment part 68.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B910 - 0000B91B (0xc bytes), align: 2
  Segment part 69.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B91C - 0000B923 (0x8 bytes), align: 2
  Segment part 70.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B924 - 0000B933 (0x10 bytes), align: 2
  Segment part 71.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B934 - 0000B93B (0x8 bytes), align: 2
  Segment part 72.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B93C - 0000B943 (0x8 bytes), align: 2
  Segment part 73.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BEA8 - 0000BEAA (0x3 bytes), align: 0
  Segment part 74.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B944 - 0000B94B (0x8 bytes), align: 2
  Segment part 75.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B94C - 0000B953 (0x8 bytes), align: 2
  Segment part 76.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B954 - 0000B95F (0xc bytes), align: 2
  Segment part 77.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B960 - 0000B967 (0x8 bytes), align: 2
  Segment part 78.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B968 - 0000B977 (0x10 bytes), align: 2
  Segment part 79.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B978 - 0000B97F (0x8 bytes), align: 2
  Segment part 80.            Intra module refs:   Segment part 82
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 000000E8 - 00000223 (0x13c bytes), align: 2
  Segment part 81.            Intra module refs:   LangPack::LoadLgpDefault()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           df_LGPS                 000000E8 
    -------------------------------------------------------------------------
CODE
  Segment part 84. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003E9C - 00003EB7 (0x1c bytes), align: 2
  Segment part 85.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::new LangPack()
                                   00003E9C        DaemonCSM::OnCreate(CSM_RAM *) (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 86. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003EB8 - 00003ED3 (0x1c bytes), align: 2
  Segment part 87.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::delete ~LangPack(LangPack *)
                                   00003EB8        DaemonCSM::OnClose(CSM_RAM *) (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 88. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 89. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::FreeLangPack()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 90. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 91. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::LoadLangPack()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 92. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00003ED4 - 0000400B (0x138 bytes), align: 2
  Segment part 93.            Intra module refs:   LangPack::LangPack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::LoadLangFile()
                                   00003ED4 
               stack 1 = 00000000 ( 00000094 )
    -------------------------------------------------------------------------
CODE
  Segment part 94. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000400C - 00004027 (0x1c bytes), align: 2
  Segment part 95.            Intra module refs:   LangPack::LangPack()
                                                   LangPack::~LangPack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::LoadLgpDefault()
                                   0000400C 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 96. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004028 - 0000405B (0x34 bytes), align: 2
  Segment part 97.            Intra module refs:   LangPack::LoadLangFile()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::GotoLangLineEnd(char *)
                                   00004028 
    -------------------------------------------------------------------------
CODE
  Segment part 98. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000405C - 00004087 (0x2c bytes), align: 2
  Segment part 99.            Intra module refs:   LangPack::LoadLangFile()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::GotoLangLineStart(char *)
                                   0000405C 
    -------------------------------------------------------------------------
CODE
  Segment part 100. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004088 - 0000423F (0x1b8 bytes), align: 2
  Segment part 101.           Intra module refs:   LangPack::LangPack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::InitLgp()     00004088 
               stack 1 = 00000000 ( 0000004C )
    -------------------------------------------------------------------------
CODE
  Segment part 102. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004240 - 0000426F (0x30 bytes), align: 2
  Segment part 103.           Intra module refs:   LangPack::new LangPack()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::LangPack()    00004240 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 104. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004270 - 00004297 (0x28 bytes), align: 2
  Segment part 105.           Intra module refs:   LangPack::delete ~LangPack(LangPack *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LangPack::~LangPack()   00004270 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 106. NOT NEEDED.Intra module refs   LangPack::new LangPack()
    -------------------------------------------------------------------------
CODE
  Segment part 107. NOT NEEDED.Intra module refs   LangPack::delete ~LangPack(LangPack *)
                                                   LangPack::~LangPack()
    -------------------------------------------------------------------------
CODE
  Segment part 108. NOT NEEDED.Intra module refs   LangPack::LoadLangFile()
    -------------------------------------------------------------------------
CODE
  Segment part 109. NOT NEEDED.Intra module refs   LangPack::LoadLangFile()
    -------------------------------------------------------------------------
CODE
  Segment part 110. NOT NEEDED.Intra module refs   LangPack::LoadLangFile()
    -------------------------------------------------------------------------
CODE
  Segment part 111. NOT NEEDED.Intra module refs   LangPack::LoadLangFile()
    -------------------------------------------------------------------------
CODE
  Segment part 112. NOT NEEDED.Intra module refs   LangPack::LoadLangFile()
    -------------------------------------------------------------------------
CODE
  Segment part 113. NOT NEEDED.Intra module refs   LangPack::LoadLangFile()
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: CODE_AREA 0000BFDC - 0000BFDF (0x4 bytes), align: 2
  Segment part 83.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LGP                     0000BFDC        AdrList::FindName(WSHDR *, char const *) (AdrList)
                                                   NAbCSM::CreateNAbCSM(void *, int, char *, int) (NativeAddressbook)
                                                   Segment part 163 (SmsData)
                                                   Segment part 21 (DaemonCSM)
                                                   Segment part 26 (MainMenu)
                                                   Segment part 26 (PopupGUI)
                                                   Segment part 28 (Template)
                                                   Segment part 34 (EditGUI)
                                                   Segment part 40 (OthersMenu)
                                                   Segment part 45 (SmsListMenu)
                                                   Segment part 49 (EditGUI)
                                                   SiememPDU::DoSmsReport(SDLIST *, char *, WSHDR *) (SiemensPDU)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 000000E8 - 00000223 (0x13c bytes), align: 2
  Segment part 82.            Intra module refs:   df_LGPS
    -------------------------------------------------------------------------
INITTAB
  Segment part 114. TENTATIVE. Used definition from AdrList
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        
    -------------------------------------------------------------------------
DATA_ID
  Segment part 115. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 116. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\MainMenu.r79
  PROGRAM MODULE, NAME : MainMenu

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 00000224 - 0000023B (0x18 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main_menu_sk            00000224        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B980 - 0000B987 (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   MainMenu::MainMenu()
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 0000023C - 0000024F (0x14 bytes), align: 2
  Segment part 5.             Intra module refs:   Segment part 32
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main_menuhdr            0000023C        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainMenu::delete ~MainMenu(MainMenu *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004298 - 000042B3 (0x1c bytes), align: 2
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainMenu::new MainMenu()
                                   00004298        TabGUI::CreateTabGUI(DLG_CSM *) (TabGUI)
                                                   TabGUI::ReCreateTabGUI(DLG_CSM *) (TabGUI)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000042B4 - 00004317 (0x64 bytes), align: 2
  Segment part 15.            Intra module refs:   MainMenu::new MainMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainMenu::MainMenu()    000042B4 
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainMenu::~MainMenu()   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainMenu::CreateMainMenu(DLG_CSM *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004318 - 0000443B (0x124 bytes), align: 2
  Segment part 21.            Intra module refs:   MainMenu::MainMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainMenu::OnKey(void *, GUI_MSG *)
                                   00004318 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000443C - 0000449B (0x60 bytes), align: 2
  Segment part 23.            Intra module refs:   MainMenu::MainMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainMenu::GHook(void *, int)
                                   0000443C 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000250 - 00000283 (0x34 bytes), align: 2
  Segment part 7.             Intra module refs:   MainMenu::ItemProc(void *, int, void *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MM_ITEM_ICONS           00000268        IconPack::InitIconPack() (IconPack)
           MM_ITEM_LGPS            00000250        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B988 - 0000B98F (0x8 bytes), align: 2
  Segment part 9.             Intra module refs:   MainMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000449C - 0000459F (0x104 bytes), align: 2
  Segment part 25.            Intra module refs:   MainMenu::MainMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainMenu::ItemProc(void *, int, void *)
                                   0000449C 
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000045A0 - 000045A3 (0x4 bytes), align: 2
  Segment part 26.            Intra module refs:   MainMenu::GHook(void *, int)
                                                   MainMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainMenu::UpdateCSMName(DLG_CSM *, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000045A4 - 000045A7 (0x4 bytes), align: 2
  Segment part 29.            Intra module refs:   MainMenu::GHook(void *, int)
                                                   MainMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000045A8 - 0000464B (0xa4 bytes), align: 2
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MainMenu::GetMainMenuGUI(DLG_CSM *, int)
                                   000045A8        TabGUI::CreateTabGUI(DLG_CSM *) (TabGUI)
                                                   TabGUI::ReCreateTabGUI(DLG_CSM *) (TabGUI)
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000464C - 0000464F (0x4 bytes), align: 2
  Segment part 32.            Intra module refs:   MainMenu::GetMainMenuGUI(DLG_CSM *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.Intra module refs:   MainMenu::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.Intra module refs:   MainMenu::new MainMenu()
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.Intra module refs:   MainMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.Intra module refs:   MainMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.Intra module refs:   MainMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.Intra module refs:   MainMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.Intra module refs:   MainMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.Intra module refs:   MainMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 42. NOT NEEDED.Intra module refs:   MainMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.Intra module refs:   MainMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000224 - 0000023B (0x18 bytes), align: 2
  Segment part 3.             Intra module refs:   main_menu_sk
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 0000023C - 0000024F (0x14 bytes), align: 2
  Segment part 6.             Intra module refs:   main_menuhdr
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000250 - 00000283 (0x34 bytes), align: 2
  Segment part 8.             Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
DATA_ID
  Segment part 44. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 45. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\Mss3App.r79
  PROGRAM MODULE, NAME : Mss3App

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004650 - 000046F3 (0xa4 bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Mss3App::Start(char *, char *)
                                   00004650        main (main)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000046F4 - 00004703 (0x10 bytes), align: 2
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Mss3App::InitSetting()
                                   000046F4        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004704 - 000047AB (0xa8 bytes), align: 2
  Segment part 9.             Intra module refs:   Mss3App::InitSetting()
                                                   Mss3App::Start(char *, char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Mss3App::InitDatPath()
                                   00004704 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000047AC - 000047C7 (0x1c bytes), align: 2
  Segment part 11.            Intra module refs:   Mss3App::Start(char *, char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Mss3App::Killer()       000047AC        DaemonCSM::OnClose(CSM_RAM *) (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000047C8 - 0000486F (0xa8 bytes), align: 2
  Segment part 13.            Intra module refs:   Mss3App::Start(char *, char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Mss3App::IsAlreadyRuning()
                                   000047C8 
               stack 1 = 00000000 ( 00000040 )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.Intra module refs:   Mss3App::Start(char *, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.Intra module refs:   Mss3App::Start(char *, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.Intra module refs:   Mss3App::Start(char *, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.Intra module refs:   Mss3App::InitSetting()
                                                   Mss3App::Start(char *, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.Intra module refs:   Mss3App::Start(char *, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.Intra module refs:   Mss3App::Start(char *, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.Intra module refs:   Mss3App::Killer()
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.Intra module refs:   Mss3App::IsAlreadyRuning()
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B990 - 0000B997 (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   Mss3App::IsAlreadyRuning()
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B998 - 0000B9A3 (0xc bytes), align: 2
  Segment part 3.             Intra module refs:   Mss3App::InitDatPath()

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\MyIpcMessage.r79
  PROGRAM MODULE, NAME : MyIpcMessage

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Relative segment, address: CODE_AREA 0000B9A4 - 0000B9AF (0xc bytes), align: 2
  Segment part 2.             Intra module refs:   SendMyIpc(int)
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000284 - 0000028F (0xc bytes), align: 2
  Segment part 3.             Intra module refs:   SendMyIpc(int, void *)
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004870 - 00004897 (0x28 bytes), align: 2
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendMyIpc(int)          00004870        DaemonCSM::DoNewProc() (DaemonCSM)
                                                   DaemonCSM::UpdateNProc() (DaemonCSM)
                                                   KeyHook::HookProc(int, int) (KeyHook)
                                                   Mss3App::Start(char *, char *) (Mss3App)
                                                   PopupNewIn::GHook(void *, int) (PopupGUI)
                                                   PopupNewIn::OnKey(void *, GUI_MSG *) (PopupGUI)
                                                   SendList::SendEnd(int) (SendList)
                                                   SmsData::CheckAll() (SmsData)
                                                   SmsData::CheckDat() (SmsData)
                                                   SmsData::CheckFolder(int) (SmsData)
                                                   SmsData::CheckSDList() (SmsData)
                                                   SmsData::DeleteAllMss() (SmsData)
                                                   SmsData::MoveAllToArchive() (SmsData)
                                                   SmsData::ReadAllDatMsg() (SmsData)
                                                   SmsData::ReadAllMessage() (SmsData)
                                                   SmsData::ReadFolder(int) (SmsData)
                                                   Vibra::VibraNextTmrProc() (Vibra)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004898 - 000048D3 (0x3c bytes), align: 2
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendMyIpc(int, void *)
                                   00004898        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
                                                   DaemonCSM::StartDialog(int, void *) (DaemonCSM)
                                                   EditGUI::EditSendSMS(WSHDR *) (EditGUI)
                                                   Mss3App::Start(char *, char *) (Mss3App)
                                                   NAbCSM::CreateNAbCSM(void *, int, char *, int) (NativeAddressbook)
                                                   PopupNewIn::GHook(void *, int) (PopupGUI)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000284 - 0000028F (0xc bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 3
    -------------------------------------------------------------------------
DATA_ID
  Segment part 9. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 10. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\NativeAddressbook.r79
  PROGRAM MODULE, NAME : NativeAddressbook

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NAbCSM::delete ~NAbCSM(NAbCSM *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000048D4 - 000048EF (0x1c bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NAbCSM::new NAbCSM()    000048D4        EditGUI::EdOpUserItem(USR_MENU_ITEM *) (EditGUI)
                                                   EditGUI::OnKey(void *, GUI_MSG *) (EditGUI)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *) (EditGUI)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000048F0 - 00004973 (0x84 bytes), align: 2
  Segment part 7.             Intra module refs:   NAbCSM::new NAbCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NAbCSM::NAbCSM()        000048F0 
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NAbCSM::~NAbCSM()       
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004974 - 00004B8F (0x21c bytes), align: 2
  Segment part 11.            Intra module refs:   NAbCSM::NAbCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *)
                                   00004974 
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004B90 - 00004C4B (0xbc bytes), align: 2
  Segment part 13.            Intra module refs:   NAbCSM::NAbCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NAbCSM::OnCreate(CSM_RAM *)
                                   00004B90 
               stack 1 = 00000000 ( 00000084 )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004C4C - 00004CA3 (0x58 bytes), align: 2
  Segment part 15.            Intra module refs:   NAbCSM::NAbCSM()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NAbCSM::OnClose(CSM_RAM *)
                                   00004C4C 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004CA4 - 00004D7B (0xd8 bytes), align: 2
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NAbCSM::CreateNAbCSM(void *, int, char *, int)
                                   00004CA4        EditGUI::EdOpUserItem(USR_MENU_ITEM *) (EditGUI)
                                                   EditGUI::OnKey(void *, GUI_MSG *) (EditGUI)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *) (EditGUI)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
               stack 1 = 00000000 ( 0000005C )
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.Intra module refs:   NAbCSM::CreateNAbCSM(void *, int, char *, int)
                                                   NAbCSM::OnClose(CSM_RAM *)
                                                   NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.Intra module refs:   NAbCSM::new NAbCSM()
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.Intra module refs:   NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.Intra module refs:   NAbCSM::CreateNAbCSM(void *, int, char *, int)
                                                   NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.Intra module refs:   NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.Intra module refs:   NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.Intra module refs:   NAbCSM::OnCreate(CSM_RAM *)
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.Intra module refs:   NAbCSM::CreateNAbCSM(void *, int, char *, int)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\NumList.r79
  PROGRAM MODULE, NAME : NumList

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004D7C - 00004D97 (0x1c bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::new NumList()
                                   00004D7C        EditGUI::EditGUI() (EditGUI)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004D98 - 00004DB3 (0x1c bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::delete ~NumList(NumList *)
                                   00004D98        EditGUI::~EditGUI() (EditGUI)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::NumList()      
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::~NumList()     
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004DB4 - 00004DE7 (0x34 bytes), align: 2
  Segment part 11.            Intra module refs:   NumList::AddNumsToList(char const *)
                                                   NumList::AddToList(char const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::AllocNL()      00004DB4 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004DE8 - 00004E23 (0x3c bytes), align: 2
  Segment part 13.            Intra module refs:   NumList::delete ~NumList(NumList *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::FreeList()     00004DE8 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004E24 - 00004EBB (0x98 bytes), align: 2
  Segment part 15.            Intra module refs:   NumList::AddNumsToList(char const *)
                                                   NumList::AddToList(char const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::AddToList_end(_NLST *)
                                   00004E24 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::AddToList(_NLST *, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004EBC - 00004EDF (0x24 bytes), align: 2
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::FindNL(int)    00004EBC        EditGUI::AddNumberBlank(void *) (EditGUI)
                                                   EditGUI::GHook(void *, int) (EditGUI)
                                                   EditGUI::InsertNumber(void *, char *) (EditGUI)
                                                   EditGUI::SetNumber(void *, char *) (EditGUI)
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::AddToList_first(_NLST *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::AddToList(_NLST *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004EE0 - 00004FC3 (0xe4 bytes), align: 2
  Segment part 25.            Intra module refs:   NumList::AddNumsToList(char const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::AddToList(char const *)
                                   00004EE0        EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int) (EditGUI)
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::AddToList(char const *, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00004FC4 - 00005043 (0x80 bytes), align: 2
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::DeleteNL(_NLST *)
                                   00004FC4        EditGUI::GHook(void *, int) (EditGUI)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::DeleteNL(int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005044 - 0000510F (0xcc bytes), align: 2
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::AddNumsToList(char const *)
                                   00005044        EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int) (EditGUI)
                                                   EditGUI::CreateEditGUI(DLG_CSM *, char const *) (EditGUI)
               stack 1 = 00000000 ( 00000094 )
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::UpdateNL(char const *, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005110 - 00005163 (0x54 bytes), align: 2
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::UpdateNL(_NLST *, char const *)
                                   00005110        EditGUI::SetNumber(void *, char *) (EditGUI)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005164 - 000051CB (0x68 bytes), align: 2
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::InsertNL_front(_NLST *, char const *)
                                   00005164        EditGUI::AddNumberBlank(void *) (EditGUI)
                                                   EditGUI::InsertNumber(void *, char *) (EditGUI)
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000051CC - 00005243 (0x78 bytes), align: 2
  Segment part 41.            Intra module refs:   NumList::InsertNL_behind(_NLST *, char const *)
                                                   NumList::InsertNL_front(_NLST *, char const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::AllocNL(char const *)
                                   000051CC 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005244 - 00005247 (0x4 bytes), align: 2
  Segment part 42.            Intra module refs:   NumList::AddToList(char const *)
                                                   NumList::AllocNL(char const *)
                                                   NumList::UpdateNL(_NLST *, char const *)
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005248 - 00005297 (0x50 bytes), align: 2
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::InsertNL_behind(_NLST *, char const *)
                                   00005248        EditGUI::AddNumberBlank(void *) (EditGUI)
                                                   EditGUI::InsertNumber(void *, char *) (EditGUI)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 45. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005298 - 000052B7 (0x20 bytes), align: 2
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::ClearNL(_NLST *)
                                   00005298        EditGUI::GHook(void *, int) (EditGUI)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 47. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000052B8 - 000052F3 (0x3c bytes), align: 2
  Segment part 48.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumList::IsNumExist(char const *)
                                   000052B8        EditGUI::InsertNumber(void *, char *) (EditGUI)
                                                   EditGUI::SetNumber(void *, char *) (EditGUI)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 49. NOT NEEDED.Intra module refs:   NumList::AllocNL()
                                                   NumList::AllocNL(char const *)
                                                   NumList::new NumList()
    -------------------------------------------------------------------------
CODE
  Segment part 50. NOT NEEDED.Intra module refs:   NumList::DeleteNL(_NLST *)
                                                   NumList::FreeList()
                                                   NumList::delete ~NumList(NumList *)
    -------------------------------------------------------------------------
CODE
  Segment part 51. NOT NEEDED.Intra module refs:   NumList::AddToList(char const *)
                                                   NumList::AllocNL(char const *)
                                                   NumList::UpdateNL(_NLST *, char const *)
    -------------------------------------------------------------------------
CODE
  Segment part 52. NOT NEEDED.Intra module refs:   NumList::AddToList(char const *)
                                                   NumList::AllocNL(char const *)
                                                   NumList::UpdateNL(_NLST *, char const *)
    -------------------------------------------------------------------------
CODE
  Segment part 53. NOT NEEDED.Intra module refs:   NumList::IsNumExist(char const *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\OthersMenu.r79
  PROGRAM MODULE, NAME : OthersMenu

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Relative segment, address: CODE_AREA 0000B9B0 - 0000B9BB (0xc bytes), align: 2
  Segment part 2.             Intra module refs:   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000B9BC - 0000BA1B (0x60 bytes), align: 2
  Segment part 3.             Intra module refs:   OthMenu::ShowAbout()
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BA1C - 0000BA2F (0x14 bytes), align: 2
  Segment part 4.             Intra module refs:   OthMenu::CreateOthMenu(DLG_CSM *)
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::delete ~OthMenu(OthMenu *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000052F4 - 0000530F (0x1c bytes), align: 2
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::new OthMenu()
                                   000052F4        MainMenu::OnKey(void *, GUI_MSG *) (MainMenu)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005310 - 000053EB (0xdc bytes), align: 2
  Segment part 13.            Intra module refs:   Segment part 30
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OpenArchive()           00005310        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000208 )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000053EC - 0000544F (0x64 bytes), align: 2
  Segment part 15.            Intra module refs:   OthMenu::new OthMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::OthMenu()      000053EC 
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::~OthMenu()     
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005450 - 0000553B (0xec bytes), align: 2
  Segment part 19.            Intra module refs:   OthMenu::OthMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::OnKey(void *, GUI_MSG *)
                                   00005450 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000553C - 000055CB (0x90 bytes), align: 2
  Segment part 21.            Intra module refs:   OthMenu::OthMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::GHook(void *, int)
                                   0000553C 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000290 - 000002AB (0x1c bytes), align: 2
  Segment part 5.             Intra module refs:   OthMenu::ItemProc(void *, int, void *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OTH_ITEM_LGPS           00000290        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000055CC - 0000561F (0x54 bytes), align: 2
  Segment part 23.            Intra module refs:   OthMenu::OthMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::ItemProc(void *, int, void *)
                                   000055CC 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005620 - 0000564B (0x2c bytes), align: 2
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::CreateOthMenu(DLG_CSM *)
                                   00005620        MainMenu::OnKey(void *, GUI_MSG *) (MainMenu)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000564C - 0000568F (0x44 bytes), align: 2
  Segment part 27.            Intra module refs:   OthMenu::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::OpenCfgFile()
                                   0000564C 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::OpenArchiveOTH()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005690 - 00005693 (0x4 bytes), align: 2
  Segment part 30.            Intra module refs:   OthMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::MoveAllMss()   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005694 - 00005697 (0x4 bytes), align: 2
  Segment part 33.            Intra module refs:   OthMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005698 - 000056D3 (0x3c bytes), align: 2
  Segment part 35.            Intra module refs:   OthMenu::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::ShowAbout()    00005698 
               stack 1 = 00000000 ( 00000088 )
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: CODE_AREA 0000BFE0 - 0000FFDF (0x4000 bytes), align: 2
  Segment part 7.             Intra module refs:   OthMenu::ShowHelp()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           help_buf                0000BFE0 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000056D4 - 000057C7 (0xf4 bytes), align: 2
  Segment part 37.            Intra module refs:   OthMenu::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::ShowHelp()     000056D4 
               stack 1 = 00000000 ( 00000098 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000057C8 - 000057CB (0x4 bytes), align: 2
  Segment part 38.            Intra module refs:   OthMenu::GHook(void *, int)
                                                   OthMenu::ItemProc(void *, int, void *)
                                                   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000057CC - 000057CF (0x4 bytes), align: 2
  Segment part 39.            Intra module refs:   OpenArchive()
                                                   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000057D0 - 000057D3 (0x4 bytes), align: 2
  Segment part 40.            Intra module refs:   OthMenu::GHook(void *, int)
                                                   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 42. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::ExportTxtAll()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000057D4 - 000057D7 (0x4 bytes), align: 2
  Segment part 43.            Intra module refs:   OthMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 44. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 45. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OthMenu::DelAllMss()    
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000057D8 - 000057DB (0x4 bytes), align: 2
  Segment part 46.            Intra module refs:   OthMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000057DC - 000057DF (0x4 bytes), align: 2
  Segment part 47.            Intra module refs:   OthMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 48. NOT NEEDED.Intra module refs:   OthMenu::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 49. NOT NEEDED.Intra module refs:   OthMenu::new OthMenu()
    -------------------------------------------------------------------------
CODE
  Segment part 50. NOT NEEDED.Intra module refs:   OthMenu::CreateOthMenu(DLG_CSM *)
    -------------------------------------------------------------------------
CODE
  Segment part 51. NOT NEEDED.Intra module refs:   OthMenu::ShowAbout()
    -------------------------------------------------------------------------
CODE
  Segment part 52. NOT NEEDED.Intra module refs:   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
CODE
  Segment part 53. NOT NEEDED.Intra module refs:   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
CODE
  Segment part 54. NOT NEEDED.Intra module refs:   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
CODE
  Segment part 55. NOT NEEDED.Intra module refs:   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
CODE
  Segment part 56. NOT NEEDED.Intra module refs:   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
CODE
  Segment part 57. NOT NEEDED.Intra module refs:   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
CODE
  Segment part 58. NOT NEEDED.Intra module refs:   OthMenu::ShowHelp()
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000290 - 000002AB (0x1c bytes), align: 2
  Segment part 6.             Intra module refs:   OTH_ITEM_LGPS
    -------------------------------------------------------------------------
INITTAB
  Segment part 59. TENTATIVE. Used definition from AdrList
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        
    -------------------------------------------------------------------------
DATA_ID
  Segment part 60. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 61. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\PlaySound.r79
  PROGRAM MODULE, NAME : PlaySound

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000057E0 - 000057FB (0x1c bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PlaySouNd::new PlaySouNd()
                                   000057E0        DaemonCSM::DaemonCSM() (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000057FC - 00005817 (0x1c bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PlaySouNd::delete ~PlaySouNd(PlaySouNd *)
                                   000057FC        DaemonCSM::~DaemonCSM() (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005818 - 0000583B (0x24 bytes), align: 2
  Segment part 7.             Intra module refs:   PlaySouNd::delete ~PlaySouNd(PlaySouNd *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PlaySouNd::~PlaySouNd()
                                   00005818 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PlaySouNd::PlaySouNd()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000583C - 0000598B (0x150 bytes), align: 2
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PlaySouNd::PlayStart(PlaySouNd *, char const *)
                                   0000583C        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 000002F4 )
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000598C - 000059AF (0x24 bytes), align: 2
  Segment part 13.            Intra module refs:   PlaySouNd::PlayStart(PlaySouNd *, char const *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PlaySouNd::PlayStop()   0000598C        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000059B0 - 000059BB (0xc bytes), align: 2
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PlaySouNd::PlayDone()   000059B0        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000059BC - 000059C3 (0x8 bytes), align: 2
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PlaySouNd::GetHandle()
                                   000059BC        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.Intra module refs:   PlaySouNd::new PlaySouNd()
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.Intra module refs:   PlaySouNd::delete ~PlaySouNd(PlaySouNd *)
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.Intra module refs:   PlaySouNd::PlayStart(PlaySouNd *, char const *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\PopupGUI.r79
  PROGRAM MODULE, NAME : PopupGUI

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 000002AC - 000002C3 (0x18 bytes), align: 2
  Segment part 3.             Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pni_sk                  000002AC        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BA30 - 0000BA47 (0x18 bytes), align: 2
  Segment part 2.             Intra module refs:   PopupNewIn::CreatePopupNewIn(DLG_CSM *, _SDLIST *)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BA48 - 0000BA4F (0x8 bytes), align: 2
  Segment part 5.             Intra module refs:   PopupNewIn::PopupNewIn()
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PopupNewIn::delete ~PopupNewIn(PopupNewIn *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000059C4 - 000059DF (0x1c bytes), align: 2
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PopupNewIn::new PopupNewIn()
                                   000059C4        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000059E0 - 00005A6F (0x90 bytes), align: 2
  Segment part 15.            Intra module refs:   PopupNewIn::new PopupNewIn()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PopupNewIn::PopupNewIn()
                                   000059E0 
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PopupNewIn::~PopupNewIn()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005A70 - 00005B47 (0xd8 bytes), align: 2
  Segment part 19.            Intra module refs:   PopupNewIn::PopupNewIn()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PopupNewIn::OnKey(void *, GUI_MSG *)
                                   00005A70 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005B48 - 00005C87 (0x140 bytes), align: 2
  Segment part 21.            Intra module refs:   PopupNewIn::PopupNewIn()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PopupNewIn::GHook(void *, int)
                                   00005B48 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005C88 - 00005C8B (0x4 bytes), align: 2
  Segment part 22.            Intra module refs:   PopupNewIn::GHook(void *, int)
                                                   PopupNewIn::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005C8C - 00005D4B (0xc0 bytes), align: 2
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PopupNewIn::CreatePopupNewIn(DLG_CSM *, _SDLIST *)
                                   00005C8C        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005D4C - 00005D4F (0x4 bytes), align: 2
  Segment part 25.            Intra module refs:   PopupNewIn::CreatePopupNewIn(DLG_CSM *, _SDLIST *)
                                                   PopupNewIn::GHook(void *, int)
                                                   PopupNewIn::PopupNewIn()
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005D50 - 00005D53 (0x4 bytes), align: 2
  Segment part 26.            Intra module refs:   PopupNewIn::CreatePopupNewIn(DLG_CSM *, _SDLIST *)
                                                   PopupNewIn::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PopupNewIn::UpdateCSMName(DLG_CSM *, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005D54 - 00005D57 (0x4 bytes), align: 2
  Segment part 29.            Intra module refs:   PopupNewIn::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BA50 - 0000BA67 (0x18 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 7
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BA68 - 0000BA6F (0x8 bytes), align: 2
  Segment part 7.             Intra module refs:   Segment part 9
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 000002C4 - 000002FB (0x38 bytes), align: 2
  Segment part 8.             Intra module refs:   Segment part 38
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyShowMsg::popup        000002C4 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005D58 - 00005D5B (0x4 bytes), align: 2
  Segment part 31.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyShowMsg::GHook(void *, int)
                                   00005D58 
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005D5C - 00005D7F (0x24 bytes), align: 2
  Segment part 33.            Intra module refs:   Segment part 9
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyShowMsg::OnKey(void *, GUI_MSG *)
                                   00005D5C 
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyShowMsg::MyShow(int, WSHDR *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005D80 - 00005DA3 (0x24 bytes), align: 2
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MyShowMsg::MyShow(int, char *)
                                   00005D80        EditGUI::OnKey(void *, GUI_MSG *) (EditGUI)
                                                   OthMenu::ShowAbout() (OthersMenu)
                                                   SmsListMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005DA4 - 00005DA7 (0x4 bytes), align: 2
  Segment part 38.            Intra module refs:   MyShowMsg::MyShow(int, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.Intra module refs:   PopupNewIn::CreatePopupNewIn(DLG_CSM *, _SDLIST *)
                                                   PopupNewIn::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.Intra module refs:   PopupNewIn::new PopupNewIn()
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.Intra module refs:   PopupNewIn::GHook(void *, int)
                                                   PopupNewIn::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 42. NOT NEEDED.Intra module refs:   PopupNewIn::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.Intra module refs:   PopupNewIn::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 44. NOT NEEDED.Intra module refs:   PopupNewIn::GHook(void *, int)
                                                   PopupNewIn::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 45. NOT NEEDED.Intra module refs:   PopupNewIn::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 46. NOT NEEDED.Intra module refs:   PopupNewIn::CreatePopupNewIn(DLG_CSM *, _SDLIST *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 000002AC - 000002C3 (0x18 bytes), align: 2
  Segment part 4.             Intra module refs:   pni_sk
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 000002C4 - 000002FB (0x38 bytes), align: 2
  Segment part 9.             Intra module refs:   MyShowMsg::popup
    -------------------------------------------------------------------------
DATA_ID
  Segment part 47. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 48. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\SendList.r79
  PROGRAM MODULE, NAME : SendList

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005DA8 - 00005DC3 (0x1c bytes), align: 2
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::new SendList()
                                   00005DA8        DaemonCSM::DaemonCSM() (DaemonCSM)
                                                   EditGUI::EditSendSMS(WSHDR *) (EditGUI)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005DC4 - 00005DDF (0x1c bytes), align: 2
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::delete ~SendList(SendList *)
                                   00005DC4        DaemonCSM::~DaemonCSM() (DaemonCSM)
                                                   EditGUI::EditSendSMS(WSHDR *) (EditGUI)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005DE0 - 00005DFF (0x20 bytes), align: 2
  Segment part 10.            Intra module refs:   SendList::AddToList(char const *, WSHDR *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::AllocSL()     00005DE0 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005E00 - 00005E4B (0x4c bytes), align: 2
  Segment part 12.            Intra module refs:   SendList::delete ~SendList(SendList *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::FreeList()    00005E00 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::SendList()    
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::~SendList()   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005E4C - 00005E9B (0x50 bytes), align: 2
  Segment part 18.            Intra module refs:   SendList::AddToList(char const *, WSHDR *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::AddToList(_SNDLST *)
                                   00005E4C 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005E9C - 00005F13 (0x78 bytes), align: 2
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::AddToList(char const *, WSHDR *)
                                   00005E9C        EditGUI::EditSendSMS(WSHDR *) (EditGUI)
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005F14 - 00005F8B (0x78 bytes), align: 2
  Segment part 22.            Intra module refs:   SendList::SendEnd(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::DeleteSL(_SNDLST *)
                                   00005F14 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005F8C - 00005FB3 (0x28 bytes), align: 2
  Segment part 24.            Intra module refs:   SendList::SendEnd(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::FindSL(int)   00005F8C 
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005FB4 - 00005FD3 (0x20 bytes), align: 2
  Segment part 26.            Intra module refs:   SendList::SendStart()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::IsSending()   00005FB4 
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00005FD4 - 00006067 (0x94 bytes), align: 2
  Segment part 28.            Intra module refs:   SendList::Send(SendList *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::SendStart()   00005FD4 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006068 - 000060EF (0x88 bytes), align: 2
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::SendEnd(int)
                                   00006068        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::IsSendCSM(int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000060F0 - 0000613F (0x50 bytes), align: 2
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::CatList(_SNDLST *)
                                   000060F0        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::SendOnTop(SendList *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006140 - 0000618F (0x50 bytes), align: 2
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::Send(SendList *)
                                   00006140        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 000002FC - 00000307 (0xc bytes), align: 2
  Segment part 3.             Intra module refs:   SendList::CsmToTop(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::ipc_xtask     000002FC 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006190 - 000061C7 (0x38 bytes), align: 2
  Segment part 40.            Intra module refs:   SendList::Send(SendList *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SendList::CsmToTop(int)
                                   00006190 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.Intra module refs:   SendList::AllocSL()
                                                   SendList::new SendList()
    -------------------------------------------------------------------------
CODE
  Segment part 42. NOT NEEDED.Intra module refs:   SendList::DeleteSL(_SNDLST *)
                                                   SendList::FreeList()
                                                   SendList::delete ~SendList(SendList *)
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.Intra module refs:   SendList::SendEnd(int)
    -------------------------------------------------------------------------
CODE
  Segment part 44. NOT NEEDED.Intra module refs:   SendList::SendEnd(int)
    -------------------------------------------------------------------------
CODE
  Segment part 45. NOT NEEDED.Intra module refs:   SendList::Send(SendList *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 000002FC - 00000307 (0xc bytes), align: 2
  Segment part 4.             Intra module refs:   SendList::ipc_xtask
    -------------------------------------------------------------------------
DATA_ID
  Segment part 46. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 47. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BA70 - 0000BA77 (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 4

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\SiemensPDU.r79
  PROGRAM MODULE, NAME : SiemensPDU

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000061C8 - 00006227 (0x60 bytes), align: 2
  Segment part 4.             Intra module refs:   SiememPDU::PduDecodeAll(SDLIST *, char *)
                                                   SiememPDU::PduDecodeTxt(SDLIST *, char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SiememPDU::Add2WS(char *, WSHDR *, int)
                                   000061C8 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006228 - 000062E3 (0xbc bytes), align: 2
  Segment part 6.             Intra module refs:   SiememPDU::PduDecodeAll(SDLIST *, char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SiememPDU::Hex2Num(char *, char *, int)
                                   00006228 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000062E4 - 0000635F (0x7c bytes), align: 2
  Segment part 8.             Intra module refs:   SiememPDU::PduDecodeAll(SDLIST *, char *)
                                                   SiememPDU::PduDecodeTxt(SDLIST *, char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SiememPDU::Bit7Decode(WSHDR *, char *, int, int)
                                   000062E4 
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006360 - 000065A3 (0x244 bytes), align: 2
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SiememPDU::PduDecodeTxt(SDLIST *, char *)
                                   00006360        SmsData::DeMsgDataList(SMS_DATA_LIST *) (SmsData)
               stack 1 = 00000000 ( 00000290 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000065A4 - 00006913 (0x370 bytes), align: 2
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SiememPDU::PduDecodeAll(SDLIST *, char *)
                                   000065A4        SmsData::DeMsgDataList(SMS_DATA_LIST *) (SmsData)
               stack 1 = 00000000 ( 0000029C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006914 - 00006917 (0x4 bytes), align: 2
  Segment part 13.            Intra module refs:   SiememPDU::PduDecodeAll(SDLIST *, char *)
                                                   SiememPDU::PduDecodeTxt(SDLIST *, char *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006918 - 0000691B (0x4 bytes), align: 2
  Segment part 14.            Intra module refs:   SiememPDU::PduDecodeAll(SDLIST *, char *)
                                                   SiememPDU::PduDecodeTxt(SDLIST *, char *)
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000691C - 00006A07 (0xec bytes), align: 2
  Segment part 16.            Intra module refs:   SiememPDU::PduDecodeAll(SDLIST *, char *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SiememPDU::DoSmsReport(SDLIST *, char *, WSHDR *)
                                   0000691C 
               stack 1 = 00000000 ( 00000034 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BA78 - 0000BA9B (0x24 bytes), align: 2
  Segment part 2.             Intra module refs:   SiememPDU::DoSmsReport(SDLIST *, char *, WSHDR *)

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\SmsData.r79
  PROGRAM MODULE, NAME : SmsData

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006A08 - 00006A23 (0x1c bytes), align: 2
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::new SmsData()
                                   00006A08        DaemonCSM::OnCreate(CSM_RAM *) (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006A24 - 00006A3F (0x1c bytes), align: 2
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::delete ~SmsData(SmsData *)
                                   00006A24        DaemonCSM::OnClose(CSM_RAM *) (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006A40 - 00006A5F (0x20 bytes), align: 2
  Segment part 18.            Intra module refs:   SmsData::CheckFolder(int)
                                                   SmsData::DeMsgDataList(SMS_DATA_LIST *)
                                                   SmsData::ReadFolder(int)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::AllocSDL()     00006A40        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
                                                   EditGUI::CreateEditGUI(DLG_CSM *, char const *) (EditGUI)
                                                   MainMenu::OnKey(void *, GUI_MSG *) (MainMenu)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006A60 - 00006AC7 (0x68 bytes), align: 2
  Segment part 20.            Intra module refs:   SmsData::CheckDat()
                                                   SmsData::CheckSDList()
                                                   SmsData::CheckSMS(int)
                                                   SmsData::DeleteAllMss()
                                                   SmsData::DeleteMessage(_SDLIST *)
                                                   SmsData::MoveToArchive(_SDLIST *)
                                                   SmsData::ReadMessageOne(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::DeleteSDL(_SDLIST *)
                                   00006A60 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006AC8 - 00006B2B (0x64 bytes), align: 2
  Segment part 22.            Intra module refs:   SmsData::~SmsData()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FreeAllSDL()   00006AC8 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006B2C - 00006B9F (0x74 bytes), align: 2
  Segment part 24.            Intra module refs:   SmsData::CheckFolder(int)
                                                   SmsData::DeMsgDataList(SMS_DATA_LIST *)
                                                   SmsData::ReadFolder(int)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::AddByTimeSDL(_SDLIST *)
                                   00006B2C 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006BA0 - 00006BE7 (0x48 bytes), align: 2
  Segment part 26.            Intra module refs:   SmsData::CheckFolder(int)
                                                   SmsData::DeMsgDataList(SMS_DATA_LIST *)
                                                   SmsData::ReadFolder(int)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FreeOneSDL(_SDLIST *)
                                   00006BA0        EditGUI::GHook(void *, int) (EditGUI)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006BE8 - 00006C63 (0x7c bytes), align: 2
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::CopyOneSDL(_SDLIST *)
                                   00006BE8        EditGUI::OnKey(void *, GUI_MSG *) (EditGUI)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *) (EditGUI)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006C64 - 00006C83 (0x20 bytes), align: 2
  Segment part 30.            Intra module refs:   SmsData::CheckDat()
                                                   SmsData::CheckSMS(int)
                                                   SmsData::ReadMessageOne(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FindSDL(int)   00006C64        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006C84 - 00006CE3 (0x60 bytes), align: 2
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FindOpmsgSDL(int)
                                   00006C84        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FindSDL(WSHDR *, char *, char *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006CE4 - 00006D3B (0x58 bytes), align: 2
  Segment part 36.            Intra module refs:   SmsData::CheckFolder(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FindSDL(char *)
                                   00006CE4 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006D3C - 00006DC7 (0x8c bytes), align: 2
  Segment part 38.            Intra module refs:   SmsData::CheckAll()
                                                   SmsData::FilterGetCount()
                                                   SmsData::ReadAllMessage()
                                                   SmsData::ReadMessageOne(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::GetSMSCount(int)
                                   00006D3C        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
                                                   MainMenu::ItemProc(void *, int, void *) (MainMenu)
                                                   SmsListMenu::CreateSmsListMenu(int, int, DLG_CSM *) (SmsListMenu)
                                                   SmsListMenu::GHook(void *, int) (SmsListMenu)
                                                   SmsListMenu::GetSmsListMenuGUI(int, int, DLG_CSM *, int) (SmsListMenu)
                                                   SmsListMenu::ReCreateMe(void *) (SmsListMenu)
                                                   TabGUI::GHook(void *, int) (TabGUI)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006DC8 - 00006E6B (0xa4 bytes), align: 2
  Segment part 40.            Intra module refs:   SmsData::FilterGetCount()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::GetSMSCount(int, int)
                                   00006DC8 
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006E6C - 00006F1F (0xb4 bytes), align: 2
  Segment part 42.            Intra module refs:   SmsData::FilterFindSDL(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FindSDL(int, int)
                                   00006E6C        SmsListMenu::ItemProc(void *, int, void *) (SmsListMenu)
                                                   SmsListMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006F20 - 00006FD7 (0xb8 bytes), align: 2
  Segment part 44.            Intra module refs:   SmsData::ReadAllDatMsg()
                                                   SmsData::ReadMessageOne(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::ReadDat()      00006F20 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 45. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00006FD8 - 0000713F (0x168 bytes), align: 2
  Segment part 46.            Intra module refs:   SmsData::ReadAllDatMsg()
                                                   SmsData::ReadMessageOne(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::DeMsgDataList(SMS_DATA_LIST *)
                                   00006FD8 
               stack 1 = 00000000 ( 0000002C )
    -------------------------------------------------------------------------
CODE
  Segment part 47. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007140 - 00007223 (0xe4 bytes), align: 2
  Segment part 48.            Intra module refs:   SmsData::ReadAllMessage()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::ReadAllDatMsg()
                                   00007140 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 49. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007224 - 00007293 (0x70 bytes), align: 2
  Segment part 50.            Intra module refs:   SmsData::ReadMessageOne(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FindMsgDataL(int)
                                   00007224 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 51. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007294 - 00007313 (0x80 bytes), align: 2
  Segment part 52.            Intra module refs:   SmsData::CheckDat()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::ReadMessageOne(int)
                                   00007294        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 53. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 54. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FreeDatBuf()   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 55. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007314 - 00007517 (0x204 bytes), align: 2
  Segment part 56.            Intra module refs:   SmsData::CheckFolder(int)
                                                   SmsData::ReadFolder(int)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::ReadMss(char *, _SDLIST *)
                                   00007314        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
               stack 1 = 00000000 ( 000000BC )
    -------------------------------------------------------------------------
CODE
  Segment part 57. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007518 - 000076C7 (0x1b0 bytes), align: 2
  Segment part 58.            Intra module refs:   SmsData::ReadAllMessage()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::ReadFolder(int)
                                   00007518 
               stack 1 = 00000000 ( 00000458 )
    -------------------------------------------------------------------------
CODE
  Segment part 59. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000076C8 - 000079B7 (0x2f0 bytes), align: 2
  Segment part 60.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
                                   000076C8        EditGUI::DoSmsWorkBG(void *, int) (EditGUI)
                                                   EditGUI::SaveDraft(WSHDR *) (EditGUI)
                                                   SendList::SendEnd(int) (SendList)
               stack 1 = 00000000 ( 00000194 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000079B8 - 000079BB (0x4 bytes), align: 2
  Segment part 61.            Intra module refs:   SmsData::ReadMss(char *, _SDLIST *)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000079BC - 000079BF (0x4 bytes), align: 2
  Segment part 62.            Intra module refs:   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Segment part 63. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000079C0 - 00007AC3 (0x104 bytes), align: 2
  Segment part 64.            Intra module refs:   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::GetMssPath(char *, char *, TTime *, TDate *)
                                   000079C0 
               stack 1 = 00000000 ( 000000A8 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007AC4 - 00007AC7 (0x4 bytes), align: 2
  Segment part 65.            Intra module refs:   SmsData::GetMssPath(char *, char *, TTime *, TDate *)
    -------------------------------------------------------------------------
CODE
  Segment part 66. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007AC8 - 00007B47 (0x80 bytes), align: 2
  Segment part 67.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::DeleteMessage(_SDLIST *)
                                   00007AC8        EditGUI::DoSmsWorkBG(void *, int) (EditGUI)
                                                   EditOptionMenu::OnKey(void *, GUI_MSG *) (EditGUI)
                                                   SmsListMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 68. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007B48 - 00007BBF (0x78 bytes), align: 2
  Segment part 69.            Intra module refs:   SmsData::ReadAllMessageCHK(SmsData *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::ReadAllMessage()
                                   00007B48 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 70. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007BC0 - 00007BD7 (0x18 bytes), align: 2
  Segment part 71.            Intra module refs:   Segment part 76
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::ReadAllMessageCHK(SmsData *)
                                   00007BC0 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 72. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 73. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::ReadAllMessageFRC(SmsData *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 74. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007BD8 - 00007C0B (0x34 bytes), align: 2
  Segment part 75.            Intra module refs:   SmsData::new SmsData()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::SmsData()      00007BD8 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007C0C - 00007C0F (0x4 bytes), align: 2
  Segment part 76.            Intra module refs:   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
                                                   SmsData::SmsData()
    -------------------------------------------------------------------------
CODE
  Segment part 77. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007C10 - 00007C3B (0x2c bytes), align: 2
  Segment part 78.            Intra module refs:   SmsData::delete ~SmsData(SmsData *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::~SmsData()     00007C10 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 79. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: CODE_AREA 0000FFE0 - 0000FFE3 (0x4 bytes), align: 2
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SMSDATA                 0000FFE0        KeyHook::HookProc(int, int) (KeyHook)
                                                   MainMenu::ItemProc(void *, int, void *) (MainMenu)
                                                   Segment part 19 (DialogCSM)
                                                   Segment part 22 (PopupGUI)
                                                   Segment part 40 (DaemonCSM)
                                                   Segment part 46 (EditGUI)
                                                   Segment part 46 (OthersMenu)
                                                   Segment part 55 (SmsListMenu)
                                                   Segment part 72 (EditGUI)
                                                   SendList::SendEnd(int) (SendList)
                                                   TabGUI::GHook(void *, int) (TabGUI)
                                                   Vibra::VibraNext() (Vibra)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007C3C - 00007C9B (0x60 bytes), align: 2
  Segment part 80.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::IsNewSMS(int)
                                   00007C3C        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 81. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007C9C - 00007DC3 (0x128 bytes), align: 2
  Segment part 82.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::CheckSMS(int)
                                   00007C9C        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 83. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007DC4 - 00007F83 (0x1c0 bytes), align: 2
  Segment part 84.            Intra module refs:   SmsData::CheckAll()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::CheckDat()     00007DC4 
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Segment part 85. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00007F84 - 0000815B (0x1d8 bytes), align: 2
  Segment part 86.            Intra module refs:   SmsData::CheckAll()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::CheckFolder(int)
                                   00007F84 
               stack 1 = 00000000 ( 00000458 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000815C - 0000815F (0x4 bytes), align: 2
  Segment part 87.            Intra module refs:   SmsData::CheckFolder(int)
                                                   SmsData::ReadFolder(int)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008160 - 00008163 (0x4 bytes), align: 2
  Segment part 88.            Intra module refs:   SmsData::CheckFolder(int)
                                                   SmsData::ReadFolder(int)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008164 - 00008167 (0x4 bytes), align: 2
  Segment part 89.            Intra module refs:   SmsData::CheckFolder(int)
                                                   SmsData::ReadFolder(int)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008168 - 0000816B (0x4 bytes), align: 2
  Segment part 90.            Intra module refs:   SmsData::CheckFolder(int)
                                                   SmsData::ReadFolder(int)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000816C - 0000816F (0x4 bytes), align: 2
  Segment part 91.            Intra module refs:   SmsData::CheckFolder(int)
                                                   SmsData::ReadFolder(int)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008170 - 00008173 (0x4 bytes), align: 2
  Segment part 92.            Intra module refs:   SmsData::CheckFolder(int)
                                                   SmsData::ReadFolder(int)
    -------------------------------------------------------------------------
CODE
  Segment part 93. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008174 - 000081DF (0x6c bytes), align: 2
  Segment part 94.            Intra module refs:   SmsData::CheckSDList()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::IsDatExist(int)
                                   00008174 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 95. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000081E0 - 000082A7 (0xc8 bytes), align: 2
  Segment part 96.            Intra module refs:   SmsData::CheckAll()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::CheckSDList()
                                   000081E0 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 97. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000082A8 - 00008317 (0x70 bytes), align: 2
  Segment part 98.            Intra module refs:   SmsData::CheckAllCHK(SmsData *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::CheckAll()     000082A8 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 99. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008318 - 0000832F (0x18 bytes), align: 2
  Segment part 100.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::CheckAllCHK(SmsData *)
                                   00008318        DialogCSM::CreateDialogCSM(int, void *) (DialogCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 101. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008330 - 0000844F (0x120 bytes), align: 2
  Segment part 102.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::NewToReadSMS(_SDLIST *)
                                   00008330        EditGUI::DoSmsWorkBG(void *, int) (EditGUI)
               stack 1 = 00000000 ( 0000009C )
    -------------------------------------------------------------------------
CODE
  Segment part 103. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008450 - 00008473 (0x24 bytes), align: 2
  Segment part 104.           Intra module refs:   SmsData::DeleteMessage(_SDLIST *)
                                                   SmsData::FreeOneSDL(_SDLIST *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::IsExistSDL(_SDLIST *)
                                   00008450        EditGUI::GHook(void *, int) (EditGUI)
                                                   PopupNewIn::GHook(void *, int) (PopupGUI)
                                                   PopupNewIn::OnKey(void *, GUI_MSG *) (PopupGUI)
    -------------------------------------------------------------------------
CODE
  Segment part 105. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008474 - 0000850F (0x9c bytes), align: 2
  Segment part 106.           Intra module refs:   SmsData::FilterFindNext(_SDLIST *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FindNextSDL(_SDLIST *, int)
                                   00008474        EditGUI::OnKey(void *, GUI_MSG *) (EditGUI)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 107. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008510 - 000085AB (0x9c bytes), align: 2
  Segment part 108.           Intra module refs:   SmsData::FilterFindPrev(_SDLIST *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FindPrevSDL(_SDLIST *, int)
                                   00008510        EditGUI::OnKey(void *, GUI_MSG *) (EditGUI)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 109. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000085AC - 0000867B (0xd0 bytes), align: 2
  Segment part 110.           Intra module refs:   SmsData::FindSDL(int, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterFindSDL(int)
                                   000085AC 
               stack 1 = 00000000 ( 000000A8 )
    -------------------------------------------------------------------------
CODE
  Segment part 111. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000867C - 000086B3 (0x38 bytes), align: 2
  Segment part 112.           Intra module refs:   SmsData::FilterFindSDL(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterFindSDL(int, int)
                                   0000867C 
    -------------------------------------------------------------------------
CODE
  Segment part 113. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000086B4 - 00008707 (0x54 bytes), align: 2
  Segment part 114.           Intra module refs:   SmsData::FilterFindSDL(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterFindSDL(char const *, int)
                                   000086B4 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 115. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008708 - 0000875B (0x54 bytes), align: 2
  Segment part 116.           Intra module refs:   SmsData::FilterFindSDL(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterFindSDL(WSHDR *, int)
                                   00008708 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 117. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000875C - 00008817 (0xbc bytes), align: 2
  Segment part 118.           Intra module refs:   SmsData::GetSMSCount(int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterGetCount()
                                   0000875C 
               stack 1 = 00000000 ( 000000A4 )
    -------------------------------------------------------------------------
CODE
  Segment part 119. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008818 - 00008857 (0x40 bytes), align: 2
  Segment part 120.           Intra module refs:   SmsData::FilterGetCount()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterGetCount(char const *)
                                   00008818 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 121. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008858 - 00008897 (0x40 bytes), align: 2
  Segment part 122.           Intra module refs:   SmsData::FilterGetCount()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterGetCount(WSHDR *)
                                   00008858 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 123. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008898 - 0000897B (0xe4 bytes), align: 2
  Segment part 124.           Intra module refs:   SmsData::FindNextSDL(_SDLIST *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterFindNext(_SDLIST *)
                                   00008898 
               stack 1 = 00000000 ( 000000A4 )
    -------------------------------------------------------------------------
CODE
  Segment part 125. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000897C - 000089BF (0x44 bytes), align: 2
  Segment part 126.           Intra module refs:   SmsData::FilterFindNext(_SDLIST *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterFindNext(_SDLIST *, char const *)
                                   0000897C 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 127. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 128. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterFindNext(_SDLIST *, WSHDR *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 129. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000089C0 - 00008AA3 (0xe4 bytes), align: 2
  Segment part 130.           Intra module refs:   SmsData::FindPrevSDL(_SDLIST *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterFindPrev(_SDLIST *)
                                   000089C0 
               stack 1 = 00000000 ( 000000A4 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008AA4 - 00008AA7 (0x4 bytes), align: 2
  Segment part 131.           Intra module refs:   SmsData::FilterFindNext(_SDLIST *)
                                                   SmsData::FilterFindPrev(_SDLIST *)
                                                   SmsData::FilterFindSDL(int)
                                                   SmsData::FilterGetCount()
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008AA8 - 00008AAB (0x4 bytes), align: 2
  Segment part 132.           Intra module refs:   SmsData::FilterFindNext(_SDLIST *)
                                                   SmsData::FilterFindPrev(_SDLIST *)
                                                   SmsData::FilterFindSDL(int)
                                                   SmsData::FilterGetCount()
    -------------------------------------------------------------------------
CODE
  Segment part 133. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008AAC - 00008AEF (0x44 bytes), align: 2
  Segment part 134.           Intra module refs:   SmsData::FilterFindPrev(_SDLIST *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterFindPrev(_SDLIST *, char const *)
                                   00008AAC 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 135. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 136. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FilterFindPrev(_SDLIST *, WSHDR *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 137. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008AF0 - 00008CFF (0x210 bytes), align: 2
  Segment part 138.           Intra module refs:   SmsData::MoveAllToArchive()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::MoveToArchive(_SDLIST *)
                                   00008AF0        EditOptionMenu::OnKey(void *, GUI_MSG *) (EditGUI)
                                                   SmsListMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *) (SmsListMenu)
               stack 1 = 00000000 ( 00000120 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008D00 - 00008D03 (0x4 bytes), align: 2
  Segment part 139.           Intra module refs:   SmsData::MoveToArchive(_SDLIST *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008D04 - 00008D07 (0x4 bytes), align: 2
  Segment part 140.           Intra module refs:   SmsData::MoveToArchive(_SDLIST *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008D08 - 00008D0B (0x4 bytes), align: 2
  Segment part 141.           Intra module refs:   SmsData::MoveToArchive(_SDLIST *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008D0C - 00008D0F (0x4 bytes), align: 2
  Segment part 142.           Intra module refs:   SmsData::MoveToArchive(_SDLIST *)
    -------------------------------------------------------------------------
CODE
  Segment part 143. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008D10 - 00008F6B (0x25c bytes), align: 2
  Segment part 144.           Intra module refs:   SmsData::MoveToArchive(_SDLIST *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int)
                                   00008D10 
               stack 1 = 00000000 ( 000001A4 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008F6C - 00008F6F (0x4 bytes), align: 2
  Segment part 145.           Intra module refs:   SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008F70 - 00008F73 (0x4 bytes), align: 2
  Segment part 146.           Intra module refs:   SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 147. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008F74 - 00008FD3 (0x60 bytes), align: 2
  Segment part 148.           Intra module refs:   SmsData::MoveAllToArchiveBG(SmsData *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::MoveAllToArchive()
                                   00008F74 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 149. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00008FD4 - 0000900B (0x38 bytes), align: 2
  Segment part 150.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::MoveAllToArchiveBG(SmsData *)
                                   00008FD4        Segment part 33 (OthersMenu)
               stack 1 = 00000000 ( 00000044 )
    -------------------------------------------------------------------------
CODE
  Segment part 151. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000900C - 0000902B (0x20 bytes), align: 2
  Segment part 152.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::FindLastNew()
                                   0000900C        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
    -------------------------------------------------------------------------
CODE
  Segment part 153. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000308 - 0000030B (0x4 bytes), align: 2
  Segment part 11.            Intra module refs:   SmsData::ExportAllToText()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           utf8_hdr                00000308 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000902C - 000092BF (0x294 bytes), align: 2
  Segment part 154.           Intra module refs:   SmsData::ExportAllToTextBG(SmsData *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::ExportAllToText()
                                   0000902C 
               stack 1 = 00000000 ( 00000288 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000092C0 - 000092C3 (0x4 bytes), align: 2
  Segment part 155.           Intra module refs:   SmsData::ExportAllToText()
                                                   SmsData::MoveToArchive(_SDLIST *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000092C4 - 000092C7 (0x4 bytes), align: 2
  Segment part 156.           Intra module refs:   SmsData::ExportAllToText()
                                                   SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 157. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000092C8 - 000092FF (0x38 bytes), align: 2
  Segment part 158.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::ExportAllToTextBG(SmsData *)
                                   000092C8        Segment part 43 (OthersMenu)
               stack 1 = 00000000 ( 00000044 )
    -------------------------------------------------------------------------
CODE
  Segment part 159. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009300 - 0000937F (0x80 bytes), align: 2
  Segment part 160.           Intra module refs:   SmsData::DeleteAllMssBG(SmsData *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::DeleteAllMss()
                                   00009300 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 161. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009380 - 000093B7 (0x38 bytes), align: 2
  Segment part 162.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsData::DeleteAllMssBG(SmsData *)
                                   00009380        Segment part 47 (OthersMenu)
               stack 1 = 00000000 ( 00000044 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000093B8 - 000093BB (0x4 bytes), align: 2
  Segment part 163.           Intra module refs:   SmsData::DeleteAllMssBG(SmsData *)
                                                   SmsData::ExportAllToTextBG(SmsData *)
                                                   SmsData::MoveAllToArchiveBG(SmsData *)
    -------------------------------------------------------------------------
CODE
  Segment part 164. NOT NEEDED.Intra module refs   SmsData::AllocSDL()
                                                   SmsData::CopyOneSDL(_SDLIST *)
                                                   SmsData::new SmsData()
    -------------------------------------------------------------------------
CODE
  Segment part 165. NOT NEEDED.Intra module refs   SmsData::DeleteSDL(_SDLIST *)
                                                   SmsData::ExportAllToText()
                                                   SmsData::FreeAllSDL()
                                                   SmsData::FreeOneSDL(_SDLIST *)
                                                   SmsData::ReadDat()
                                                   SmsData::delete ~SmsData(SmsData *)
                                                   SmsData::~SmsData()
    -------------------------------------------------------------------------
CODE
  Segment part 166. NOT NEEDED.Intra module refs   SmsData::CopyOneSDL(_SDLIST *)
                                                   SmsData::ExportAllToText()
                                                   SmsData::ReadDat()
                                                   SmsData::ReadMss(char *, _SDLIST *)
    -------------------------------------------------------------------------
CODE
  Segment part 167. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 168. NOT NEEDED.Intra module refs   SmsData::ExportAllToText()
                                                   SmsData::NewToReadSMS(_SDLIST *)
                                                   SmsData::ReadDat()
                                                   SmsData::ReadMss(char *, _SDLIST *)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Segment part 169. NOT NEEDED.Intra module refs   SmsData::NewToReadSMS(_SDLIST *)
                                                   SmsData::ReadDat()
                                                   SmsData::ReadMss(char *, _SDLIST *)
    -------------------------------------------------------------------------
CODE
  Segment part 170. NOT NEEDED.Intra module refs   SmsData::NewToReadSMS(_SDLIST *)
                                                   SmsData::ReadDat()
                                                   SmsData::ReadMss(char *, _SDLIST *)
    -------------------------------------------------------------------------
CODE
  Segment part 171. NOT NEEDED.Intra module refs   SmsData::ExportAllToText()
                                                   SmsData::NewToReadSMS(_SDLIST *)
                                                   SmsData::ReadDat()
                                                   SmsData::ReadMss(char *, _SDLIST *)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Segment part 172. NOT NEEDED.Intra module refs   SmsData::DeMsgDataList(SMS_DATA_LIST *)
    -------------------------------------------------------------------------
CODE
  Segment part 173. NOT NEEDED.Intra module refs   SmsData::DeMsgDataList(SMS_DATA_LIST *)
    -------------------------------------------------------------------------
CODE
  Segment part 174. NOT NEEDED.Intra module refs   SmsData::CheckAll()
                                                   SmsData::CheckDat()
                                                   SmsData::CheckFolder(int)
                                                   SmsData::CheckSDList()
                                                   SmsData::DeleteAllMss()
                                                   SmsData::MoveAllToArchive()
                                                   SmsData::ReadAllDatMsg()
                                                   SmsData::ReadAllMessage()
                                                   SmsData::ReadFolder(int)
    -------------------------------------------------------------------------
CODE
  Segment part 175. NOT NEEDED.Intra module refs   SmsData::CheckFolder(int)
                                                   SmsData::ExportAllToText()
                                                   SmsData::MoveToArchive(_SDLIST *)
                                                   SmsData::ReadFolder(int)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Segment part 176. NOT NEEDED.Intra module refs   SmsData::CheckFolder(int)
                                                   SmsData::ReadFolder(int)
    -------------------------------------------------------------------------
CODE
  Segment part 177. NOT NEEDED.Intra module refs   SmsData::CheckFolder(int)
                                                   SmsData::ReadFolder(int)
    -------------------------------------------------------------------------
CODE
  Segment part 178. NOT NEEDED.Intra module refs   SmsData::CheckFolder(int)
                                                   SmsData::ReadFolder(int)
    -------------------------------------------------------------------------
CODE
  Segment part 179. NOT NEEDED.Intra module refs   SmsData::ExportAllToText()
                                                   SmsData::MoveToArchive(_SDLIST *)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Segment part 180. NOT NEEDED.Intra module refs   SmsData::ExportAllToText()
                                                   SmsData::NewToReadSMS(_SDLIST *)
                                                   SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
    -------------------------------------------------------------------------
CODE
  Segment part 181. NOT NEEDED.Intra module refs   SmsData::CheckSDList()
                                                   SmsData::ExportAllToText()
                                                   SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int)
                                                   SmsData::GetMssPath(char *, char *, TTime *, TDate *)
    -------------------------------------------------------------------------
CODE
  Segment part 182. NOT NEEDED.Intra module refs   SmsData::DeleteAllMss()
                                                   SmsData::DeleteMessage(_SDLIST *)
    -------------------------------------------------------------------------
CODE
  Segment part 183. NOT NEEDED.Intra module refs   SmsData::FilterFindNext(_SDLIST *, char const *)
                                                   SmsData::FilterFindPrev(_SDLIST *, char const *)
                                                   SmsData::FilterFindSDL(char const *, int)
                                                   SmsData::FilterGetCount(char const *)
    -------------------------------------------------------------------------
CODE
  Segment part 184. NOT NEEDED.Intra module refs   SmsData::FilterFindSDL(WSHDR *, int)
                                                   SmsData::FilterGetCount(WSHDR *)
    -------------------------------------------------------------------------
CODE
  Segment part 185. NOT NEEDED.Intra module refs   SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int)
                                                   SmsData::MoveToArchive(_SDLIST *)
    -------------------------------------------------------------------------
CODE
  Segment part 186. NOT NEEDED.Intra module refs   SmsData::MoveToArchive(_SDLIST *)
    -------------------------------------------------------------------------
CODE
  Segment part 187. NOT NEEDED.Intra module refs   SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 188. NOT NEEDED.Intra module refs   SmsData::ExportAllToText()
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000308 - 0000030B (0x4 bytes), align: 2
  Segment part 12.            Intra module refs:   utf8_hdr
    -------------------------------------------------------------------------
DATA_ID
  Segment part 189. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 190. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        
    -------------------------------------------------------------------------
INITTAB
  Segment part 191. TENTATIVE. Used definition from AdrList
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BA9C - 0000BA9F (0x4 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 12
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BAA0 - 0000BAEB (0x4c bytes), align: 2
  Segment part 3.             Intra module refs:   SmsData::ExportAllToText()
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BAEC - 0000BB13 (0x28 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 61
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BB14 - 0000BB73 (0x60 bytes), align: 2
  Segment part 5.             Intra module refs:   Segment part 145
                                                   Segment part 65
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BB74 - 0000BB7B (0x8 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 92
    -------------------------------------------------------------------------
DATA_C
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BB7C - 0000BB87 (0xc bytes), align: 2
  Segment part 9.             Intra module refs:   SmsData::MoveToArchive(_SDLIST *)

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\SmsListMenu.r79
  PROGRAM MODULE, NAME : SmsListMenu

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 0000030C - 00000323 (0x18 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sms_menu_sk             0000030C        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BB88 - 0000BB8F (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   SmsListMenu::SmsListMenu()
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BB90 - 0000BBA3 (0x14 bytes), align: 2
  Segment part 5.             Intra module refs:   Segment part 56
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000093BC - 000093D7 (0x1c bytes), align: 2
  Segment part 15.            Intra module refs:   SmsListMenu::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsOptionMenu::new SmsOptionMenu()
                                   000093BC 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::delete ~SmsListMenu(SmsListMenu *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsOptionMenu::delete ~SmsOptionMenu(SmsOptionMenu *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000093D8 - 000093F3 (0x1c bytes), align: 2
  Segment part 21.            Intra module refs:   SmsListMenu::ReCreateMe(void *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::new SmsListMenu()
                                   000093D8        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
                                                   MainMenu::OnKey(void *, GUI_MSG *) (MainMenu)
                                                   TabGUI::CreateTabGUI(DLG_CSM *) (TabGUI)
                                                   TabGUI::ReCreateTabGUI(DLG_CSM *) (TabGUI)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::~SmsListMenu()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000093F4 - 0000945B (0x68 bytes), align: 2
  Segment part 25.            Intra module refs:   SmsListMenu::new SmsListMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::SmsListMenu()
                                   000093F4 
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000945C - 000095AB (0x150 bytes), align: 2
  Segment part 27.            Intra module refs:   SmsListMenu::SmsListMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::OnKey(void *, GUI_MSG *)
                                   0000945C 
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000324 - 0000033F (0x1c bytes), align: 2
  Segment part 6.             Intra module refs:   SmsListMenu::GHook(void *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLM_HDR_LGPS            00000324        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000095AC - 0000971F (0x174 bytes), align: 2
  Segment part 29.            Intra module refs:   SmsListMenu::SmsListMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::GHook(void *, int)
                                   000095AC 
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000340 - 0000035F (0x20 bytes), align: 2
  Segment part 8.             Intra module refs:   SmsListMenu::ItemProc(void *, int, void *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SLM_ICONS               00000340        IconPack::InitIconPack() (IconPack)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009720 - 00009847 (0x128 bytes), align: 2
  Segment part 31.            Intra module refs:   SmsListMenu::SmsListMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::ItemProc(void *, int, void *)
                                   00009720 
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009848 - 0000988B (0x44 bytes), align: 2
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::CreateSmsListMenu(int, int, DLG_CSM *)
                                   00009848        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
                                                   MainMenu::OnKey(void *, GUI_MSG *) (MainMenu)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000988C - 0000994F (0xc4 bytes), align: 2
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::GetSmsListMenuGUI(int, int, DLG_CSM *, int)
                                   0000988C        TabGUI::CreateTabGUI(DLG_CSM *) (TabGUI)
                                                   TabGUI::ReCreateTabGUI(DLG_CSM *) (TabGUI)
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BBA4 - 0000BBB7 (0x14 bytes), align: 2
  Segment part 10.            Intra module refs:   SmsOptionMenu::CreateSmsOptionMenu(DLG_CSM *, int, int, _SDLIST *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009950 - 000099AF (0x60 bytes), align: 2
  Segment part 37.            Intra module refs:   SmsOptionMenu::new SmsOptionMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsOptionMenu::SmsOptionMenu()
                                   00009950 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000099B0 - 000099B3 (0x4 bytes), align: 2
  Segment part 38.            Intra module refs:   SmsListMenu::SmsListMenu()
                                                   SmsOptionMenu::SmsOptionMenu()
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsOptionMenu::~SmsOptionMenu()
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 000099B4 - 00009B2F (0x17c bytes), align: 2
  Segment part 42.            Intra module refs:   SmsOptionMenu::SmsOptionMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsOptionMenu::OnKey(void *, GUI_MSG *)
                                   000099B4 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009B30 - 00009BBF (0x90 bytes), align: 2
  Segment part 44.            Intra module refs:   SmsOptionMenu::SmsOptionMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsOptionMenu::GHook(void *, int)
                                   00009B30 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009BC0 - 00009BC3 (0x4 bytes), align: 2
  Segment part 45.            Intra module refs:   SmsListMenu::GHook(void *, int)
                                                   SmsListMenu::ItemProc(void *, int, void *)
                                                   SmsOptionMenu::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 46. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000360 - 0000037B (0x1c bytes), align: 2
  Segment part 11.            Intra module refs:   SmsOptionMenu::ItemProc(void *, int, void *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SOP_ITEM_LGPS           00000360        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BBB8 - 0000BBBF (0x8 bytes), align: 2
  Segment part 13.            Intra module refs:   SmsOptionMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009BC4 - 00009C3B (0x78 bytes), align: 2
  Segment part 47.            Intra module refs:   SmsOptionMenu::SmsOptionMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsOptionMenu::ItemProc(void *, int, void *)
                                   00009BC4 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 48. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009C3C - 00009C73 (0x38 bytes), align: 2
  Segment part 49.            Intra module refs:   SmsListMenu::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsOptionMenu::CreateSmsOptionMenu(DLG_CSM *, int, int, _SDLIST *)
                                   00009C3C 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 50. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 51. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::UpdateCSMName(DLG_CSM *, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009C74 - 00009C77 (0x4 bytes), align: 2
  Segment part 52.            Intra module refs:   SmsListMenu::GHook(void *, int)
                                                   SmsListMenu::ItemProc(void *, int, void *)
                                                   SmsOptionMenu::GHook(void *, int)
                                                   SmsOptionMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CODE
  Segment part 53. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009C78 - 00009D3F (0xc8 bytes), align: 2
  Segment part 54.            Intra module refs:   SmsListMenu::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SmsListMenu::ReCreateMe(void *)
                                   00009C78 
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009D40 - 00009D43 (0x4 bytes), align: 2
  Segment part 55.            Intra module refs:   SmsListMenu::CreateSmsListMenu(int, int, DLG_CSM *)
                                                   SmsListMenu::GHook(void *, int)
                                                   SmsListMenu::GetSmsListMenuGUI(int, int, DLG_CSM *, int)
                                                   SmsListMenu::ItemProc(void *, int, void *)
                                                   SmsListMenu::OnKey(void *, GUI_MSG *)
                                                   SmsListMenu::ReCreateMe(void *)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009D44 - 00009D47 (0x4 bytes), align: 2
  Segment part 56.            Intra module refs:   SmsListMenu::CreateSmsListMenu(int, int, DLG_CSM *)
                                                   SmsListMenu::GetSmsListMenuGUI(int, int, DLG_CSM *, int)
                                                   SmsListMenu::ReCreateMe(void *)
    -------------------------------------------------------------------------
CODE
  Segment part 57. NOT NEEDED.Intra module refs:   SmsListMenu::new SmsListMenu()
                                                   SmsOptionMenu::new SmsOptionMenu()
    -------------------------------------------------------------------------
CODE
  Segment part 58. NOT NEEDED.Intra module refs:   SmsListMenu::GHook(void *, int)
                                                   SmsOptionMenu::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 59. NOT NEEDED.Intra module refs:   SmsListMenu::ItemProc(void *, int, void *)
                                                   SmsListMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 60. NOT NEEDED.Intra module refs:   SmsListMenu::OnKey(void *, GUI_MSG *)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 61. NOT NEEDED.Intra module refs:   SmsListMenu::OnKey(void *, GUI_MSG *)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 62. NOT NEEDED.Intra module refs:   SmsListMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 63. NOT NEEDED.Intra module refs:   SmsListMenu::OnKey(void *, GUI_MSG *)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 64. NOT NEEDED.Intra module refs:   SmsListMenu::OnKey(void *, GUI_MSG *)
                                                   SmsOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 65. NOT NEEDED.Intra module refs:   SmsListMenu::CreateSmsListMenu(int, int, DLG_CSM *)
                                                   SmsListMenu::GHook(void *, int)
                                                   SmsListMenu::GetSmsListMenuGUI(int, int, DLG_CSM *, int)
                                                   SmsListMenu::ReCreateMe(void *)
    -------------------------------------------------------------------------
CODE
  Segment part 66. NOT NEEDED.Intra module refs:   SmsListMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CODE
  Segment part 67. NOT NEEDED.Intra module refs:   SmsListMenu::CreateSmsListMenu(int, int, DLG_CSM *)
                                                   SmsListMenu::ReCreateMe(void *)
    -------------------------------------------------------------------------
CODE
  Segment part 68. NOT NEEDED.Intra module refs:   SmsOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 69. NOT NEEDED.Intra module refs:   SmsOptionMenu::OnKey(void *, GUI_MSG *)
    -------------------------------------------------------------------------
CODE
  Segment part 70. NOT NEEDED.Intra module refs:   SmsOptionMenu::CreateSmsOptionMenu(DLG_CSM *, int, int, _SDLIST *)
    -------------------------------------------------------------------------
CODE
  Segment part 71. NOT NEEDED.Intra module refs:   SmsListMenu::ReCreateMe(void *)
    -------------------------------------------------------------------------
CODE
  Segment part 72. NOT NEEDED.Intra module refs:   SmsListMenu::ReCreateMe(void *)
    -------------------------------------------------------------------------
CODE
  Segment part 73. NOT NEEDED.Intra module refs:   SmsListMenu::ReCreateMe(void *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 0000030C - 00000323 (0x18 bytes), align: 2
  Segment part 3.             Intra module refs:   sms_menu_sk
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000324 - 0000033F (0x1c bytes), align: 2
  Segment part 7.             Intra module refs:   SLM_HDR_LGPS
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000340 - 0000035F (0x20 bytes), align: 2
  Segment part 9.             Intra module refs:   SLM_ICONS
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000360 - 0000037B (0x1c bytes), align: 2
  Segment part 12.            Intra module refs:   SOP_ITEM_LGPS
    -------------------------------------------------------------------------
DATA_ID
  Segment part 74. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 75. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\StrConst.r79
  PROGRAM MODULE, NAME : StrConst

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Relative segment, address: CODE_AREA 0000BBC0 - 0000BBC7 (0x8 bytes), align: 2
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IPC_NAME                0000BBC0        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
                                                   Segment part 2 (MyIpcMessage)
                                                   Segment part 4 (MyIpcMessage)
                                                   Segment part 4 (SendList)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BEAB - 0000BEAD (0x3 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PERCENT_T               0000BEAB        NAbCSM::CreateNAbCSM(void *, int, char *, int) (NativeAddressbook)
                                                   Segment part 22 (DialogCSM)
                                                   Segment part 29 (MainMenu)
                                                   Segment part 29 (PopupGUI)
                                                   Segment part 29 (Template)
                                                   Segment part 35 (EditGUI)
                                                   Segment part 38 (OthersMenu)
                                                   Segment part 52 (SmsListMenu)
                                                   Segment part 56 (EditGUI)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BEAE - 0000BEB0 (0x3 bytes), align: 0
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PERCENT_S               0000BEAE        SmsListMenu::ItemProc(void *, int, void *) (SmsListMenu)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BBC8 - 0000BBCF (0x8 bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           num_fetion              0000BBC8        NumberMatch(char const *, char const *) (string_works)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BBD0 - 0000BBE3 (0x14 bytes), align: 2
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STR_LINES               0000BBD0        Segment part 59 (EditGUI)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BBE4 - 0000BC03 (0x20 bytes), align: 2
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STR_UNK_TXTT            0000BBE4        Segment part 14 (SiemensPDU)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BC04 - 0000BC17 (0x14 bytes), align: 2
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STR_UNK_TYPE            0000BC04        SiememPDU::PduDecodeAll(SDLIST *, char *) (SiemensPDU)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BC18 - 0000BC1B (0x4 bytes), align: 2
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FLDR_IN                 0000BC18        Segment part 141 (SmsData)
                                                   Segment part 89 (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BC1C - 0000BC23 (0x8 bytes), align: 2
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FLDR_SENT               0000BC1C        Segment part 140 (SmsData)
                                                   Segment part 88 (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BC24 - 0000BC2B (0x8 bytes), align: 2
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FLDR_DRAFT              0000BC24        Segment part 139 (SmsData)
                                                   Segment part 87 (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BC2C - 0000BC33 (0x8 bytes), align: 2
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FLDR_UNK                0000BC2C        Segment part 142 (SmsData)
                                                   Segment part 90 (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BC34 - 0000BC3F (0xc bytes), align: 2
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FLDR_ARCHIVE            0000BC34        OpenArchive() (OthersMenu)
                                                   SmsData::MoveToArchive(_SDLIST *) (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STR_UNK_NUM_UTF8        
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BC40 - 0000BC47 (0x8 bytes), align: 2
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STR_NUMBER_UTF8         0000BC40        SmsData::ExportAllToText() (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BC48 - 0000BC4F (0x8 bytes), align: 2
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STR_TEXT_UTF8           0000BC48        SmsData::ExportAllToText() (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BEB1 - 0000BEB3 (0x3 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STR_TO_UTF8             0000BEB1        SmsData::ExportAllToText() (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BC50 - 0000BC57 (0x8 bytes), align: 2
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STR_FROM_UTF8           0000BC50        SmsData::ExportAllToText() (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BC58 - 0000BC5F (0x8 bytes), align: 2
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STR_TIME_UTF8           0000BC58        SmsData::ExportAllToText() (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BC60 - 0000BC67 (0x8 bytes), align: 2
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           STR_UNK_UTF8            0000BC60        SmsData::ExportAllToText() (SmsData)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BC68 - 0000BD3B (0xd4 bytes), align: 2
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           DEFAUT_HLP_STR          0000BC68        OthMenu::ShowHelp() (OthersMenu)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\TViewGUI.r79
  PROGRAM MODULE, NAME : TViewGUI

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 0000037C - 00000393 (0x18 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tview_sk                0000037C        LangPack::InitLgp() (LangPack)
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BD3C - 0000BD43 (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 6
    -------------------------------------------------------------------------
DATA_I
  Relative segment, address: DATA_AREA 00000394 - 000003DB (0x48 bytes), align: 2
  Segment part 5.             Intra module refs:   TViewGUI::CreateTViewGUI(WSHDR *, WSHDR *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TViewGUI::tview         00000394 
           tview_hdr               000003C8 
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TViewGUI::delete ~TViewGUI(TViewGUI *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009D48 - 00009D63 (0x1c bytes), align: 2
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TViewGUI::new TViewGUI()
                                   00009D48        OthMenu::ShowHelp() (OthersMenu)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TViewGUI::TViewGUI()    
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TViewGUI::~TViewGUI()   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009D64 - 00009D87 (0x24 bytes), align: 2
  Segment part 16.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TViewGUI::OnKey(void *, GUI_MSG *)
                                   00009D64 
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009D88 - 00009DA7 (0x20 bytes), align: 2
  Segment part 18.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TViewGUI::GHook(void *, int)
                                   00009D88 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009DA8 - 00009DAB (0x4 bytes), align: 2
  Segment part 20.            Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TViewGUI::locret()      00009DA8 
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009DAC - 00009EC3 (0x118 bytes), align: 2
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TViewGUI::CreateTViewGUI(WSHDR *, WSHDR *)
                                   00009DAC        OthMenu::ShowHelp() (OthersMenu)
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.Intra module refs:   TViewGUI::CreateTViewGUI(WSHDR *, WSHDR *)
                                                   TViewGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.Intra module refs:   TViewGUI::new TViewGUI()
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 0000037C - 00000393 (0x18 bytes), align: 2
  Segment part 3.             Intra module refs:   tview_sk
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 00000394 - 000003DB (0x48 bytes), align: 2
  Segment part 6.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_ID
  Segment part 25. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 26. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\TabGUI.r79
  PROGRAM MODULE, NAME : TabGUI

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 000003DC - 0000042B (0x50 bytes), align: 2
  Segment part 2.             Intra module refs:   Segment part 22
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TABICONS                000003DC        IconPack::InitIconPack() (IconPack)
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TabGUI::new TabGUI()    
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TabGUI::delete ~TabGUI(TabGUI *)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009EC4 - 00009F2B (0x68 bytes), align: 2
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TabGUI::TabGUI()        00009EC4        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
                                                   SmsListMenu::ReCreateMe(void *) (SmsListMenu)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009F2C - 00009F2F (0x4 bytes), align: 2
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TabGUI::~TabGUI()       00009F2C        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
                                                   SmsListMenu::ReCreateMe(void *) (SmsListMenu)
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 00009F30 - 0000A033 (0x104 bytes), align: 2
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TabGUI::CreateTabGUI(DLG_CSM *)
                                   00009F30        DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A034 - 0000A03B (0x8 bytes), align: 2
  Segment part 15.            Intra module refs:   TabGUI::TabGUI()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TabGUI::OnKey(void *, GUI_MSG *)
                                   0000A034 
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A03C - 0000A12B (0xf0 bytes), align: 2
  Segment part 17.            Intra module refs:   TabGUI::TabGUI()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TabGUI::GHook(void *, int)
                                   0000A03C 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A12C - 0000A12F (0x4 bytes), align: 2
  Segment part 19.            Intra module refs:   TabGUI::TabGUI()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TabGUI::Locret()        0000A12C 
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A130 - 0000A2AB (0x17c bytes), align: 2
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TabGUI::ReCreateTabGUI(DLG_CSM *)
                                   0000A130        SmsListMenu::ReCreateMe(void *) (SmsListMenu)
               stack 1 = 00000000 ( 00000028 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A2AC - 0000A2AF (0x4 bytes), align: 2
  Segment part 22.            Intra module refs:   TabGUI::CreateTabGUI(DLG_CSM *)
                                                   TabGUI::ReCreateTabGUI(DLG_CSM *)
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.Intra module refs:   TabGUI::TabGUI()
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.Intra module refs:   TabGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.Intra module refs:   TabGUI::CreateTabGUI(DLG_CSM *)
                                                   TabGUI::ReCreateTabGUI(DLG_CSM *)
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.Intra module refs:   TabGUI::CreateTabGUI(DLG_CSM *)
                                                   TabGUI::ReCreateTabGUI(DLG_CSM *)
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.Intra module refs:   TabGUI::CreateTabGUI(DLG_CSM *)
                                                   TabGUI::ReCreateTabGUI(DLG_CSM *)
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.Intra module refs:   TabGUI::CreateTabGUI(DLG_CSM *)
                                                   TabGUI::ReCreateTabGUI(DLG_CSM *)
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.Intra module refs:   TabGUI::GHook(void *, int)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 000003DC - 0000042B (0x50 bytes), align: 2
  Segment part 3.             Intra module refs:   TABICONS
    -------------------------------------------------------------------------
DATA_ID
  Segment part 30. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 31. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\Template.r79
  PROGRAM MODULE, NAME : Template

  SEGMENTS IN THE MODULE
  ======================
DATA_C
  Relative segment, address: CODE_AREA 0000BD44 - 0000BD5F (0x1c bytes), align: 2
  Segment part 2.             Intra module refs:   TplMenu::ReadTpl()
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BD60 - 0000BD73 (0x14 bytes), align: 2
  Segment part 3.             Intra module refs:   TplMenu::CreateTplMenu(void *)
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A2B0 - 0000A2CB (0x1c bytes), align: 2
  Segment part 5.             Intra module refs:   TplMenu::GHook(void *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::delete ~TplMenu(TplMenu *)
                                   0000A2B0 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A2CC - 0000A2E7 (0x1c bytes), align: 2
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::new TplMenu()
                                   0000A2CC        EditGUI::EdOpUserItem(USR_MENU_ITEM *) (EditGUI)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A2E8 - 0000A34F (0x68 bytes), align: 2
  Segment part 9.             Intra module refs:   TplMenu::new TplMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::TplMenu()      0000A2E8 
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::~TplMenu()     
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A350 - 0000A36F (0x20 bytes), align: 2
  Segment part 13.            Intra module refs:   TplMenu::ReadTpl()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::AllocTPList()
                                   0000A350 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A370 - 0000A393 (0x24 bytes), align: 2
  Segment part 15.            Intra module refs:   TplMenu::ReadTpl()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::AddToTPList(_TPLIST *)
                                   0000A370 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A394 - 0000A3DF (0x4c bytes), align: 2
  Segment part 17.            Intra module refs:   TplMenu::delete ~TplMenu(TplMenu *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::FreeTPList()   0000A394 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 18. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A3E0 - 0000A62F (0x250 bytes), align: 2
  Segment part 19.            Intra module refs:   TplMenu::CreateTplMenu(void *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::ReadTpl()      0000A3E0 
               stack 1 = 00000000 ( 000024F4 )
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A630 - 0000A653 (0x24 bytes), align: 2
  Segment part 21.            Intra module refs:   TplMenu::ItemProc(void *, int, void *)
                                                   TplMenu::OnKey(void *, GUI_MSG *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::GetTpl(int)    0000A630 
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A654 - 0000A78F (0x13c bytes), align: 2
  Segment part 23.            Intra module refs:   TplMenu::TplMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::OnKey(void *, GUI_MSG *)
                                   0000A654 
               stack 1 = 00000000 ( 00001058 )
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A790 - 0000A807 (0x78 bytes), align: 2
  Segment part 25.            Intra module refs:   TplMenu::TplMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::GHook(void *, int)
                                   0000A790 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A808 - 0000A883 (0x7c bytes), align: 2
  Segment part 27.            Intra module refs:   TplMenu::TplMenu()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::ItemProc(void *, int, void *)
                                   0000A808 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A884 - 0000A887 (0x4 bytes), align: 2
  Segment part 28.            Intra module refs:   TplMenu::GHook(void *, int)
                                                   TplMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A888 - 0000A88B (0x4 bytes), align: 2
  Segment part 29.            Intra module refs:   TplMenu::GHook(void *, int)
                                                   TplMenu::ItemProc(void *, int, void *)
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A88C - 0000A8BF (0x34 bytes), align: 2
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TplMenu::CreateTplMenu(void *)
                                   0000A88C        EditGUI::EdOpUserItem(USR_MENU_ITEM *) (EditGUI)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.Intra module refs:   TplMenu::FreeTPList()
                                                   TplMenu::delete ~TplMenu(TplMenu *)
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.Intra module refs:   TplMenu::AllocTPList()
                                                   TplMenu::new TplMenu()
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.Intra module refs:   TplMenu::ReadTpl()
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.Intra module refs:   TplMenu::ReadTpl()
    -------------------------------------------------------------------------
CODE
  Segment part 36. NOT NEEDED.Intra module refs:   TplMenu::ReadTpl()
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.Intra module refs:   TplMenu::ReadTpl()
    -------------------------------------------------------------------------
CODE
  Segment part 38. NOT NEEDED.Intra module refs:   TplMenu::ReadTpl()
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.Intra module refs:   TplMenu::ReadTpl()
    -------------------------------------------------------------------------
CODE
  Segment part 40. NOT NEEDED.Intra module refs:   TplMenu::ReadTpl()
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.Intra module refs:   TplMenu::ReadTpl()
    -------------------------------------------------------------------------
CODE
  Segment part 42. NOT NEEDED.Intra module refs:   TplMenu::ReadTpl()
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.Intra module refs:   TplMenu::CreateTplMenu(void *)
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\Vibra.r79
  PROGRAM MODULE, NAME : Vibra

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A8C0 - 0000A8DB (0x1c bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vibra::new Vibra()      0000A8C0        DaemonCSM::DaemonCSM() (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A8DC - 0000A8F7 (0x1c bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vibra::delete ~Vibra(Vibra *)
                                   0000A8DC        DaemonCSM::~DaemonCSM() (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A8F8 - 0000A927 (0x30 bytes), align: 2
  Segment part 7.             Intra module refs:   Vibra::new Vibra()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vibra::Vibra()          0000A8F8 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vibra::~Vibra()         
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A928 - 0000A99F (0x78 bytes), align: 2
  Segment part 11.            Intra module refs:   Vibra::ReInitThythm()
                                                   Vibra::Vibra()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vibra::InitThythm()     0000A928 
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A9A0 - 0000A9DB (0x3c bytes), align: 2
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vibra::ReInitThythm()   0000A9A0        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 14. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000A9DC - 0000AA23 (0x48 bytes), align: 2
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vibra::VibraStart()     0000A9DC        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AA24 - 0000AAD3 (0xb0 bytes), align: 2
  Segment part 17.            Intra module refs:   Vibra::VibraStart()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vibra::VibraNext()      0000AA24        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AAD4 - 0000AAD7 (0x4 bytes), align: 2
  Segment part 18.            Intra module refs:   Vibra::VibraNext()
                                                   Vibra::VibraStart()
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AAD8 - 0000AADB (0x4 bytes), align: 2
  Segment part 19.            Intra module refs:   Vibra::VibraNext()
                                                   Vibra::VibraStart()
    -------------------------------------------------------------------------
CODE
  Segment part 20. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AADC - 0000AAF7 (0x1c bytes), align: 2
  Segment part 21.            Intra module refs:   Vibra::delete ~Vibra(Vibra *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vibra::VibraStop()      0000AADC        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 22. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AAF8 - 0000AB03 (0xc bytes), align: 2
  Segment part 23.            Intra module refs:   Vibra::VibraNext()
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Vibra::VibraNextTmrProc()
                                   0000AAF8 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 24. NOT NEEDED.Intra module refs:   Vibra::new Vibra()
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.Intra module refs:   Vibra::delete ~Vibra(Vibra *)
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.Intra module refs:   Vibra::InitThythm()
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.Intra module refs:   Vibra::VibraNextTmrProc()
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\_cpp2.r79
  PROGRAM MODULE, NAME : _cpp2

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AB04 - 0000AB0F (0xc bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new(unsigned int)
                                   0000AB04        AdrList::ConstructList() (AdrList)
                                                   AdrList::new AdrList() (AdrList)
                                                   DaemonCSM::new DaemonCSM() (DaemonCSM)
                                                   DialogCSM::new DialogCSM() (DialogCSM)
                                                   EditGUI::new EditGUI() (EditGUI)
                                                   EditOptionMenu::new EditOptionMenu() (EditGUI)
                                                   IconPack::new IconPack() (IconPack)
                                                   LangPack::new LangPack() (LangPack)
                                                   MainMenu::new MainMenu() (MainMenu)
                                                   NAbCSM::new NAbCSM() (NativeAddressbook)
                                                   NumList::AllocNL() (NumList)
                                                   NumList::AllocNL(char const *) (NumList)
                                                   NumList::new NumList() (NumList)
                                                   OthMenu::new OthMenu() (OthersMenu)
                                                   PlaySouNd::new PlaySouNd() (PlaySound)
                                                   PopupNewIn::new PopupNewIn() (PopupGUI)
                                                   SendList::AllocSL() (SendList)
                                                   SendList::new SendList() (SendList)
                                                   SmsData::AllocSDL() (SmsData)
                                                   SmsData::CopyOneSDL(_SDLIST *) (SmsData)
                                                   SmsData::new SmsData() (SmsData)
                                                   SmsListMenu::new SmsListMenu() (SmsListMenu)
                                                   SmsOptionMenu::new SmsOptionMenu() (SmsListMenu)
                                                   TViewGUI::new TViewGUI() (TViewGUI)
                                                   TabGUI::TabGUI() (TabGUI)
                                                   TplMenu::AllocTPList() (Template)
                                                   TplMenu::new TplMenu() (Template)
                                                   Vibra::new Vibra() (Vibra)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AB10 - 0000AB1B (0xc bytes), align: 2
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator new[](unsigned int)
                                   0000AB10        AdrList::ConstructList() (AdrList)
                                                   IconPack::LoadIconPack() (IconPack)
                                                   LangPack::LoadLangFile() (LangPack)
                                                   Mss3App::Start(char *, char *) (Mss3App)
                                                   NAbCSM::CreateNAbCSM(void *, int, char *, int) (NativeAddressbook)
                                                   NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *) (NativeAddressbook)
                                                   SmsData::CopyOneSDL(_SDLIST *) (SmsData)
                                                   SmsData::ExportAllToText() (SmsData)
                                                   SmsData::ReadDat() (SmsData)
                                                   SmsData::ReadMss(char *, _SDLIST *) (SmsData)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AB1C - 0000AB27 (0xc bytes), align: 2
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           operator delete(void *)
                                   0000AB1C        AdrList::FreeCLIST() (AdrList)
                                                   AdrList::delete ~AdrList(AdrList *) (AdrList)
                                                   DaemonCSM::delete ~DaemonCSM(DaemonCSM *) (DaemonCSM)
                                                   DialogCSM::OnClose(CSM_RAM *) (DialogCSM)
                                                   DialogCSM::OnCreate(CSM_RAM *) (DialogCSM)
                                                   EditGUI::delete ~EditGUI(EditGUI *) (EditGUI)
                                                   EditOptionMenu::GHook(void *, int) (EditGUI)
                                                   IconPack::FreeIconPack() (IconPack)
                                                   IconPack::delete ~IconPack(IconPack *) (IconPack)
                                                   LangPack::delete ~LangPack(LangPack *) (LangPack)
                                                   LangPack::~LangPack() (LangPack)
                                                   MainMenu::GHook(void *, int) (MainMenu)
                                                   NAbCSM::CreateNAbCSM(void *, int, char *, int) (NativeAddressbook)
                                                   NAbCSM::OnClose(CSM_RAM *) (NativeAddressbook)
                                                   NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *) (NativeAddressbook)
                                                   NumList::DeleteNL(_NLST *) (NumList)
                                                   NumList::FreeList() (NumList)
                                                   NumList::delete ~NumList(NumList *) (NumList)
                                                   OthMenu::GHook(void *, int) (OthersMenu)
                                                   PlaySouNd::delete ~PlaySouNd(PlaySouNd *) (PlaySound)
                                                   PopupNewIn::CreatePopupNewIn(DLG_CSM *, _SDLIST *) (PopupGUI)
                                                   PopupNewIn::GHook(void *, int) (PopupGUI)
                                                   SendList::DeleteSL(_SNDLST *) (SendList)
                                                   SendList::FreeList() (SendList)
                                                   SendList::delete ~SendList(SendList *) (SendList)
                                                   SmsData::DeleteSDL(_SDLIST *) (SmsData)
                                                   SmsData::ExportAllToText() (SmsData)
                                                   SmsData::FreeAllSDL() (SmsData)
                                                   SmsData::FreeOneSDL(_SDLIST *) (SmsData)
                                                   SmsData::ReadDat() (SmsData)
                                                   SmsData::delete ~SmsData(SmsData *) (SmsData)
                                                   SmsData::~SmsData() (SmsData)
                                                   SmsListMenu::GHook(void *, int) (SmsListMenu)
                                                   SmsOptionMenu::GHook(void *, int) (SmsListMenu)
                                                   TViewGUI::CreateTViewGUI(WSHDR *, WSHDR *) (TViewGUI)
                                                   TViewGUI::GHook(void *, int) (TViewGUI)
                                                   TabGUI::GHook(void *, int) (TabGUI)
                                                   TplMenu::FreeTPList() (Template)
                                                   TplMenu::delete ~TplMenu(TplMenu *) (Template)
                                                   Vibra::delete ~Vibra(Vibra *) (Vibra)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\conf_loader.r79
  PROGRAM MODULE, NAME : conf_loader

  SEGMENTS IN THE MODULE
  ======================
DATA_I
  Relative segment, address: DATA_AREA 0000042C - 0000042F (0x4 bytes), align: 2
  Segment part 4.             Intra module refs:   LoadConfigData
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           successed_config_filename
                                   0000042C        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
                                                   OthMenu::OpenCfgFile() (OthersMenu)
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AB28 - 0000AC2B (0x104 bytes), align: 2
  Segment part 7.             Intra module refs:   InitConfig
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LoadConfigData          0000AB28 
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AC2C - 0000AC53 (0x28 bytes), align: 2
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           InitConfig              0000AC2C        Mss3App::InitSetting() (Mss3App)
                                                   Mss3App::Start(char *, char *) (Mss3App)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_ID
  Relative segment, address: CODE_AREA 0000042C - 0000042F (0x4 bytes), align: 2
  Segment part 5.             Intra module refs:   successed_config_filename
    -------------------------------------------------------------------------
DATA_ID
  Segment part 10. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?*?DATA_ID              
    -------------------------------------------------------------------------
INITTAB
  Segment part 11. TENTATIVE. Used definition from EditGUI
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_I        
    -------------------------------------------------------------------------
CONFIG_C
  Segment part 12. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BEB4 - 0000BEB4 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   Segment part 5
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BD74 - 0000BDA3 (0x30 bytes), align: 2
  Segment part 3.             Intra module refs:   InitConfig

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\config_data.r79
  PROGRAM MODULE, NAME : config_data

  SEGMENTS IN THE MODULE
  ======================
CONFIG_C
  Relative segment, address: CODE_AREA 0000FFE4 - 0001000F (0x2c bytes), align: 2
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr0                 0000FFE4        LoadConfigData (conf_loader)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010010 - 0001008F (0x80 bytes), align: 2
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_MAIN_FOLDER         00010010        Mss3App::InitDatPath() (Mss3App)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010090 - 000100BB (0x2c bytes), align: 2
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1                 00010090 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000100BC - 0001013B (0x80 bytes), align: 2
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_SYSTEM_FOLDER       000100BC        AdrList::ConstructList() (AdrList)
                                                   Mss3App::InitDatPath() (Mss3App)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0001013C - 00010167 (0x2c bytes), align: 2
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr2                 0001013C 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010168 - 0001016B (0x4 bytes), align: 2
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_ENA_AUTO_SAF        00010168        EditGUI::DoSmsWorkBG(void *, int) (EditGUI)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0001016C - 00010197 (0x2c bytes), align: 2
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr4                 0001016C 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010198 - 0001019B (0x4 bytes), align: 2
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_ENA_SAVE_SENT       00010198        SendList::SendEnd(int) (SendList)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0001019C - 000101C7 (0x2c bytes), align: 2
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdra                 0001019C 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000101C8 - 000101CB (0x4 bytes), align: 2
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_ENA_SNED_ON_BG      000101C8        SendList::Send(SendList *) (SendList)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000101CC - 000101F7 (0x2c bytes), align: 2
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr7                 000101CC 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000101F8 - 000101FB (0x4 bytes), align: 2
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_TEXT_FONT           000101F8        Segment part 60 (EditGUI)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000101FC - 000102DB (0xe0 bytes), align: 2
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfgcbox1                000101FC 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000102DC - 00010307 (0x2c bytes), align: 2
  Segment part 15. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdrb                 000102DC 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010308 - 00010387 (0x80 bytes), align: 2
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_DEFAULT_SENT_NUM    00010308        EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int) (EditGUI)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010388 - 000103B3 (0x2c bytes), align: 2
  Segment part 17. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdrc                 00010388 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000103B4 - 000103B7 (0x4 bytes), align: 2
  Segment part 18. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_DEFAULT_TAB         000103B4        TabGUI::CreateTabGUI(DLG_CSM *) (TabGUI)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000103B8 - 00010457 (0xa0 bytes), align: 2
  Segment part 19. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfgcboxc                000103B8 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010458 - 00010483 (0x2c bytes), align: 2
  Segment part 20. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1_0               00010458 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010484 - 000104AF (0x2c bytes), align: 2
  Segment part 21. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1_1               00010484 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000104B0 - 000104B3 (0x4 bytes), align: 2
  Segment part 22. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_ENA_NOTIFY          000104B0        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000104B4 - 000104DF (0x2c bytes), align: 2
  Segment part 23. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1_2               000104B4 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000104E0 - 000104E3 (0x4 bytes), align: 2
  Segment part 24. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_ENA_VIBRA           000104E0        PopupNewIn::GHook(void *, int) (PopupGUI)
                                                   Segment part 19 (Vibra)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000104E4 - 0001050F (0x2c bytes), align: 2
  Segment part 25. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1_5               000104E4 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010510 - 0001058F (0x80 bytes), align: 2
  Segment part 26. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_VIBRA_RHYTHM        00010510        Vibra::InitThythm() (Vibra)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010590 - 000105BB (0x2c bytes), align: 2
  Segment part 27. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1_3               00010590 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000105BC - 000105BF (0x4 bytes), align: 2
  Segment part 28. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_NOTIFY_TIME         000105BC        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
                                                   Segment part 18 (Vibra)
                                                   Segment part 25 (PopupGUI)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000105C0 - 000105EB (0x2c bytes), align: 2
  Segment part 29. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1_7               000105C0 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000105EC - 000105EF (0x4 bytes), align: 2
  Segment part 30. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_ENA_SOUND           000105EC        DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *) (DaemonCSM)
                                                   PlaySouNd::PlayStart(PlaySouNd *, char const *) (PlaySound)
                                                   PopupNewIn::GHook(void *, int) (PopupGUI)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000105F0 - 0001061B (0x2c bytes), align: 2
  Segment part 31. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1_8               000105F0 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0001061C - 0001069B (0x80 bytes), align: 2
  Segment part 32. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_SOUND_PATH          0001061C        PopupNewIn::GHook(void *, int) (PopupGUI)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0001069C - 000106C7 (0x2c bytes), align: 2
  Segment part 33. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr1_9               0001069C 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000106C8 - 000106F3 (0x2c bytes), align: 2
  Segment part 34. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr2_0               000106C8 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000106F4 - 0001071F (0x2c bytes), align: 2
  Segment part 35. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr2_1               000106F4 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010720 - 00010723 (0x4 bytes), align: 2
  Segment part 36. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KEY1                    00010720        KeyHook::HookProc(int, int) (KeyHook)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010724 - 0001074F (0x2c bytes), align: 2
  Segment part 37. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr2_2               00010724 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010750 - 00010753 (0x4 bytes), align: 2
  Segment part 38. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KEY2                    00010750        KeyHook::HookProc(int, int) (KeyHook)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010754 - 0001077F (0x2c bytes), align: 2
  Segment part 39. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr2_9               00010754 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010780 - 000107AB (0x2c bytes), align: 2
  Segment part 40. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr3_0               00010780 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000107AC - 000107D7 (0x2c bytes), align: 2
  Segment part 41. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr3_1               000107AC 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000107D8 - 000107DB (0x4 bytes), align: 2
  Segment part 42. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_ENA_IB              000107D8        DaemonCSM::AddIconBar(short *) (DaemonCSM)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000107DC - 00010807 (0x2c bytes), align: 2
  Segment part 43. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr3_2               000107DC 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010808 - 0001080B (0x4 bytes), align: 2
  Segment part 44. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_ICON_IB             00010808        DaemonCSM::AddIconBar(short *) (DaemonCSM)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 0001080C - 00010837 (0x2c bytes), align: 2
  Segment part 45. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr3_9               0001080C 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010838 - 00010863 (0x2c bytes), align: 2
  Segment part 46. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr11_0              00010838 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010864 - 0001088F (0x2c bytes), align: 2
  Segment part 47. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr11_1              00010864 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010890 - 00010893 (0x4 bytes), align: 2
  Segment part 48. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_FILTEROP            00010890        Segment part 131 (SmsData)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010894 - 00010953 (0xc0 bytes), align: 2
  Segment part 49. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfgcbox11_1             00010894 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010954 - 0001097F (0x2c bytes), align: 2
  Segment part 50. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr11_2              00010954 
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 00010980 - 0001099F (0x20 bytes), align: 2
  Segment part 51. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CFG_STRORNUM            00010980        Segment part 132 (SmsData)
    -------------------------------------------------------------------------
CONFIG_C
  Relative segment, address: CODE_AREA 000109A0 - 000109CB (0x2c bytes), align: 2
  Segment part 52. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           cfghdr11_9              000109A0 
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\func.r79
  PROGRAM MODULE, NAME : func

  SEGMENTS IN THE MODULE
  ======================
ELFBEGIN
  Relative segment, address: CODE_AREA 00000000, align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ELF_BEGIN               00000000        Mss3App::Killer() (Mss3App)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AC54 - 0000AC5B (0x8 bytes), align: 2
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           kill_data               0000AC54        Mss3App::Killer() (Mss3App)
           seqkill                 0000AC58 

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\main.r79
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AC5C - 0000AC5F (0x4 bytes), align: 2
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    0000AC5C        Absolute parts (?ABS_ENTRY_MOD)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED. Intra module refs:   main
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    *************************************************************************

  FILE NAME : D:\pasha\elf\googlecode\MySMSYS\Mss3\Release_ELKA_EN\Obj\string_works.r79
  PROGRAM MODULE, NAME : string_works

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AC60 - 0000ACEB (0x8c bytes), align: 2
  Segment part 4.             Intra module refs:   w_charcmp_nocase(unsigned short *, unsigned short *, int)
                                                   wstrcmp_nocase(WSHDR *, WSHDR *)
                                                   wstrncmp_nocase(WSHDR *, WSHDR *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           char16to8(int)          0000AC60 
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: CODE_AREA 0000BDA4 - 0000BEA3 (0x100 bytes), align: 2
  Segment part 2.             Intra module refs:   char8to16(int)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000ACEC - 0000AD0B (0x20 bytes), align: 2
  Segment part 6.             Intra module refs:   ascii_2ws(WSHDR *, char const *, int)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           char8to16(int)          0000ACEC 
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ws_2ascii(WSHDR *, char *, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AD0C - 0000AD43 (0x38 bytes), align: 2
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ascii_2ws(WSHDR *, char const *, int)
                                   0000AD0C        TplMenu::ReadTpl() (Template)
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AD44 - 0000ADC7 (0x84 bytes), align: 2
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           wstrcmp_nocase(WSHDR *, WSHDR *)
                                   0000AD44        EditGUI::GHook(void *, int) (EditGUI)
               stack 1 = 00000000 ( 00000020 )
    -------------------------------------------------------------------------
CODE
  Segment part 13. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000ADC8 - 0000AE53 (0x8c bytes), align: 2
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           wstrncmp_nocase(WSHDR *, WSHDR *, int)
                                   0000ADC8        Mss3App::IsAlreadyRuning() (Mss3App)
               stack 1 = 00000000 ( 00000024 )
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           wsInsert(WSHDR *, WSHDR *, int, int)
                                   
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AE54 - 0000AEE7 (0x94 bytes), align: 2
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           num_2ws(WSHDR *, char const *, int)
                                   0000AE54        EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int) (EditGUI)
                                                   EditGUI::CreateEditGUI(DLG_CSM *, char const *) (EditGUI)
                                                   NAbCSM::OnCreate(CSM_RAM *) (NativeAddressbook)
                                                   NumList::AddToList(char const *) (NumList)
                                                   NumList::AllocNL(char const *) (NumList)
                                                   NumList::UpdateNL(_NLST *, char const *) (NumList)
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AEE8 - 0000AF4F (0x68 bytes), align: 2
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ws_2num(WSHDR *, char *, int)
                                   0000AEE8        EditGUI::GHook(void *, int) (EditGUI)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AF50 - 0000AF8F (0x40 bytes), align: 2
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           str2int(char const *)   0000AF50        Vibra::InitThythm() (Vibra)
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AF90 - 0000AFD3 (0x44 bytes), align: 2
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IsWsSmall(WSHDR *)      0000AF90        EditGUI::GHook(void *, int) (EditGUI)
    -------------------------------------------------------------------------
CODE
  Segment part 25. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000AFD4 - 0000B01F (0x4c bytes), align: 2
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IsNum(WSHDR *)          0000AFD4        EditGUI::GHook(void *, int) (EditGUI)
    -------------------------------------------------------------------------
CODE
  Segment part 27. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000B020 - 0000B09B (0x7c bytes), align: 2
  Segment part 28.            Intra module refs:   wstrstr(WSHDR *, WSHDR *)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           w_charcmp_nocase(unsigned short *, unsigned short *, int)
                                   0000B020 
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 29. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000B09C - 0000B11B (0x80 bytes), align: 2
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           wstrstr(WSHDR *, WSHDR *)
                                   0000B09C        SmsData::FilterFindSDL(WSHDR *, int) (SmsData)
                                                   SmsData::FilterGetCount(WSHDR *) (SmsData)
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 31. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000B11C - 0000B1E7 (0xcc bytes), align: 2
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           NumberMatch(char const *, char const *)
                                   0000B11C        AdrList::FindCList(char const *) (AdrList)
                                                   AdrList::FindName(WSHDR *, char const *) (AdrList)
                                                   NumList::IsNumExist(char const *) (NumList)
                                                   SmsData::FilterFindNext(_SDLIST *, char const *) (SmsData)
                                                   SmsData::FilterFindPrev(_SDLIST *, char const *) (SmsData)
                                                   SmsData::FilterFindSDL(char const *, int) (SmsData)
                                                   SmsData::FilterGetCount(char const *) (SmsData)
               stack 1 = 00000000 ( 00000014 )
    -------------------------------------------------------------------------
CODE
  Segment part 33. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE_AREA 0000B1E8 - 0000B233 (0x4c bytes), align: 2
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           StrClearChr(char *, int)
                                   0000B1E8        SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int) (SmsData)
                                                   SmsData::MoveToArchive(_SDLIST *) (SmsData)
    -------------------------------------------------------------------------
CODE
  Segment part 35. NOT NEEDED.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module               CODE   DATA
------               ----   ----
                    (Rel)  (Rel)
AFile                 196
AdrList             1 880
  + shared             12
CreateMenu            528
DaemonCSM           2 848
DialogCSM           1 584
EditGUI             6 708     88
  + shared             12
File                  380
GlobalVariable        304     24
IconPack            1 365    120
KeyHook               440
LangPack            2 438    316
MainMenu            1 064     96
Mss3App               564
MyIpcMessage          124     12
NativeAddressbook   1 192
NumList             1 400
OthersMenu         17 800     28
PlaySound             484
PopupGUI            1 140     80
SendList            1 076     12
SiemensPDU          2 148
SmsData            10 920      4
SmsListMenu         2 612    112
StrConst              389
TViewGUI              484     96
TabGUI              1 084     80
Template            1 600
Vibra                 580
_cpp2                  36
conf_loader           353      4
config_data         2 536
func                    8
main                    4
string_works        1 748
N/A (alignment)
------             ------  -----
Total:             68 041  1 072


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  AdrList::ConstructListCHK(AdrList *)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  AdrList::ConstructListFRC(AdrList *)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DaemonCSM::OnCreate(CSM_RAM *)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DaemonCSM::OnMessage(CSM_RAM *, GBS_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000034
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000034


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DaemonCSM::OnClose(CSM_RAM *)
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DaemonCSM::DoNewProc()
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DaemonCSM::UpdateNProc()
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DaemonCSM::AddIconBar(short *)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DaemonCSM::StartDialog(int, void *)
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DialogCSM::OnMessage(CSM_RAM *, GBS_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DialogCSM::OnCreate(CSM_RAM *)
      | Stack used (prev) :  00000000
      | + function block  :  00000024
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000024


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  DialogCSM::OnClose(CSM_RAM *)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EditGUI::EdOpUserItem(USR_MENU_ITEM *)
      | Stack used (prev) :  00000000
      | + function block  :  00000040
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000040


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EditGUI::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000044
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000044


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EditGUI::DoSmsWorkBG(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000018
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EditGUI::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000054
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000054


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EditGUI::Locret()
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EditOptionMenu::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000018
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EditOptionMenu::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  EditOptionMenu::ItemProc(void *, int, void *)
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  KeyHook::HookProc(int, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MainMenu::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000018
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MainMenu::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MainMenu::ItemProc(void *, int, void *)
      | Stack used (prev) :  00000000
      | + function block  :  00000024
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000024


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  Mss3App::Killer()
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  NAbCSM::OnMessage(CSM_RAM *, GBS_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000024
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000024


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  NAbCSM::OnCreate(CSM_RAM *)
      | Stack used (prev) :  00000000
      | + function block  :  00000084
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000084


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  NAbCSM::OnClose(CSM_RAM *)
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  OpenArchive()
      | Stack used (prev) :  00000000
      | + function block  :  00000208
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000208


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  OthMenu::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000010
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  OthMenu::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  OthMenu::ItemProc(void *, int, void *)
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  PlaySouNd::PlayStart(PlaySouNd *, char const *)
      | Stack used (prev) :  00000000
      | + function block  :  000002F4
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  000002F4


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  PopupNewIn::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  PopupNewIn::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MyShowMsg::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  MyShowMsg::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SendList::Send(SendList *)
      | Stack used (prev) :  00000000
      | + function block  :  0000000C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000000C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsData::ReadAllMessageCHK(SmsData *)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsData::CheckAllCHK(SmsData *)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsData::MoveAllToArchiveBG(SmsData *)
      | Stack used (prev) :  00000000
      | + function block  :  00000044
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000044


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsData::ExportAllToTextBG(SmsData *)
      | Stack used (prev) :  00000000
      | + function block  :  00000044
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000044


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsData::DeleteAllMssBG(SmsData *)
      | Stack used (prev) :  00000000
      | + function block  :  00000044
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000044


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsListMenu::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000020
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000020


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsListMenu::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  0000001C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000001C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsListMenu::ItemProc(void *, int, void *)
      | Stack used (prev) :  00000000
      | + function block  :  00000020
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000020


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsOptionMenu::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000018
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000018


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsOptionMenu::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  SmsOptionMenu::ItemProc(void *, int, void *)
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  TViewGUI::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  TViewGUI::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  TViewGUI::locret()
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  TabGUI::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  TabGUI::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000010
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000010


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  TabGUI::Locret()
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  TplMenu::OnKey(void *, GUI_MSG *)
      | Stack used (prev) :  00000000
      | + function block  :  00001058
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00001058


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  TplMenu::GHook(void *, int)
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  TplMenu::ItemProc(void *, int, void *)
      | Stack used (prev) :  00000000
      | + function block  :  00000014
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000014


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  Vibra::VibraNextTmrProc()
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001058
  01  AFile::AFile()
      | Stack used (prev) :  00001058
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00001058


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001058
  01  AFile::~AFile()
      | Stack used (prev) :  00001058
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00001064


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001064
  01  AFile::FClose()
      | Stack used (prev) :  00001064
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00001070


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001070
  01  AFile::FOpen(char const *, unsigned int, unsigned int)
      | Stack used (prev) :  00001070
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00001084


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001084
  01  AFile::FRead(void *, int)
      | Stack used (prev) :  00001084
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00001088


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001088
  01  AdrList::new AdrList()
      | Stack used (prev) :  00001088
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000108C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000108C
  01  AdrList::delete ~AdrList(AdrList *)
      | Stack used (prev) :  0000108C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00001094


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001094
  01  AdrList::AdrList()
      | Stack used (prev) :  00001094
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  0000109C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000109C
  01  AdrList::FreeCLIST()
      | Stack used (prev) :  0000109C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000010A8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000010A8
  01  AdrList::ConstructList()
      | Stack used (prev) :  000010A8
      | + function block  :  00000464
  <-Sub-tree of type: Function tree
    | Stack used          :  0000150C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000150C
  01  AdrList::ConstructListCFGUPD()
      | Stack used (prev) :  0000150C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00001510


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001510
  01  AdrList::FindName(WSHDR *, char const *)
      | Stack used (prev) :  00001510
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00001524


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001524
  01  AdrList::FindCList(char const *)
      | Stack used (prev) :  00001524
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00001534


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001534
  01  patch_option_header(HEADER_DESC const *)
      | Stack used (prev) :  00001534
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00001540


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001540
  01  CreateMenu(ML_MENU_DESC const *, HEADER_DESC const *, int, int, void *)
      | Stack used (prev) :  00001540
      | + function block  :  00000020
  <-Sub-tree of type: Function tree
    | Stack used          :  00001560


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001560
  01  CreateMenu(MENU_DESC const *, HEADER_DESC const *, int, int, void *)
      | Stack used (prev) :  00001560
      | + function block  :  00000020
  <-Sub-tree of type: Function tree
    | Stack used          :  00001580


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001580
  01  CreateMenu30or2(MENU_DESC const *, HEADER_DESC const *, int, int, void *)
      | Stack used (prev) :  00001580
      | + function block  :  00000020
  <-Sub-tree of type: Function tree
    | Stack used          :  000015A0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000015A0
  01  DaemonCSM::delete ~DaemonCSM(DaemonCSM *)
      | Stack used (prev) :  000015A0
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000015A8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000015A8
  01  DaemonCSM::new DaemonCSM()
      | Stack used (prev) :  000015A8
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000015AC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000015AC
  01  DaemonCSM::DaemonCSM()
      | Stack used (prev) :  000015AC
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000015B8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000015B8
  01  DaemonCSM::~DaemonCSM()
      | Stack used (prev) :  000015B8
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000015C0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000015C0
  01  DaemonCSM::CreateDaemonCSM()
      | Stack used (prev) :  000015C0
      | + function block  :  0000003C
  <-Sub-tree of type: Function tree
    | Stack used          :  000015FC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000015FC
  01  DaemonCSM::AddDlgCsmID(int)
      | Stack used (prev) :  000015FC
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000015FC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000015FC
  01  DaemonCSM::CloseAllDlgCSM()
      | Stack used (prev) :  000015FC
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  0000160C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000160C
  01  DaemonCSM::DelDlgCsmID(int)
      | Stack used (prev) :  0000160C
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000160C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000160C
  01  DaemonCSM::IsOnTopMyCSM()
      | Stack used (prev) :  0000160C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00001614


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001614
  01  DaemonCSM::GetTopCSM()
      | Stack used (prev) :  00001614
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00001618


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001618
  01  DialogCSM::new DialogCSM()
      | Stack used (prev) :  00001618
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000161C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000161C
  01  DialogCSM::DialogCSM()
      | Stack used (prev) :  0000161C
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000161C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000161C
  01  DialogCSM::CreateDialogCSM(int, void *)
      | Stack used (prev) :  0000161C
      | + function block  :  00000040
  <-Sub-tree of type: Function tree
    | Stack used          :  0000165C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000165C
  01  EditOptionMenu::new EditOptionMenu()
      | Stack used (prev) :  0000165C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00001660


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001660
  01  EditGUI::new EditGUI()
      | Stack used (prev) :  00001660
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00001664


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001664
  01  EditGUI::delete ~EditGUI(EditGUI *)
      | Stack used (prev) :  00001664
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  0000166C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000166C
  01  EditGUI::EditGUI()
      | Stack used (prev) :  0000166C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00001674


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00001674
  01  EditGUI::~EditGUI()
      | Stack used (prev) :  00001674
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  0000167C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000167C
  01  EditGUI::CreateEditGUI(DLG_CSM *, _SDLIST *, int, int, int)
      | Stack used (prev) :  0000167C
      | + function block  :  00001078
  <-Sub-tree of type: Function tree
    | Stack used          :  000026F4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000026F4
  01  EditOptionMenu::EditOptionMenu()
      | Stack used (prev) :  000026F4
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000026F4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000026F4
  01  EditOptionMenu::CreateEditOptionMenu(DLG_CSM *, _SDLIST *, int, int, int)
      | Stack used (prev) :  000026F4
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00002700


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00002700
  01  EditGUI::CreateEditGUI(DLG_CSM *, char const *)
      | Stack used (prev) :  00002700
      | + function block  :  0000107C
  <-Sub-tree of type: Function tree
    | Stack used          :  0000377C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000377C
  01  EditGUI::InsertText(void *, WSHDR *)
      | Stack used (prev) :  0000377C
      | + function block  :  0000004C
  <-Sub-tree of type: Function tree
    | Stack used          :  000037C8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000037C8
  01  EditGUI::EditSendSMS(WSHDR *)
      | Stack used (prev) :  000037C8
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  000037D8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000037D8
  01  EditGUI::SaveDraft(WSHDR *)
      | Stack used (prev) :  000037D8
      | + function block  :  00000018
  <-Sub-tree of type: Function tree
    | Stack used          :  000037F0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000037F0
  01  EditGUI::InsertNumber(void *, char *)
      | Stack used (prev) :  000037F0
      | + function block  :  0000005C
  <-Sub-tree of type: Function tree
    | Stack used          :  0000384C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000384C
  01  EditGUI::SetNumber(void *, char *)
      | Stack used (prev) :  0000384C
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003868


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003868
  01  EditGUI::AddNumberBlank(void *)
      | Stack used (prev) :  00003868
      | + function block  :  0000005C
  <-Sub-tree of type: Function tree
    | Stack used          :  000038C4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000038C4
  01  CFile::FOpen(char const *, unsigned int, unsigned int)
      | Stack used (prev) :  000038C4
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000038C8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000038C8
  01  CFile::FRead(int, void *, int)
      | Stack used (prev) :  000038C8
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000038CC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000038CC
  01  CFile::FWrite(int, void const *, int)
      | Stack used (prev) :  000038CC
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000038D0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000038D0
  01  CFile::FClose(int)
      | Stack used (prev) :  000038D0
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000038D4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000038D4
  01  CFile::LSeek(int, unsigned int, unsigned int)
      | Stack used (prev) :  000038D4
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000038DC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000038DC
  01  CFile::MkDir(char const *)
      | Stack used (prev) :  000038DC
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000038E0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000038E0
  01  CFile::IsDir(char const *)
      | Stack used (prev) :  000038E0
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000038E4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000038E4
  01  CFile::FindFirstFile(DIR_ENTRY *, char *)
      | Stack used (prev) :  000038E4
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000038E8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000038E8
  01  CFile::FindNextFile(DIR_ENTRY *)
      | Stack used (prev) :  000038E8
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000038EC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000038EC
  01  CFile::FindClose(DIR_ENTRY *)
      | Stack used (prev) :  000038EC
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000038F0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000038F0
  01  CFile::IsFileExist(char const *)
      | Stack used (prev) :  000038F0
      | + function block  :  0000002C
  <-Sub-tree of type: Function tree
    | Stack used          :  0000391C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000391C
  01  CFile::FDelete(char const *)
      | Stack used (prev) :  0000391C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003920


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003920
  01  CFile::FMove(char const *, char const *)
      | Stack used (prev) :  00003920
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003924


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003924
  01  IconPack::new IconPack()
      | Stack used (prev) :  00003924
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  0000392C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000392C
  01  IconPack::delete ~IconPack(IconPack *)
      | Stack used (prev) :  0000392C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003934


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003934
  01  IconPack::LoadIconPack()
      | Stack used (prev) :  00003934
      | + function block  :  00000114
  <-Sub-tree of type: Function tree
    | Stack used          :  00003A48


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003A48
  01  IconPack::FreeIconPack()
      | Stack used (prev) :  00003A48
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00003A58


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003A58
  01  IconPack::LoadDefaultIP()
      | Stack used (prev) :  00003A58
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003A5C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003A5C
  01  IconPack::InitIconPack()
      | Stack used (prev) :  00003A5C
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003A5C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003A5C
  01  KeyHook::Create()
      | Stack used (prev) :  00003A5C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003A60


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003A60
  01  KeyHook::Remove()
      | Stack used (prev) :  00003A60
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003A64


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003A64
  01  KeyHook::IsSS()
      | Stack used (prev) :  00003A64
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003A6C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003A6C
  01  KeyHook::IsIdle()
      | Stack used (prev) :  00003A6C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003A70


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003A70
  01  LangPack::new LangPack()
      | Stack used (prev) :  00003A70
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003A74


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003A74
  01  LangPack::delete ~LangPack(LangPack *)
      | Stack used (prev) :  00003A74
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003A7C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003A7C
  01  LangPack::LoadLangFile()
      | Stack used (prev) :  00003A7C
      | + function block  :  00000094
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B10


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B10
  01  LangPack::LoadLgpDefault()
      | Stack used (prev) :  00003B10
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B14


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B14
  01  LangPack::GotoLangLineEnd(char *)
      | Stack used (prev) :  00003B14
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B14


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B14
  01  LangPack::GotoLangLineStart(char *)
      | Stack used (prev) :  00003B14
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B14


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B14
  01  LangPack::InitLgp()
      | Stack used (prev) :  00003B14
      | + function block  :  0000004C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B60


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B60
  01  LangPack::LangPack()
      | Stack used (prev) :  00003B60
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B68


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B68
  01  LangPack::~LangPack()
      | Stack used (prev) :  00003B68
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B70


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B70
  01  MainMenu::new MainMenu()
      | Stack used (prev) :  00003B70
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B74


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B74
  01  MainMenu::MainMenu()
      | Stack used (prev) :  00003B74
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B74


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B74
  01  MainMenu::GetMainMenuGUI(DLG_CSM *, int)
      | Stack used (prev) :  00003B74
      | + function block  :  00000018
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B8C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B8C
  01  Mss3App::Start(char *, char *)
      | Stack used (prev) :  00003B8C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B98


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B98
  01  Mss3App::InitSetting()
      | Stack used (prev) :  00003B98
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003B9C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003B9C
  01  Mss3App::InitDatPath()
      | Stack used (prev) :  00003B9C
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00003BAC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003BAC
  01  Mss3App::IsAlreadyRuning()
      | Stack used (prev) :  00003BAC
      | + function block  :  00000040
  <-Sub-tree of type: Function tree
    | Stack used          :  00003BEC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003BEC
  01  SendMyIpc(int)
      | Stack used (prev) :  00003BEC
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003BF0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003BF0
  01  SendMyIpc(int, void *)
      | Stack used (prev) :  00003BF0
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003BFC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003BFC
  01  NAbCSM::new NAbCSM()
      | Stack used (prev) :  00003BFC
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003C00


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003C00
  01  NAbCSM::NAbCSM()
      | Stack used (prev) :  00003C00
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003C00


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003C00
  01  NAbCSM::CreateNAbCSM(void *, int, char *, int)
      | Stack used (prev) :  00003C00
      | + function block  :  0000005C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003C5C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003C5C
  01  NumList::new NumList()
      | Stack used (prev) :  00003C5C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003C60


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003C60
  01  NumList::delete ~NumList(NumList *)
      | Stack used (prev) :  00003C60
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003C68


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003C68
  01  NumList::AllocNL()
      | Stack used (prev) :  00003C68
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003C70


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003C70
  01  NumList::FreeList()
      | Stack used (prev) :  00003C70
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003C7C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003C7C
  01  NumList::AddToList_end(_NLST *)
      | Stack used (prev) :  00003C7C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003C88


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003C88
  01  NumList::FindNL(int)
      | Stack used (prev) :  00003C88
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003C88


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003C88
  01  NumList::AddToList(char const *)
      | Stack used (prev) :  00003C88
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00003C9C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003C9C
  01  NumList::DeleteNL(_NLST *)
      | Stack used (prev) :  00003C9C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003CA8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003CA8
  01  NumList::AddNumsToList(char const *)
      | Stack used (prev) :  00003CA8
      | + function block  :  00000094
  <-Sub-tree of type: Function tree
    | Stack used          :  00003D3C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003D3C
  01  NumList::UpdateNL(_NLST *, char const *)
      | Stack used (prev) :  00003D3C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003D48


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003D48
  01  NumList::InsertNL_front(_NLST *, char const *)
      | Stack used (prev) :  00003D48
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00003D58


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003D58
  01  NumList::AllocNL(char const *)
      | Stack used (prev) :  00003D58
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003D64


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003D64
  01  NumList::InsertNL_behind(_NLST *, char const *)
      | Stack used (prev) :  00003D64
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003D70


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003D70
  01  NumList::ClearNL(_NLST *)
      | Stack used (prev) :  00003D70
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003D74


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003D74
  01  NumList::IsNumExist(char const *)
      | Stack used (prev) :  00003D74
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003D80


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003D80
  01  OthMenu::new OthMenu()
      | Stack used (prev) :  00003D80
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003D84


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003D84
  01  OthMenu::OthMenu()
      | Stack used (prev) :  00003D84
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003D84


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003D84
  01  OthMenu::CreateOthMenu(DLG_CSM *)
      | Stack used (prev) :  00003D84
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003D8C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003D8C
  01  OthMenu::OpenCfgFile()
      | Stack used (prev) :  00003D8C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003D94


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003D94
  01  OthMenu::ShowAbout()
      | Stack used (prev) :  00003D94
      | + function block  :  00000088
  <-Sub-tree of type: Function tree
    | Stack used          :  00003E1C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003E1C
  01  OthMenu::ShowHelp()
      | Stack used (prev) :  00003E1C
      | + function block  :  00000098
  <-Sub-tree of type: Function tree
    | Stack used          :  00003EB4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003EB4
  01  PlaySouNd::new PlaySouNd()
      | Stack used (prev) :  00003EB4
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003EB8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003EB8
  01  PlaySouNd::delete ~PlaySouNd(PlaySouNd *)
      | Stack used (prev) :  00003EB8
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003EC0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003EC0
  01  PlaySouNd::~PlaySouNd()
      | Stack used (prev) :  00003EC0
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003EC8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003EC8
  01  PlaySouNd::PlayStop()
      | Stack used (prev) :  00003EC8
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003ED0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003ED0
  01  PlaySouNd::PlayDone()
      | Stack used (prev) :  00003ED0
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003ED0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003ED0
  01  PlaySouNd::GetHandle()
      | Stack used (prev) :  00003ED0
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003ED0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003ED0
  01  PopupNewIn::new PopupNewIn()
      | Stack used (prev) :  00003ED0
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003ED4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003ED4
  01  PopupNewIn::PopupNewIn()
      | Stack used (prev) :  00003ED4
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003ED4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003ED4
  01  PopupNewIn::CreatePopupNewIn(DLG_CSM *, _SDLIST *)
      | Stack used (prev) :  00003ED4
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00003EE8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003EE8
  01  MyShowMsg::MyShow(int, char *)
      | Stack used (prev) :  00003EE8
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003EEC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003EEC
  01  SendList::new SendList()
      | Stack used (prev) :  00003EEC
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003EF0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003EF0
  01  SendList::delete ~SendList(SendList *)
      | Stack used (prev) :  00003EF0
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003EF8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003EF8
  01  SendList::AllocSL()
      | Stack used (prev) :  00003EF8
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003F00


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003F00
  01  SendList::FreeList()
      | Stack used (prev) :  00003F00
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003F0C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003F0C
  01  SendList::AddToList(_SNDLST *)
      | Stack used (prev) :  00003F0C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003F18


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003F18
  01  SendList::AddToList(char const *, WSHDR *)
      | Stack used (prev) :  00003F18
      | + function block  :  00000018
  <-Sub-tree of type: Function tree
    | Stack used          :  00003F30


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003F30
  01  SendList::DeleteSL(_SNDLST *)
      | Stack used (prev) :  00003F30
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003F3C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003F3C
  01  SendList::FindSL(int)
      | Stack used (prev) :  00003F3C
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003F3C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003F3C
  01  SendList::IsSending()
      | Stack used (prev) :  00003F3C
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00003F3C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003F3C
  01  SendList::SendStart()
      | Stack used (prev) :  00003F3C
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00003F4C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003F4C
  01  SendList::SendEnd(int)
      | Stack used (prev) :  00003F4C
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00003F60


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003F60
  01  SendList::CatList(_SNDLST *)
      | Stack used (prev) :  00003F60
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003F6C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003F6C
  01  SendList::CsmToTop(int)
      | Stack used (prev) :  00003F6C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00003F74


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003F74
  01  SiememPDU::Add2WS(char *, WSHDR *, int)
      | Stack used (prev) :  00003F74
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00003F88


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003F88
  01  SiememPDU::Hex2Num(char *, char *, int)
      | Stack used (prev) :  00003F88
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00003F8C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003F8C
  01  SiememPDU::Bit7Decode(WSHDR *, char *, int, int)
      | Stack used (prev) :  00003F8C
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  00003FA8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00003FA8
  01  SiememPDU::PduDecodeTxt(SDLIST *, char *)
      | Stack used (prev) :  00003FA8
      | + function block  :  00000290
  <-Sub-tree of type: Function tree
    | Stack used          :  00004238


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004238
  01  SiememPDU::PduDecodeAll(SDLIST *, char *)
      | Stack used (prev) :  00004238
      | + function block  :  0000029C
  <-Sub-tree of type: Function tree
    | Stack used          :  000044D4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000044D4
  01  SiememPDU::DoSmsReport(SDLIST *, char *, WSHDR *)
      | Stack used (prev) :  000044D4
      | + function block  :  00000034
  <-Sub-tree of type: Function tree
    | Stack used          :  00004508


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004508
  01  SmsData::new SmsData()
      | Stack used (prev) :  00004508
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000450C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000450C
  01  SmsData::delete ~SmsData(SmsData *)
      | Stack used (prev) :  0000450C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00004514


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004514
  01  SmsData::AllocSDL()
      | Stack used (prev) :  00004514
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  0000451C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000451C
  01  SmsData::DeleteSDL(_SDLIST *)
      | Stack used (prev) :  0000451C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00004528


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004528
  01  SmsData::FreeAllSDL()
      | Stack used (prev) :  00004528
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00004534


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004534
  01  SmsData::AddByTimeSDL(_SDLIST *)
      | Stack used (prev) :  00004534
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00004544


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004544
  01  SmsData::FreeOneSDL(_SDLIST *)
      | Stack used (prev) :  00004544
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  0000454C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000454C
  01  SmsData::CopyOneSDL(_SDLIST *)
      | Stack used (prev) :  0000454C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00004558


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004558
  01  SmsData::FindSDL(int)
      | Stack used (prev) :  00004558
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00004558


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004558
  01  SmsData::FindOpmsgSDL(int)
      | Stack used (prev) :  00004558
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00004564


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004564
  01  SmsData::FindSDL(char *)
      | Stack used (prev) :  00004564
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00004570


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004570
  01  SmsData::GetSMSCount(int)
      | Stack used (prev) :  00004570
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00004574


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004574
  01  SmsData::GetSMSCount(int, int)
      | Stack used (prev) :  00004574
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00004574


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004574
  01  SmsData::FindSDL(int, int)
      | Stack used (prev) :  00004574
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00004578


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004578
  01  SmsData::ReadDat()
      | Stack used (prev) :  00004578
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00004588


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004588
  01  SmsData::DeMsgDataList(SMS_DATA_LIST *)
      | Stack used (prev) :  00004588
      | + function block  :  0000002C
  <-Sub-tree of type: Function tree
    | Stack used          :  000045B4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000045B4
  01  SmsData::ReadAllDatMsg()
      | Stack used (prev) :  000045B4
      | + function block  :  00000018
  <-Sub-tree of type: Function tree
    | Stack used          :  000045CC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000045CC
  01  SmsData::FindMsgDataL(int)
      | Stack used (prev) :  000045CC
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000045D4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000045D4
  01  SmsData::ReadMessageOne(int)
      | Stack used (prev) :  000045D4
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  000045E4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000045E4
  01  SmsData::ReadMss(char *, _SDLIST *)
      | Stack used (prev) :  000045E4
      | + function block  :  000000BC
  <-Sub-tree of type: Function tree
    | Stack used          :  000046A0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000046A0
  01  SmsData::ReadFolder(int)
      | Stack used (prev) :  000046A0
      | + function block  :  00000458
  <-Sub-tree of type: Function tree
    | Stack used          :  00004AF8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004AF8
  01  SmsData::SaveMss(WSHDR *, char const *, _SDLIST *, int, int)
      | Stack used (prev) :  00004AF8
      | + function block  :  00000194
  <-Sub-tree of type: Function tree
    | Stack used          :  00004C8C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004C8C
  01  SmsData::GetMssPath(char *, char *, TTime *, TDate *)
      | Stack used (prev) :  00004C8C
      | + function block  :  000000A8
  <-Sub-tree of type: Function tree
    | Stack used          :  00004D34


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004D34
  01  SmsData::DeleteMessage(_SDLIST *)
      | Stack used (prev) :  00004D34
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00004D44


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004D44
  01  SmsData::ReadAllMessage()
      | Stack used (prev) :  00004D44
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00004D50


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004D50
  01  SmsData::SmsData()
      | Stack used (prev) :  00004D50
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00004D58


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004D58
  01  SmsData::~SmsData()
      | Stack used (prev) :  00004D58
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00004D60


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004D60
  01  SmsData::IsNewSMS(int)
      | Stack used (prev) :  00004D60
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00004D68


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004D68
  01  SmsData::CheckSMS(int)
      | Stack used (prev) :  00004D68
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00004D78


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004D78
  01  SmsData::CheckDat()
      | Stack used (prev) :  00004D78
      | + function block  :  00000024
  <-Sub-tree of type: Function tree
    | Stack used          :  00004D9C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00004D9C
  01  SmsData::CheckFolder(int)
      | Stack used (prev) :  00004D9C
      | + function block  :  00000458
  <-Sub-tree of type: Function tree
    | Stack used          :  000051F4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000051F4
  01  SmsData::IsDatExist(int)
      | Stack used (prev) :  000051F4
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  000051FC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000051FC
  01  SmsData::CheckSDList()
      | Stack used (prev) :  000051FC
      | + function block  :  00000018
  <-Sub-tree of type: Function tree
    | Stack used          :  00005214


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005214
  01  SmsData::CheckAll()
      | Stack used (prev) :  00005214
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00005220


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005220
  01  SmsData::NewToReadSMS(_SDLIST *)
      | Stack used (prev) :  00005220
      | + function block  :  0000009C
  <-Sub-tree of type: Function tree
    | Stack used          :  000052BC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000052BC
  01  SmsData::IsExistSDL(_SDLIST *)
      | Stack used (prev) :  000052BC
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  000052BC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000052BC
  01  SmsData::FindNextSDL(_SDLIST *, int)
      | Stack used (prev) :  000052BC
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000052C0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000052C0
  01  SmsData::FindPrevSDL(_SDLIST *, int)
      | Stack used (prev) :  000052C0
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000052C4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000052C4
  01  SmsData::FilterFindSDL(int)
      | Stack used (prev) :  000052C4
      | + function block  :  000000A8
  <-Sub-tree of type: Function tree
    | Stack used          :  0000536C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000536C
  01  SmsData::FilterFindSDL(int, int)
      | Stack used (prev) :  0000536C
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000536C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000536C
  01  SmsData::FilterFindSDL(char const *, int)
      | Stack used (prev) :  0000536C
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00005380


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005380
  01  SmsData::FilterFindSDL(WSHDR *, int)
      | Stack used (prev) :  00005380
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00005394


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005394
  01  SmsData::FilterGetCount()
      | Stack used (prev) :  00005394
      | + function block  :  000000A4
  <-Sub-tree of type: Function tree
    | Stack used          :  00005438


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005438
  01  SmsData::FilterGetCount(char const *)
      | Stack used (prev) :  00005438
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00005448


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005448
  01  SmsData::FilterGetCount(WSHDR *)
      | Stack used (prev) :  00005448
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  00005458


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005458
  01  SmsData::FilterFindNext(_SDLIST *)
      | Stack used (prev) :  00005458
      | + function block  :  000000A4
  <-Sub-tree of type: Function tree
    | Stack used          :  000054FC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000054FC
  01  SmsData::FilterFindNext(_SDLIST *, char const *)
      | Stack used (prev) :  000054FC
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00005508


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005508
  01  SmsData::FilterFindPrev(_SDLIST *)
      | Stack used (prev) :  00005508
      | + function block  :  000000A4
  <-Sub-tree of type: Function tree
    | Stack used          :  000055AC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000055AC
  01  SmsData::FilterFindPrev(_SDLIST *, char const *)
      | Stack used (prev) :  000055AC
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000055B8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000055B8
  01  SmsData::MoveToArchive(_SDLIST *)
      | Stack used (prev) :  000055B8
      | + function block  :  00000120
  <-Sub-tree of type: Function tree
    | Stack used          :  000056D8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000056D8
  01  SmsData::GetFilePathSDL(_SDLIST *, char *, char *, int)
      | Stack used (prev) :  000056D8
      | + function block  :  000001A4
  <-Sub-tree of type: Function tree
    | Stack used          :  0000587C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000587C
  01  SmsData::MoveAllToArchive()
      | Stack used (prev) :  0000587C
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  0000588C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000588C
  01  SmsData::FindLastNew()
      | Stack used (prev) :  0000588C
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000588C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000588C
  01  SmsData::ExportAllToText()
      | Stack used (prev) :  0000588C
      | + function block  :  00000288
  <-Sub-tree of type: Function tree
    | Stack used          :  00005B14


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005B14
  01  SmsData::DeleteAllMss()
      | Stack used (prev) :  00005B14
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00005B28


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005B28
  01  SmsOptionMenu::new SmsOptionMenu()
      | Stack used (prev) :  00005B28
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00005B2C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005B2C
  01  SmsListMenu::new SmsListMenu()
      | Stack used (prev) :  00005B2C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00005B30


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005B30
  01  SmsListMenu::SmsListMenu()
      | Stack used (prev) :  00005B30
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00005B30


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005B30
  01  SmsListMenu::CreateSmsListMenu(int, int, DLG_CSM *)
      | Stack used (prev) :  00005B30
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00005B3C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005B3C
  01  SmsListMenu::GetSmsListMenuGUI(int, int, DLG_CSM *, int)
      | Stack used (prev) :  00005B3C
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  00005B58


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005B58
  01  SmsOptionMenu::SmsOptionMenu()
      | Stack used (prev) :  00005B58
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00005B58


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005B58
  01  SmsOptionMenu::CreateSmsOptionMenu(DLG_CSM *, int, int, _SDLIST *)
      | Stack used (prev) :  00005B58
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00005B60


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005B60
  01  SmsListMenu::ReCreateMe(void *)
      | Stack used (prev) :  00005B60
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  00005B7C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005B7C
  01  TViewGUI::new TViewGUI()
      | Stack used (prev) :  00005B7C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00005B80


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005B80
  01  TViewGUI::CreateTViewGUI(WSHDR *, WSHDR *)
      | Stack used (prev) :  00005B80
      | + function block  :  00000020
  <-Sub-tree of type: Function tree
    | Stack used          :  00005BA0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005BA0
  01  TabGUI::TabGUI()
      | Stack used (prev) :  00005BA0
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00005BA8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005BA8
  01  TabGUI::~TabGUI()
      | Stack used (prev) :  00005BA8
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00005BA8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005BA8
  01  TabGUI::CreateTabGUI(DLG_CSM *)
      | Stack used (prev) :  00005BA8
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  00005BC4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005BC4
  01  TabGUI::ReCreateTabGUI(DLG_CSM *)
      | Stack used (prev) :  00005BC4
      | + function block  :  00000028
  <-Sub-tree of type: Function tree
    | Stack used          :  00005BEC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005BEC
  01  TplMenu::delete ~TplMenu(TplMenu *)
      | Stack used (prev) :  00005BEC
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00005BF4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005BF4
  01  TplMenu::new TplMenu()
      | Stack used (prev) :  00005BF4
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00005BF8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005BF8
  01  TplMenu::TplMenu()
      | Stack used (prev) :  00005BF8
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00005BF8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005BF8
  01  TplMenu::AllocTPList()
      | Stack used (prev) :  00005BF8
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00005C00


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005C00
  01  TplMenu::AddToTPList(_TPLIST *)
      | Stack used (prev) :  00005C00
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00005C0C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005C0C
  01  TplMenu::FreeTPList()
      | Stack used (prev) :  00005C0C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00005C18


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00005C18
  01  TplMenu::ReadTpl()
      | Stack used (prev) :  00005C18
      | + function block  :  000024F4
  <-Sub-tree of type: Function tree
    | Stack used          :  0000810C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000810C
  01  TplMenu::GetTpl(int)
      | Stack used (prev) :  0000810C
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  0000810C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000810C
  01  TplMenu::CreateTplMenu(void *)
      | Stack used (prev) :  0000810C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00008118


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008118
  01  Vibra::new Vibra()
      | Stack used (prev) :  00008118
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000811C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000811C
  01  Vibra::delete ~Vibra(Vibra *)
      | Stack used (prev) :  0000811C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00008124


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008124
  01  Vibra::Vibra()
      | Stack used (prev) :  00008124
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  0000812C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000812C
  01  Vibra::InitThythm()
      | Stack used (prev) :  0000812C
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00008140


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008140
  01  Vibra::ReInitThythm()
      | Stack used (prev) :  00008140
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00008148


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008148
  01  Vibra::VibraStart()
      | Stack used (prev) :  00008148
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00008150


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008150
  01  Vibra::VibraNext()
      | Stack used (prev) :  00008150
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00008158


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008158
  01  Vibra::VibraStop()
      | Stack used (prev) :  00008158
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000815C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000815C
  01  operator new(unsigned int)
      | Stack used (prev) :  0000815C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00008160


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008160
  01  operator new[](unsigned int)
      | Stack used (prev) :  00008160
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00008164


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008164
  01  operator delete(void *)
      | Stack used (prev) :  00008164
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00008168


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008168
  01  LoadConfigData
      | Stack used (prev) :  00008168
      | + function block  :  00000024
  <-Sub-tree of type: Function tree
    | Stack used          :  0000818C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000818C
  01  InitConfig
      | Stack used (prev) :  0000818C
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00008194


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008194
  01  main
      | Stack used (prev) :  00008194
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00008198


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008198
  01  char16to8(int)
      | Stack used (prev) :  00008198
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00008198


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008198
  01  char8to16(int)
      | Stack used (prev) :  00008198
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00008198


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008198
  01  ascii_2ws(WSHDR *, char const *, int)
      | Stack used (prev) :  00008198
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000081A4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000081A4
  01  wstrcmp_nocase(WSHDR *, WSHDR *)
      | Stack used (prev) :  000081A4
      | + function block  :  00000020
  <-Sub-tree of type: Function tree
    | Stack used          :  000081C4


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000081C4
  01  wstrncmp_nocase(WSHDR *, WSHDR *, int)
      | Stack used (prev) :  000081C4
      | + function block  :  00000024
  <-Sub-tree of type: Function tree
    | Stack used          :  000081E8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000081E8
  01  num_2ws(WSHDR *, char const *, int)
      | Stack used (prev) :  000081E8
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  00008204


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008204
  01  ws_2num(WSHDR *, char *, int)
      | Stack used (prev) :  00008204
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00008208


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008208
  01  str2int(char const *)
      | Stack used (prev) :  00008208
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00008208


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008208
  01  IsWsSmall(WSHDR *)
      | Stack used (prev) :  00008208
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00008208


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008208
  01  IsNum(WSHDR *)
      | Stack used (prev) :  00008208
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00008208


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008208
  01  w_charcmp_nocase(unsigned short *, unsigned short *, int)
      | Stack used (prev) :  00008208
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  00008224


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008224
  01  wstrstr(WSHDR *, WSHDR *)
      | Stack used (prev) :  00008224
      | + function block  :  0000001C
  <-Sub-tree of type: Function tree
    | Stack used          :  00008240


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008240
  01  NumberMatch(char const *, char const *)
      | Stack used (prev) :  00008240
      | + function block  :  00000014
  <-Sub-tree of type: Function tree
    | Stack used          :  00008254


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00008254
  01  StrClearChr(char *, int)
      | Stack used (prev) :  00008254
      | + function block  :  00000000
  <-Sub-tree of type: Function tree
    | Stack used          :  00008254




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
ELFBEGIN             CODE_AREA           00000000                     rel    0
DATA_ID              CODE_AREA      00000000 - 0000042F         430   rel    2
START                CODE_AREA           00000430                     dse    0
CODE                 CODE_AREA      00000430 - 0000B233        AE04   rel    2
DATA_C               CODE_AREA      0000B234 - 0000BEB4         C81   rel    2
INITTAB              CODE_AREA      0000BEB8 - 0000BECF          18   rel    2
DATA_Z               CODE_AREA      0000BED0 - 0000FFE3        4114   rel    2
MYSEG                CODE_AREA           0000FFE4                     dse    0
DATA_N               CODE_AREA           0000FFE4                     dse    0
CONFIG_C             CODE_AREA      0000FFE4 - 000109CB         9E8   rel    2
DATA_I               DATA_AREA      00000000 - 0000042F         430   rel    2

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 68 041 bytes of CODE memory
  1 072 bytes of DATA memory

Errors: none
Warnings: none

