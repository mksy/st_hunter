################################################################################
#                                                                              #
#      IAR Universal Linker V4.60I/386                                         #
#                                                                              #
#           Link time     =  14/May/2008  12:49:10                             #
#           Target CPU    =  ARM                                               #
#           List file     =  D:\Pasha\elf\googlecode\MyMenu2\MyMenu2\E71Csw41\ #
#                            List\MyMenu2.map                                  #
#           Output file 1 =  D:\Pasha\elf\googlecode\MyMenu2\MyMenu2\E71Csw41\ #
#                            Exe\MyMenu2.elf                                   #
#                            Format: elf, variant: -yas                        #
#           Output file 2 =  D:\Pasha\elf\googlecode\MyMenu2\MyMenu2\E71Csw41\ #
#                            Exe\MyMenu2.a79                                   #
#                            Format: intel-extended                            #
#           Command line  =  D:\Pasha\elf\googlecode\MyMenu2\MyMenu2\E71Csw41\ #
#                            Obj\entry.r79                                     #
#                            D:\Pasha\elf\googlecode\MyMenu2\MyMenu2\E71Csw41\ #
#                            Obj\main.r79                                      #
#                            -o                                                #
#                            D:\Pasha\elf\googlecode\MyMenu2\MyMenu2\E71Csw41\ #
#                            Exe\MyMenu2.a79                                   #
#                            -Fintel-extended -l                               #
#                            D:\Pasha\elf\googlecode\MyMenu2\MyMenu2\E71Csw41\ #
#                            List\MyMenu2.map                                  #
#                            -xmsnio                                           #
#                            "-ID:\Pasha\Embedded Workbench 4.0 Evaluation2\AR #
#                            M\LIB\"                                           #
#                            -f                                                #
#                            D:\Pasha\elf\googlecode\MyMenu2\MyMenu2\E71Csw41. #
#                            xcl                                               #
#                            (-carm                                            #
#                            -Z(CODE)ENTRYPOINT_ONLINE_STATUS=A0863034-FFFFFFF #
#                            F                                                 #
#                            -Z(CODE)ENTRYPOINT_ONLINE_STATUS1=A0863AB4-FFFFFF #
#                            FF                                                #
#                            -Z(CODE)ENTRYPOINT_SAT=A08640B4-FFFFFFFF          #
#                            -Z(CODE)SAT_PROC=A086411C-FFFFFFFF                #
#                            -Z(CODE)SAT_LGP=A08640E4-FFFFFFFF                 #
#                            -Z(CODE)SAT_LGP1=A08640F4-FFFFFFFF                #
#                            -Z(CODE)SAT_LGP2=A0864104-FFFFFFFF                #
#                            -Z(CODE)CODE,DATA_C,DATA_ID,INITTAB=A1359F00-FFFF #
#                            FFFF                                              #
#                            -Z(DATA)DATA_Z,DATA_I=A8D80580-FFFFFFFF)          #
#                            -Oelf,as=D:\Pasha\elf\googlecode\MyMenu2\MyMenu2\ #
#                            E71Csw41\Exe\MyMenu2.elf                          #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

                  There are no program entries.




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  StackAlign4  = USED
  __cpu_mode   = __pcs__interwork
  __data_model = absolute
  __endian     = little
  __rt_version = 6



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  FILE NAME : D:\Pasha\elf\googlecode\MyMenu2\MyMenu2\E71Csw41\Obj\entry.r79
  PROGRAM MODULE, NAME : entry

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: A1359F00 - A1359F17 (0x18 bytes), align: 2
  Segment part 0. ROOT.       Intra module refs:   Segment part 1
                                                   Segment part 2
                                                   Segment part 3
                                                   Segment part 5
                                                   Segment part 6
                                                   Segment part 7
    -------------------------------------------------------------------------
ENTRYPOINT_ONLINE_STATUS
  Relative segment, address: A0863034 - A0863037 (0x4 bytes), align: 2
  Segment part 1. ROOT.
    -------------------------------------------------------------------------
ENTRYPOINT_ONLINE_STATUS1
  Relative segment, address: A0863AB4 - A0863AB7 (0x4 bytes), align: 2
  Segment part 2. ROOT.
    -------------------------------------------------------------------------
ENTRYPOINT_SAT
  Relative segment, address: A08640B4 - A08640B7 (0x4 bytes), align: 2
  Segment part 3. ROOT.
    -------------------------------------------------------------------------
SAT_PROC
  Relative segment, address: A086411C - A0864123 (0x8 bytes), align: 2
  Segment part 4. ROOT.
    -------------------------------------------------------------------------
SAT_LGP
  Relative segment, address: A08640E4 - A08640EB (0x8 bytes), align: 2
  Segment part 5. ROOT.
    -------------------------------------------------------------------------
SAT_LGP1
  Relative segment, address: A08640F4 - A08640FB (0x8 bytes), align: 2
  Segment part 6. ROOT.
    -------------------------------------------------------------------------
SAT_LGP2
  Relative segment, address: A0864104 - A086410F (0xc bytes), align: 2
  Segment part 7. ROOT.

    *************************************************************************

  FILE NAME : D:\Pasha\elf\googlecode\MyMenu2\MyMenu2\E71Csw41\Obj\main.r79
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
DATA_Z
  Relative segment, address: A8D80580 - A8D80587 (0x8 bytes), align: 2
  Segment part 10.            Intra module refs:   AddtoMenuList
                                                   Segment part 25
                                                   Segment part 36
                                                   Segment part 73
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           buf                     A8D80580 
           mltop                   A8D80584 
    -------------------------------------------------------------------------
CODE
  Segment part 17. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A1359F18 - A1359F5B (0x44 bytes), align: 2
  Segment part 18.            Intra module refs:   strpath_2ws
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           utf8_2str               A1359F19 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 19. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A1359F5C - A1359F9F (0x44 bytes), align: 2
  Segment part 20.            Intra module refs:   read_cfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AddtoMenuList           A1359F5D 
               stack 1 = 00000000 ( 00000018 )
    -------------------------------------------------------------------------
CODE
  Segment part 21. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A1359FA0 - A1359FB3 (0x14 bytes), align: 2
  Segment part 22.            Intra module refs:   Killer
                                                   read_cfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           FreeMenuList            A1359FA1 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 23. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A1359FB4 - A1359FCB (0x18 bytes), align: 2
  Segment part 24.            Intra module refs:   menu_iconhndl
                                                   menu_onkey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_mlitem              A1359FB5 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A1359FCC - A1359FCF (0x4 bytes), align: 2
  Segment part 25.            Intra module refs:   FreeMenuList
                                                   get_mlitem
    -------------------------------------------------------------------------
CODE
  Segment part 26. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A1359FD0 - A1359FE9 (0x1a bytes), align: 2
  Segment part 27.            Intra module refs:   read_cfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strchrinline            A1359FD1 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 28. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A1359FEC - A1359FFB (0x10 bytes), align: 2
  Segment part 29.            Intra module refs:   read_cfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gotoRealPos             A1359FED 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 30. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A1359FFC - A135A00B (0x10 bytes), align: 2
  Segment part 31.            Intra module refs:   CheckType
                                                   read_cfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           gotoLineEnd             A1359FFD 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 32. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A00C - A135A045 (0x3a bytes), align: 2
  Segment part 33.            Intra module refs:   read_cfg
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CheckType               A135A00D 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 34. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A048 - A135A183 (0x13c bytes), align: 2
  Segment part 35.            Intra module refs:   maincsm_oncreate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           read_cfg                A135A049 
               stack 1 = 00000000 ( 00000040 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A184 - A135A187 (0x4 bytes), align: 2
  Segment part 36.            Intra module refs:   read_cfg
    -------------------------------------------------------------------------
CODE
  Segment part 37. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A188 - A135A1B9 (0x32 bytes), align: 2
  Segment part 38.            Intra module refs:   GetFunctionPointByName
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strncmpNoCase           A135A189 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 39. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A1BC - A135A1EF (0x34 bytes), align: 2
  Segment part 40.            Intra module refs:   run_ml
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           GetFunctionPointByName
                                   A135A1BD 
               stack 1 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Segment part 41. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A1F0 - A135A1F9 (0xa bytes), align: 2
  Segment part 42.            Intra module refs:   run_ml
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           run_address             A135A1F1 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 43. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 44. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           run_shortcut            
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 45. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A1FC - A135A223 (0x28 bytes), align: 2
  Segment part 46.            Intra module refs:   run_ml
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           chr2num                 A135A1FD 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 47. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A224 - A135A295 (0x72 bytes), align: 2
  Segment part 48.            Intra module refs:   menu_onkey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           run_ml                  A135A225 
               stack 1 = 00000000 ( 00000030 )
    -------------------------------------------------------------------------
CODE
  Segment part 49. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A298 - A135A2DF (0x48 bytes), align: 2
  Segment part 50.            Intra module refs:   run_file
                                                   run_folder
                                                   run_mymenu2_editor
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           strpath_2ws             A135A298 
               stack 1 = 00000000 ( 0000010C )
    -------------------------------------------------------------------------
CODE
  Segment part 51. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A2E0 - A135A34B (0x6c bytes), align: 2
  Segment part 52.            Intra module refs:   run_ml
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           run_folder              A135A2E0 
               stack 1 = 00000000 ( 00000074 )
    -------------------------------------------------------------------------
CODE
  Segment part 53. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A34C - A135A387 (0x3c bytes), align: 2
  Segment part 54.            Intra module refs:   run_ml
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           run_file                A135A34C 
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
CODE
  Segment part 55. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A388 - A135A3EF (0x68 bytes), align: 2
  Segment part 56.            Intra module refs:   menu_onkey
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           run_mymenu2_editor      A135A388 
               stack 1 = 00000000 ( 00000034 )
    -------------------------------------------------------------------------
CODE
  Segment part 57. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A3F0 - A135A4A3 (0xb4 bytes), align: 2
  Segment part 58.            Intra module refs:   Segment part 14
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           menu_onkey              A135A3F0 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 59. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A4A4 - A135A4B7 (0x14 bytes), align: 2
  Segment part 60.            Intra module refs:   Segment part 14
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           menu_ghook              A135A4A4 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 61. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A4B8 - A135A543 (0x8c bytes), align: 2
  Segment part 62.            Intra module refs:   Segment part 14
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           menu_iconhndl           A135A4B8 
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 63. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A544 - A135A59F (0x5c bytes), align: 2
  Segment part 64.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           maincsm_oncreate        A135A544 
               stack 1 = 00000000 ( 0000001C )
    -------------------------------------------------------------------------
CODE
  Segment part 65. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A5A0 - A135A5CF (0x30 bytes), align: 2
  Segment part 66.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           maincsm_onmessage       A135A5A0 
    -------------------------------------------------------------------------
CODE
  Segment part 67. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A5D0 - A135A5F3 (0x24 bytes), align: 2
  Segment part 68.            Intra module refs:   maincsm_onclose
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Killer                  A135A5D0 
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Segment part 69. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A5F4 - A135A607 (0x14 bytes), align: 2
  Segment part 70.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           maincsm_onclose         A135A5F4 
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Segment part 71. NOT NEEDED.
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135A670 - A135A677 (0x8 bytes), align: 2
  Segment part 2.             Intra module refs:   menu_sk
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135A678 - A135A67F (0x8 bytes), align: 2
  Segment part 3.             Intra module refs:   menu_sk
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135A680 - A135A687 (0x8 bytes), align: 2
  Segment part 4.             Intra module refs:   Segment part 14
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135A688 - A135A69F (0x18 bytes), align: 2
  Segment part 5.             Intra module refs:   read_cfg
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135A6A0 - A135A6C7 (0x28 bytes), align: 2
  Segment part 6.             Intra module refs:   run_mymenu2_editor
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135A6C8 - A135A6E7 (0x20 bytes), align: 2
  Segment part 7.             Intra module refs:   menu_onkey
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135A6E8 - A135A72F (0x48 bytes), align: 2
  Segment part 8.             Intra module refs:   Segment part 74
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MAINCSM                 A135A6F4 
           MenuItenIcon            A135A6F0 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135A730 - A135A733 (0x4 bytes), align: 2
  Segment part 9.             Intra module refs:   Segment part 14
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MenuHeaderIcon          A135A730 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135A734 - A135A73F (0xc bytes), align: 2
  Segment part 11.            Intra module refs:   Segment part 14
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           menusoftkeys            A135A734 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135A740 - A135A757 (0x18 bytes), align: 2
  Segment part 12.            Intra module refs:   menu_skt
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           menu_sk                 A135A740 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135A758 - A135A75F (0x8 bytes), align: 2
  Segment part 13.            Intra module refs:   Segment part 14
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           menu_skt                A135A758 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135A760 - A135A79F (0x40 bytes), align: 2
  Segment part 14.            Intra module refs:   maincsm_oncreate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main_menu               A135A774 
           menuheader              A135A760 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135A7A0 - A135A7A3 (0x4 bytes), align: 2
  Segment part 15.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           minus11                 A135A7A0 
    -------------------------------------------------------------------------
DATA_C
  Relative segment, address: A135A7A4 - A135A7C3 (0x20 bytes), align: 2
  Segment part 16.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           maincsm_name_body       A135A7A4 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A608 - A135A667 (0x60 bytes), align: 2
  Segment part 72.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    A135A608        Segment part 0 (entry)
               stack 1 = 00000000 ( 00000034 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A668 - A135A66B (0x4 bytes), align: 2
  Segment part 73.            Intra module refs:   Killer
                                                   main
                                                   maincsm_oncreate
    -------------------------------------------------------------------------
CODE
  Relative segment, address: A135A66C - A135A66F (0x4 bytes), align: 2
  Segment part 74.            Intra module refs:   main
                                                   menu_iconhndl
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: A135A7C4 - A135A7CF (0xc bytes), align: 2
  Segment part 75. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?init?tab?DATA_Z        A135A7C4 




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module   CODE   DATA
------   ----   ----
        (Rel)  (Rel)
entry      72
main    2 232      8
------  -----      -
Total:  2 304      8


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  menu_onkey
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  menu_ghook
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  menu_iconhndl
      | Stack used (prev) :  00000000
      | + function block  :  0000001C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000001C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  maincsm_oncreate
      | Stack used (prev) :  00000000
      | + function block  :  0000001C
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000001C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  maincsm_onmessage
      | Stack used (prev) :  00000000
      | + function block  :  00000000
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000000


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  Killer
      | Stack used (prev) :  00000000
      | + function block  :  00000008
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000008


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  00000000
  01  maincsm_onclose
      | Stack used (prev) :  00000000
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000004


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000001C
  01  utf8_2str
      | Stack used (prev) :  0000001C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  00000028


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000028
  01  AddtoMenuList
      | Stack used (prev) :  00000028
      | + function block  :  00000018
  <-Sub-tree of type: Function tree
    | Stack used          :  00000040


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000040
  01  FreeMenuList
      | Stack used (prev) :  00000040
      | + function block  :  00000008
  <-Sub-tree of type: Function tree
    | Stack used          :  00000048


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000048
  01  get_mlitem
      | Stack used (prev) :  00000048
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000004C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000004C
  01  strchrinline
      | Stack used (prev) :  0000004C
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000050


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000050
  01  gotoRealPos
      | Stack used (prev) :  00000050
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000054


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000054
  01  gotoLineEnd
      | Stack used (prev) :  00000054
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  00000058


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000058
  01  CheckType
      | Stack used (prev) :  00000058
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  0000005C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000005C
  01  read_cfg
      | Stack used (prev) :  0000005C
      | + function block  :  00000040
  <-Sub-tree of type: Function tree
    | Stack used          :  0000009C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000009C
  01  strncmpNoCase
      | Stack used (prev) :  0000009C
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  000000A8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000A8
  01  GetFunctionPointByName
      | Stack used (prev) :  000000A8
      | + function block  :  00000010
  <-Sub-tree of type: Function tree
    | Stack used          :  000000B8


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000B8
  01  run_address
      | Stack used (prev) :  000000B8
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000000BC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000BC
  01  chr2num
      | Stack used (prev) :  000000BC
      | + function block  :  00000004
  <-Sub-tree of type: Function tree
    | Stack used          :  000000C0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000C0
  01  run_ml
      | Stack used (prev) :  000000C0
      | + function block  :  00000030
  <-Sub-tree of type: Function tree
    | Stack used          :  000000F0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000000F0
  01  strpath_2ws
      | Stack used (prev) :  000000F0
      | + function block  :  0000010C
  <-Sub-tree of type: Function tree
    | Stack used          :  000001FC


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000001FC
  01  run_folder
      | Stack used (prev) :  000001FC
      | + function block  :  00000074
  <-Sub-tree of type: Function tree
    | Stack used          :  00000270


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000270
  01  run_file
      | Stack used (prev) :  00000270
      | + function block  :  0000000C
  <-Sub-tree of type: Function tree
    | Stack used          :  0000027C


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  0000027C
  01  run_mymenu2_editor
      | Stack used (prev) :  0000027C
      | + function block  :  00000034
  <-Sub-tree of type: Function tree
    | Stack used          :  000002B0


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  000002B0
  01  main
      | Stack used (prev) :  000002B0
      | + function block  :  00000034
  <-Sub-tree of type: Function tree
    | Stack used          :  000002E4




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
ENTRYPOINT_ONLINE_STATUS
                                   A0863034 - A0863037           4   rel    2
ENTRYPOINT_ONLINE_STATUS1
                                   A0863AB4 - A0863AB7           4   rel    2
ENTRYPOINT_SAT                     A08640B4 - A08640B7           4   rel    2
SAT_LGP                            A08640E4 - A08640EB           8   rel    2
SAT_LGP1                           A08640F4 - A08640FB           8   rel    2
SAT_LGP2                           A0864104 - A086410F           C   rel    2
SAT_PROC                           A086411C - A0864123           8   rel    2
CODE                               A1359F00 - A135A66F         770   rel    2
DATA_C                             A135A670 - A135A7C3         154   rel    2
DATA_ID                                 A135A7C4                     dse    0
INITTAB                            A135A7C4 - A135A7CF           C   rel    2
DATA_Z                             A8D80580 - A8D80587           8   rel    2

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 2 304 bytes of CODE memory
     8 bytes of DATA memory

Errors: none
Warnings: none

