##############################################################################
#                                                                            #
# IAR ARM ANSI C/C++ Compiler V4.41A/W32 EVALUATION    02/Nov/2007  20:20:40 #
# Copyright 1999-2005 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Cpu mode        =  interwork                                            #
#    Endian          =  little                                               #
#    Stack alignment =  4                                                    #
#    Source file     =  D:\Pasha\elf\TextReader\CFG.c                        #
#    Command line    =  D:\Pasha\elf\TextReader\CFG.c -lC                    #
#                       D:\Pasha\elf\TextReader\Release\List\ -o             #
#                       D:\Pasha\elf\TextReader\Release\Obj\ -s9 --cpu_mode  #
#                       arm --endian little --cpu ARM926EJ-S --stack_align   #
#                       4 --interwork -e --fpu None --dlib_config            #
#                       "D:\Pasha\ARM_Embedded_Workbench\Embedded Workbench  #
#                       4.0 Evaluation\ARM\LIB\dl5tpainl8n.h" -I             #
#                       "D:\Pasha\ARM_Embedded_Workbench\Embedded Workbench  #
#                       4.0 Evaluation\ARM\INC\" --inline_threshold=2        #
#    List file       =  D:\Pasha\elf\TextReader\Release\List\CFG.lst         #
#    Object file     =  D:\Pasha\elf\TextReader\Release\Obj\CFG.r79          #
#                                                                            #
#                                                                            #
##############################################################################

D:\Pasha\elf\TextReader\CFG.c
      1          #include "..\inc\swilib.h"
      2          #include "main.h"
      3          extern unsigned long  strtoul (const char *nptr,char **endptr,int base);
      4          extern char file[256];

   \                                 In segment DATA_Z, align 4, align-sorted
      5           int curpos;
   \                     curpos:
   \   00000000                      DS8 4
      6          extern int atoi(char *attr);
      7          extern const char per_d[];
      8          extern const char per_t[];
      9          extern const char per_s[];
     10          extern const char empty_str[];
     11          //extern int file_size;
     12          //-----------------LOAD INI-------------------
     13          /*
     14          format
     15          path /codepage/ position
     16          */
     17          typedef struct
     18          {
     19            char name[256];
     20            unsigned int codepage;
     21            unsigned int pos;
     22          }INIFILE;
     23          
     24          INIFILE ini[200];//думаю истории на 200 файлов хватит:)
     25          
     26          int ini_item=0;
   \                     ini_item:
   \   00000004                      DS8 4

   \                                 In segment DATA_Z, align 4, align-sorted
   \                     ini:
   \   00000000                      DS8 52800
     27          

   \                                 In segment CODE, align 4, keep-with-next
     28          void process(char *str, int n)//Читаем конфиг и сохраняем пути
     29          { 
     30            int j=0; 
     31            int k=0;
   \                     process:
   \   00000000   ........           LDR      R3,??DataTable12  ;; ini
   \   00000004   F0402DE9           PUSH     {R4-R7,LR}
   \   00000008   422FA0E3           MOV      R2,#+264
   \   0000000C   923125E0           MLA      R5,R2,R1,R3
   \   00000010   08D04DE2           SUB      SP,SP,#+8
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   0060A0E3           MOV      R6,#+0
   \   0000001C   0510A0E1           MOV      R1,R5
   \   00000020   010000EA           B        ??process_0
     32            char pos[5];
     33            while (str[j]!=' ') {ini[n].name[k]=str[j];k++;j++;}    
   \                     ??process_1:
   \   00000024   ........           LDRB     R2,[R0], #+1
   \   00000028   ........           STRB     R2,[R1], #+1
   \                     ??process_0:
   \   0000002C   0020D0E5           LDRB     R2,[R0, #+0]
   \   00000030   016086E2           ADD      R6,R6,#+1
   \   00000034   200052E3           CMP      R2,#+32
   \   00000038   F9FFFF1A           BNE      ??process_1
     34            j++;
     35            k=0;
   \   0000003C   0D70A0E1           MOV      R7,SP
   \   00000040   020000EA           B        ??process_2
     36            //while (str[j]!=' ')
     37          //  pos[0]==str[j];//автоматический выбор кодировки, может пригодится)))
     38           // codepage=ini[n].codepage=strtoul(pos,0,10);
     39           // j++;
     40            while (/*str[j]!='\n'*/j<=strlen(str)) {pos[k]=str[j];k++;j++;}
   \                     ??process_3:
   \   00000044   0400D6E7           LDRB     R0,[R6, +R4]
   \   00000048   016086E2           ADD      R6,R6,#+1
   \   0000004C   ........           STRB     R0,[R7], #+1
   \                     ??process_2:
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   1B0000EF           SWI      +27
   \   00000058   060050E1           CMP      R0,R6
   \   0000005C   F8FFFF2A           BCS      ??process_3
     41            ini[n].pos=strtoul(pos,0,10);
   \   00000060   0A20A0E3           MOV      R2,#+10
   \   00000064   0010A0E3           MOV      R1,#+0
   \   00000068   0D00A0E1           MOV      R0,SP
   \   0000006C   ........           _BLF     strtoul,??strtoul??rA
   \   00000070   040185E5           STR      R0,[R5, #+260]
     42            if(ini[n].pos==0)//Чтобы не переходить в конец файла если данные отсутствуют
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   F380BD18           POPNE    {R0,R1,R4-R7,PC}
     43            {
     44              curpos=1;
   \   0000007C   ........           LDR      R1,??DataTable6  ;; curpos
   \   00000080   0100A0E3           MOV      R0,#+1
   \   00000084   000081E5           STR      R0,[R1, #+0]
     45              ini[n].pos=1;
   \   00000088   040185E5           STR      R0,[R5, #+260]
     46            }
     47          //  ShowMSG(1,(int)ini[0].name);
     48          }
   \   0000008C   F380BDE8           POP      {R0,R1,R4-R7,PC}  ;; return
     49          

   \                                 In segment CODE, align 4, keep-with-next
     50          void LoadINI()
     51          {
     52            unsigned int err; 
     53            int plhandle; 
     54            char *mem;
     55            char *pos;
     56            int i,j=0; 
     57            char *str; 
     58            int size;
     59            plhandle = fopen( "0:\\TR_history2.txt", A_ReadOnly + A_BIN, P_READ, & err ); 
   \                     LoadINI:
   \   00000000   ........           LDR      R0,??DataTable5  ;; `?<Constant "0:\\\\TR_history2.txt">`
   \   00000004   F0432DE9           PUSH     {R4-R9,LR}
     60           if ( plhandle==-1 ) 
   \   00000008   ........           LDR      R5,??DataTable6  ;; curpos
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   0D30A0E1           MOV      R3,SP
   \   00000014   8020A0E3           MOV      R2,#+128
   \   00000018   801CA0E3           MOV      R1,#+32768
   \   0000001C   0A0000EF           SWI      +10
   \   00000020   0040A0E1           MOV      R4,R0
   \   00000024   010074E3           CMN      R4,#+1
   \   00000028   0500001A           BNE      ??LoadINI_0
     61            {
     62          //    ShowMSG(1,(int)"Can't open TR_history");
     63              curpos=1;
   \   0000002C   0100A0E3           MOV      R0,#+1
   \   00000030   000085E5           STR      R0,[R5, #+0]
     64              fclose( plhandle, & err ); 
   \   00000034   0D10A0E1           MOV      R1,SP
   \   00000038   000060E2           RSB      R0,R0,#+0
   \   0000003C   0D0000EF           SWI      +13
     65              return; 
   \   00000040   F183BDE8           POP      {R0,R4-R9,PC}
     66            }
     67            mem=malloc(10000); 
     68            size=fread(plhandle,mem,9999,&err); 
     69            pos=strstr(mem,file)+strlen(file)+1;
   \                     ??LoadINI_0:
   \   00000044   ........           LDR      R8,??DataTable7  ;; file
   \   00000048   1000A0E3           MOV      R0,#+16
   \   0000004C   9C0D80E3           ORR      R0,R0,#0x2700
   \   00000050   140000EF           SWI      +20
   \   00000054   0060A0E1           MOV      R6,R0
   \   00000058   0D30A0E1           MOV      R3,SP
   \   0000005C   0F20A0E3           MOV      R2,#+15
   \   00000060   9C2D82E3           ORR      R2,R2,#0x2700
   \   00000064   0610A0E1           MOV      R1,R6
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   0B0000EF           SWI      +11
   \   00000070   0070A0E1           MOV      R7,R0
   \   00000074   0810A0E1           MOV      R1,R8
   \   00000078   0600A0E1           MOV      R0,R6
   \   0000007C   180100EF           SWI      +280
   \   00000080   0090A0E1           MOV      R9,R0
   \   00000084   0800A0E1           MOV      R0,R8
   \   00000088   1B0000EF           SWI      +27
   \   0000008C   090080E0           ADD      R0,R0,R9
   \   00000090   010080E2           ADD      R0,R0,#+1
     70            curpos=atoi(pos);  
   \   00000094   ........           _BLF     atoi,??atoi??rA
   \   00000098   000085E5           STR      R0,[R5, #+0]
     71            str=malloc(256); 
   \   0000009C   400FA0E3           MOV      R0,#+256
   \   000000A0   140000EF           SWI      +20
   \   000000A4   0080A0E1           MOV      R8,R0
     72           if ((mem!=0)&&(str!=0)) 
   \   000000A8   000056E3           CMP      R6,#+0
   \   000000AC   00005813           CMPNE    R8,#+0
   \   000000B0   0200000A           BEQ      ??LoadINI_1
     73            { 
     74              //size=fread(f,mem,9999,&err); 
     75              i=0; 
   \   000000B4   0000A0E3           MOV      R0,#+0
   \   000000B8   010057E3           CMP      R7,#+1
   \   000000BC   170000AA           BGE      ??LoadINI_2
     76              while (i<size) //пока не конец файлА 
     77              { 
     78                //strcpy(str,""); 
     79                j=0; 
     80                while (((*(mem+i)!='\n'))&&(i<size)) {*(str+j)=*(mem+i); j++;i++;}    //читаем строку из файла 
     81                //strcat(str,"\n");
     82                process(str,ini_item);
     83                i++; 
     84                ini_item++;
     85              }
     86            }
     87          
     88          fclose(plhandle,&err); 
   \                     ??LoadINI_1:
   \   000000C0   0D10A0E1           MOV      R1,SP
   \   000000C4   0400A0E1           MOV      R0,R4
   \   000000C8   0D0000EF           SWI      +13
     89          mfree(mem); 
   \   000000CC   0600A0E1           MOV      R0,R6
   \   000000D0   150000EF           SWI      +21
     90          mfree(str);
   \   000000D4   0800A0E1           MOV      R0,R8
   \   000000D8   150000EF           SWI      +21
     91          }
   \   000000DC   F183BDE8           POP      {R0,R4-R9,PC}    ;; return
   \                     ??LoadINI_3:
   \   000000E0   ........           LDRB     R0,[R2], #+1
   \   000000E4   ........           STRB     R0,[R1], #+1
   \   000000E8   0900A0E1           MOV      R0,R9
   \                     ??LoadINI_4:
   \   000000EC   0030D2E5           LDRB     R3,[R2, #+0]
   \   000000F0   019080E2           ADD      R9,R0,#+1
   \   000000F4   0A0053E3           CMP      R3,#+10
   \   000000F8   0100000A           BEQ      ??LoadINI_5
   \   000000FC   070050E1           CMP      R0,R7
   \   00000100   F6FFFFBA           BLT      ??LoadINI_3
   \                     ??LoadINI_5:
   \   00000104   041095E5           LDR      R1,[R5, #+4]
   \   00000108   0800A0E1           MOV      R0,R8
   \   0000010C   ........           BL       process
   \   00000110   041095E5           LDR      R1,[R5, #+4]
   \   00000114   0900A0E1           MOV      R0,R9
   \   00000118   011081E2           ADD      R1,R1,#+1
   \   0000011C   041085E5           STR      R1,[R5, #+4]
   \                     ??LoadINI_2:
   \   00000120   070050E1           CMP      R0,R7
   \   00000124   E5FFFFAA           BGE      ??LoadINI_1
   \   00000128   062080E0           ADD      R2,R0,R6
   \   0000012C   0810A0E1           MOV      R1,R8
   \   00000130   EDFFFFEA           B        ??LoadINI_4
     92          
     93          

   \                                 In segment CODE, align 4, keep-with-next
     94          void SaveINI()//save history
     95          {
   \                     SaveINI:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
     96            unsigned int err; 
     97            int f; 
     98           // char *mem;
     99            int cmp;
    100            int ch=0;
    101            int i;
    102            char *s=malloc(7);
    103            char *ss=malloc(300);
    104            unlink("0:\\TR_history2.txt",&err);
   \   00000004   ........           LDR      R6,??DataTable5  ;; `?<Constant "0:\\\\TR_history2.txt">`
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   04108DE5           STR      R1,[SP, #+4]
   \   00000014   0700A0E3           MOV      R0,#+7
   \   00000018   140000EF           SWI      +20
   \   0000001C   0040A0E1           MOV      R4,R0
   \   00000020   4B0FA0E3           MOV      R0,#+300
   \   00000024   140000EF           SWI      +20
   \   00000028   0050A0E1           MOV      R5,R0
   \   0000002C   0D10A0E1           MOV      R1,SP
   \   00000030   0600A0E1           MOV      R0,R6
   \   00000034   6B0100EF           SWI      +363
    105           f = fopen( "0:\\TR_history2.txt", A_ReadWrite + A_BIN+A_Create+A_Append, P_READ + P_WRITE, & err );
   \   00000038   0D30A0E1           MOV      R3,SP
   \   0000003C   602FA0E3           MOV      R2,#+384
   \   00000040   0A10A0E3           MOV      R1,#+10
   \   00000044   811C81E3           ORR      R1,R1,#0x8100
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   0A0000EF           SWI      +10
   \   00000050   0070A0E1           MOV      R7,R0
    106           if ( f ==-1 ) 
   \   00000054   010077E3           CMN      R7,#+1
   \   00000058   0300001A           BNE      ??SaveINI_0
    107            {
    108              fclose( f, & err ); 
   \   0000005C   0D10A0E1           MOV      R1,SP
   \   00000060   0000E0E3           MVN      R0,#+0
   \   00000064   0D0000EF           SWI      +13
    109              return; 
   \   00000068   F38FBDE8           POP      {R0,R1,R4-R11,PC}
    110            }
    111            if(ini_item!=0)
   \                     ??SaveINI_0:
   \   0000006C   ........           LDR      R8,??DataTable6  ;; curpos
   \   00000070   ........           LDR      R9,??DataTable7  ;; file
   \   00000074   040098E5           LDR      R0,[R8, #+4]
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   1F00000A           BEQ      ??SaveINI_1
    112            {
    113               for(i=0;i<ini_item;i++)
   \   00000080   00A0A0E3           MOV      R10,#+0
   \   00000084   010050E3           CMP      R0,#+1
   \   00000088   160000AA           BGE      ??SaveINI_2
   \   0000008C   1B0000EA           B        ??SaveINI_1
    114                {
    115                  cmp=strcmp(ini[i].name,file);
    116                  if(cmp==0)
   \                     ??SaveINI_3:
   \   00000090   ........           LDR      R1,??DataTable12  ;; ini
   \   00000094   420FA0E3           MOV      R0,#+264
   \   00000098   901A2BE0           MLA      R11,R0,R10,R1
   \   0000009C   0910A0E1           MOV      R1,R9
   \   000000A0   0B00A0E1           MOV      R0,R11
   \   000000A4   190000EF           SWI      +25
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   0C00001A           BNE      ??SaveINI_4
    117                    {
    118                      ch=1;
   \   000000B0   0110A0E3           MOV      R1,#+1
   \   000000B4   04108DE5           STR      R1,[SP, #+4]
    119                      //strcpy(ini[i].name,file);
    120                      ini[i].pos=curpos;
   \   000000B8   000098E5           LDR      R0,[R8, #+0]
    121                      sprintf(s,"CMP %d %d",ini[i].pos,i);
   \   000000BC   0A30A0E1           MOV      R3,R10
   \   000000C0   04018BE5           STR      R0,[R11, #+260]
   \   000000C4   0020A0E1           MOV      R2,R0
   \   000000C8   141086E2           ADD      R1,R6,#+20
   \   000000CC   0400A0E1           MOV      R0,R4
   \   000000D0   160000EF           SWI      +22
    122                      ShowMSG(1,(int)s);
   \   000000D4   0410A0E1           MOV      R1,R4
   \   000000D8   0100A0E3           MOV      R0,#+1
   \   000000DC   480100EF           SWI      +328
    123                      //break;
    124                      i=ini_item;
   \   000000E0   04A098E5           LDR      R10,[R8, #+4]
    125                    }
    126                 }
   \                     ??SaveINI_4:
   \   000000E4   01A08AE2           ADD      R10,R10,#+1
   \                     ??SaveINI_2:
   \   000000E8   040098E5           LDR      R0,[R8, #+4]
   \   000000EC   00005AE1           CMP      R10,R0
   \   000000F0   E6FFFFBA           BLT      ??SaveINI_3
    127            }
    128            if(ch==0)
   \   000000F4   04009DE5           LDR      R0,[SP, #+4]
   \   000000F8   000050E3           CMP      R0,#+0
   \   000000FC   0F00001A           BNE      ??SaveINI_5
    129            {
    130              sprintf(ini[ini_item].name,per_s,file);
   \                     ??SaveINI_1:
   \   00000100   040098E5           LDR      R0,[R8, #+4]
   \   00000104   3C119FE5           LDR      R1,??SaveINI_6+0xC  ;; per_s
   \   00000108   ........           LDR      R10,??DataTable12  ;; ini
   \   0000010C   0920A0E1           MOV      R2,R9
   \   00000110   423FA0E3           MOV      R3,#+264
   \   00000114   93A020E0           MLA      R0,R3,R0,R10
   \   00000118   160000EF           SWI      +22
    131              ini[ini_item].pos=curpos;
   \   0000011C   040098E5           LDR      R0,[R8, #+4]
   \   00000120   ........           LDR      R2,??DataTable12  ;; ini
   \   00000124   421FA0E3           MOV      R1,#+264
   \   00000128   912020E0           MLA      R0,R1,R0,R2
   \   0000012C   001098E5           LDR      R1,[R8, #+0]
   \   00000130   041180E5           STR      R1,[R0, #+260]
    132              ShowMSG(1,(int)"ch==0");
   \   00000134   201086E2           ADD      R1,R6,#+32
   \   00000138   0100A0E3           MOV      R0,#+1
   \   0000013C   480100EF           SWI      +328
    133            }
    134          
    135          if(ini_item!=0)
   \                     ??SaveINI_5:
   \   00000140   040098E5           LDR      R0,[R8, #+4]
   \   00000144   000050E3           CMP      R0,#+0
   \   00000148   1300000A           BEQ      ??SaveINI_7
    136           {
    137            for(i=0;i<=ini_item;i++)
   \   0000014C   ........           LDR      R4,??DataTable12  ;; ini
   \   00000150   00A0A0E3           MOV      R10,#+0
   \                     ??SaveINI_8:
   \   00000154   040098E5           LDR      R0,[R8, #+4]
   \   00000158   0A0050E1           CMP      R0,R10
   \   0000015C   2D0000BA           BLT      ??SaveINI_9
    138               {
    139                 sprintf(ss,"%s %i\n",ini[i].name,ini[i].pos);
   \   00000160   043194E5           LDR      R3,[R4, #+260]
   \   00000164   0420A0E1           MOV      R2,R4
   \   00000168   281086E2           ADD      R1,R6,#+40
   \   0000016C   0500A0E1           MOV      R0,R5
   \   00000170   160000EF           SWI      +22
    140                 fwrite(f,ss,strlen(ss),&err);
   \   00000174   0500A0E1           MOV      R0,R5
   \   00000178   1B0000EF           SWI      +27
   \   0000017C   0D30A0E1           MOV      R3,SP
   \   00000180   0020A0E1           MOV      R2,R0
   \   00000184   0510A0E1           MOV      R1,R5
   \   00000188   0700A0E1           MOV      R0,R7
   \   0000018C   0C0000EF           SWI      +12
    141               //fwrite(f,ini[i].name,strlen(ini[i].name),&err);
    142               //fwrite(f," ",1,&err);
    143               //strcpy(s,empty_str);
    144               //sprintf(s,"%u",ini[i].pos);
    145               //fwrite(f,s,strlen(s),&err);
    146               //fwrite(f,"\n",0x1,&err);
    147               }
   \   00000190   01A08AE2           ADD      R10,R10,#+1
   \   00000194   424F84E2           ADD      R4,R4,#+264
   \   00000198   EDFFFFEA           B        ??SaveINI_8
    148           }
    149           else if(ini_item==0)
    150                  {
    151                    fwrite(f,file,strlen(file),&err);
   \                     ??SaveINI_7:
   \   0000019C   0900A0E1           MOV      R0,R9
   \   000001A0   1B0000EF           SWI      +27
   \   000001A4   0020A0E1           MOV      R2,R0
   \   000001A8   0D30A0E1           MOV      R3,SP
   \   000001AC   0910A0E1           MOV      R1,R9
   \   000001B0   0700A0E1           MOV      R0,R7
   \   000001B4   0C0000EF           SWI      +12
    152                    fwrite(f," ",1,&err);
   \   000001B8   0D30A0E1           MOV      R3,SP
   \   000001BC   0120A0E3           MOV      R2,#+1
   \   000001C0   1D1F8FE2           ADR      R1,??SaveINI_6   ;; " "
   \   000001C4   0700A0E1           MOV      R0,R7
   \   000001C8   0C0000EF           SWI      +12
    153                    strcpy(s,empty_str);
   \   000001CC   78109FE5           LDR      R1,??SaveINI_6+0x10  ;; empty_str
   \   000001D0   0400A0E1           MOV      R0,R4
   \   000001D4   1A0000EF           SWI      +26
    154                    sprintf(s,"%u",curpos);
   \   000001D8   002098E5           LDR      R2,[R8, #+0]
   \   000001DC   171F8FE2           ADR      R1,??SaveINI_6+0x4  ;; "%u"
   \   000001E0   0400A0E1           MOV      R0,R4
   \   000001E4   160000EF           SWI      +22
    155                    fwrite(f,s,strlen(s),&err);
   \   000001E8   0400A0E1           MOV      R0,R4
   \   000001EC   1B0000EF           SWI      +27
   \   000001F0   0D30A0E1           MOV      R3,SP
   \   000001F4   0020A0E1           MOV      R2,R0
   \   000001F8   0410A0E1           MOV      R1,R4
   \   000001FC   0700A0E1           MOV      R0,R7
   \   00000200   0C0000EF           SWI      +12
    156                    fwrite(f,"\n",0x1,&err);
   \   00000204   0D30A0E1           MOV      R3,SP
   \   00000208   0120A0E3           MOV      R2,#+1
   \   0000020C   0C1F8FE2           ADR      R1,??SaveINI_6+0x8  ;; "\n"
   \   00000210   0700A0E1           MOV      R0,R7
   \   00000214   0C0000EF           SWI      +12
    157                   }
    158          fclose(f,&err); 
   \                     ??SaveINI_9:
   \   00000218   0D10A0E1           MOV      R1,SP
   \   0000021C   0700A0E1           MOV      R0,R7
   \   00000220   0D0000EF           SWI      +13
    159          ShowMSG(1,(int)"hist save!");
   \   00000224   301086E2           ADD      R1,R6,#+48
   \   00000228   0100A0E3           MOV      R0,#+1
   \   0000022C   480100EF           SWI      +328
    160          mfree(ss);
   \   00000230   0500A0E1           MOV      R0,R5
   \   00000234   150000EF           SWI      +21
    161          }
   \   00000238   F38FBDE8           POP      {R0,R1,R4-R11,PC}  ;; return
   \                     ??SaveINI_6:
   \   0000023C   20000000           DC8      " ",+0,+0
   \   00000240   25750000           DC8      "%u",+0
   \   00000244   0A000000           DC8      "\n",+0,+0
   \   00000248   ........           DC32     per_s
   \   0000024C   ........           DC32     empty_str
    162          

   \                                 In segment CODE, align 4, keep-with-next
    163          void FreeINI()
    164          {
   \                     FreeINI:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    165            for(int i=0;i<=ini_item;i++)
   \   00000004   ........           LDR      R5,??DataTable12  ;; ini
   \   00000008   0040A0E3           MOV      R4,#+0
   \   0000000C   030000EA           B        ??FreeINI_0
    166                mfree(ini[i].name);
   \                     ??FreeINI_1:
   \   00000010   0500A0E1           MOV      R0,R5
   \   00000014   150000EF           SWI      +21
   \   00000018   014084E2           ADD      R4,R4,#+1
   \   0000001C   425F85E2           ADD      R5,R5,#+264
   \                     ??FreeINI_0:
   \   00000020   0C009FE5           LDR      R0,??FreeINI_2   ;; curpos + 4
   \   00000024   000090E5           LDR      R0,[R0, #+0]
   \   00000028   040050E1           CMP      R0,R4
   \   0000002C   F7FFFFAA           BGE      ??FreeINI_1
    167          }
   \   00000030   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??FreeINI_2:
   \   00000034   ........           DC32     curpos + 4

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     `?<Constant "0:\\\\TR_history2.txt">`

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     curpos

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     file

   \                                 In segment CODE, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   ........           DC32     ini

   \                                 In segment DATA_C, align 4, align-sorted
   \                     `?<Constant "0:\\\\TR_history2.txt">`:
   \   00000000   303A5C54525F       DC8 "0:\\TR_history2.txt"
   \              686973746F72
   \              79322E747874
   \              00          
   \   00000013   00                 DC8 0
   \   00000014   434D50202564       DC8 "CMP %d %d"
   \              20256400    
   \   0000001E   0000               DC8 0, 0
   \   00000020   63683D3D3000       DC8 "ch==0"
   \   00000026   0000               DC8 0, 0
   \   00000028   25732025690A       DC8 "%s %i\012"
   \              00          
   \   0000002F   00                 DC8 0
   \   00000030   686973742073       DC8 "hist save!"
   \              6176652100  
   \   0000003B   00                 DC8 0

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   2000               DC8 " "

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   257500             DC8 "%u"

   \                                 In segment DATA_C, align 1, align-sorted
   \   00000000   0A00               DC8 "\012"

   Maximum stack usage in bytes:

     Function CSTACK
     -------- ------
     FreeINI     12
     LoadINI     32
     SaveINI     44
     process     28


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     curpos                             8
     ini                            52800
     process                          144
     LoadINI                          308
     SaveINI                          592
     FreeINI                           56
     ??DataTable5                       4
     ??DataTable6                       4
     ??DataTable7                       4
     ??DataTable12                      4
     ?<Constant "0:\\TR_history2.txt">
                                       60
     ?<Constant " ">                    2
     ?<Constant "%u">                   3
     ?<Constant "\n">                   2
      Others                           52

 
  1 156 bytes in segment CODE
     67 bytes in segment DATA_C
 52 808 bytes in segment DATA_Z
     12 bytes in segment INITTAB
 
  1 116 bytes of CODE  memory (+ 52 bytes shared)
     67 bytes of CONST memory
 52 808 bytes of DATA  memory

Errors: none
Warnings: none
