//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32 EVALUATION   29/Oct/2008  03:34:17 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  interwork                                           /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  D:\Pasha\elf\_MY_PROJECT_\NRSS\items_menu.c         /
//    Command line    =  D:\Pasha\elf\_MY_PROJECT_\NRSS\items_menu.c -D      /
//                       NEWSGOLD -D ELKA -lCN D:\Pasha\elf\_MY_PROJECT_\NRS /
//                       S\Release_ELKA\List\ -la                            /
//                       D:\Pasha\elf\_MY_PROJECT_\NRSS\Release_ELKA\List\   /
//                       -o D:\Pasha\elf\_MY_PROJECT_\NRSS\Release_ELKA\Obj\ /
//                        -s9 --no_unroll --cpu_mode arm --endian little     /
//                       --cpu ARM926EJ-S --stack_align 4 --interwork -e     /
//                       --fpu None --dlib_config "D:\Pasha\Embedded         /
//                       Workbench 4.0 Evaluation2\ARM\LIB\dl5tpainl8n.h"    /
//                       -I "D:\Pasha\Embedded Workbench 4.0                 /
//                       Evaluation2\ARM\INC\" --inline_threshold=2          /
//    List file       =  D:\Pasha\elf\_MY_PROJECT_\NRSS\Release_ELKA\List\it /
//                       ems_menu.s79                                        /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME items_menu

        RTMODEL "StackAlign4", "USED"
        RTMODEL "__cpu_mode", "__pcs__interwork"
        RTMODEL "__data_model", "absolute"
        RTMODEL "__endian", "little"
        RTMODEL "__rt_version", "6"

        RSEG CSTACK:DATA:NOROOT(2)

        EXTERN ??div32_a

        PUBWEAK `?*?DATA_ID`
??DataTable0 EQU 0
??DataTable1 EQU 0
??DataTable2 EQU 0
??DataTable3 EQU 0
??DataTable4 EQU 0
??DataTable5 EQU 0
??DataTable6 EQU 0
??DataTable7 EQU 0
        MULTWEAK ??DoScreen??rT
        MULTWEAK ??DrwImage??rT
        MULTWEAK ??FontH??rA
        MULTWEAK ??GetItem??rT
        MULTWEAK ??MoveDown??rT
        MULTWEAK ??MoveUp??rT
        MULTWEAK ??PrintField??rA
        MULTWEAK ??PrintText??rA
        MULTWEAK ??SetFontColor??rA
        MULTWEAK ??create_rssitems_menu??rT
        MULTWEAK ??create_view_item??rA
        MULTWEAK ??rA??div32_a
        PUBWEAK ?init?tab?DATA_I
        PUBWEAK ?init?tab?DATA_Z
        PUBLIC CursorBGClr
        PUBLIC CursorClr
        PUBLIC DoScreen
        FUNCTION DoScreen,0203H
        LOCFRAME CSTACK, 36, STACK
        FUNCTION DrawHeader,0203H
        LOCFRAME CSTACK, 52, STACK
        FUNCTION DrawList,0201H
        LOCFRAME CSTACK, 72, STACK
        FUNCTION DrawScrollBar,0203H
        LOCFRAME CSTACK, 52, STACK
        FUNCTION DrawSoftKeys,0203H
        LOCFRAME CSTACK, 56, STACK
        PUBLIC DrwImage
        FUNCTION DrwImage,0203H
        LOCFRAME CSTACK, 56, STACK
        PUBLIC GetItem
        FUNCTION GetItem,0203H
        PUBLIC HeaderShot
        PUBLIC MoveDown
        FUNCTION MoveDown,0203H
        PUBLIC MoveUp
        FUNCTION MoveUp,0203H
        LOCFRAME CSTACK, 8, STACK
        FUNCTION OnKey,0603H
        LOCFRAME CSTACK, 20, STACK
        FUNCTION OnRedraw,0603H
        LOCFRAME CSTACK, 40, STACK
        PUBLIC SoftShot
        PUBLIC _t
        PUBLIC canvasdata
        PUBLIC clrBlack
        PUBLIC clrRed
        PUBLIC clrSelect
        PUBLIC clrWhite
        PUBLIC collum
        PUBLIC create_rssitems_menu
        FUNCTION create_rssitems_menu,0203H
        LOCFRAME CSTACK, 8, STACK
        PUBLIC curpage
        PUBLIC curpos
        PUBLIC cursor
        PUBLIC cursor_shot
        PUBLIC font
        PUBLIC header_shot
        PUBLIC itemFromDisp
        FUNCTION method8,0603H
        FUNCTION method9,0603H
        FUNCTION onClose,0603H
        LOCFRAME CSTACK, 8, STACK
        FUNCTION onCreate,0603H
        LOCFRAME CSTACK, 12, STACK
        FUNCTION onFocus,0603H
        LOCFRAME CSTACK, 4, STACK
        FUNCTION onUnfocus,0603H
        PUBLIC scr_h
        PUBLIC scr_w
        PUBLIC soft_shot
        PUBLIC space
        PUBLIC totalItems
        PUBLIC transparent
        
        CFI Names cfiNames0
        CFI StackFrame CFA R13 HUGEDATA
        CFI Resource R0:32, R1:32, R2:32, R3:32, R4:32, R5:32, R6:32, R7:32
        CFI Resource R8:32, R9:32, R10:32, R11:32, R12:32, CPSR:32, R13:32
        CFI Resource R14:32, SPSR:32
        CFI VirtualResource ?RET:32
        CFI EndNames cfiNames0
        
        CFI Common cfiCommon0 Using cfiNames0
        CFI CodeAlign 2
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon0
        
        
        CFI Common cfiCommon1 Using cfiNames0
        CFI CodeAlign 4
        CFI DataAlign 4
        CFI ReturnAddress ?RET CODE
        CFI CFA R13+0
        CFI R0 Undefined
        CFI R1 Undefined
        CFI R2 Undefined
        CFI R3 Undefined
        CFI R4 SameValue
        CFI R5 SameValue
        CFI R6 SameValue
        CFI R7 SameValue
        CFI R8 SameValue
        CFI R9 SameValue
        CFI R10 SameValue
        CFI R11 SameValue
        CFI R12 Undefined
        CFI CPSR SameValue
        CFI R14 Undefined
        CFI SPSR SameValue
        CFI ?RET R14
        CFI EndCommon cfiCommon1
        
FontH               SYMBOL "FontH"
PrintField          SYMBOL "PrintField"
PrintText           SYMBOL "PrintText"
SetFontColor        SYMBOL "SetFontColor"
create_view_item    SYMBOL "create_view_item"
DoScreen            SYMBOL "DoScreen"
??DoScreen??rT      SYMBOL "??rT", DoScreen
DrwImage            SYMBOL "DrwImage"
??DrwImage??rT      SYMBOL "??rT", DrwImage
??FontH??rA         SYMBOL "??rA", FontH
GetItem             SYMBOL "GetItem"
??GetItem??rT       SYMBOL "??rT", GetItem
MoveDown            SYMBOL "MoveDown"
??MoveDown??rT      SYMBOL "??rT", MoveDown
MoveUp              SYMBOL "MoveUp"
??MoveUp??rT        SYMBOL "??rT", MoveUp
??PrintField??rA    SYMBOL "??rA", PrintField
??PrintText??rA     SYMBOL "??rA", PrintText
??SetFontColor??rA  SYMBOL "??rA", SetFontColor
create_rssitems_menu SYMBOL "create_rssitems_menu"
??create_rssitems_menu??rT SYMBOL "??rT", create_rssitems_menu
??create_view_item??rA SYMBOL "??rA", create_view_item

        EXTERN FontH
        FUNCTION FontH,0202H
        EXTERN PrintField
        FUNCTION PrintField,0202H
        EXTERN PrintText
        FUNCTION PrintText,0202H
        EXTERN SetFontColor
        FUNCTION SetFontColor,0202H
        EXTERN create_view_item
        FUNCTION create_view_item,0202H
        EXTERN kill_data
        FUNCTION kill_data,0602H
        EXTERN rss_first
        EXTERN successed_config_filename


        RSEG DATA_Z:DATA:SORT:NOROOT(2)
canvasdata:
        DS8 4

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock0 Using cfiCommon0
        CFI NoFunction
        THUMB
??DrwImage??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock0
        REQUIRE DrwImage

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock1 Using cfiCommon1
        CFI Function DrwImage
        ARM
DrwImage:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        SUB      SP,SP,#+44
        CFI CFA R13+52
        MOV      R4,R0
        LDR      R0,[R4, #+8]
        CMP      R0,#+0
        BEQ      ??DrwImage_0
        LDRH     R0,[R4, #+2]
        PUSH     {R0}
        CFI CFA R13+56
        LDRH     R3,[R4, #+0]
        ADD      R0,SP,#+4
        SWI      +307
        MOV      R3,R4
        MOV      R2,#+0
        ADD      R1,SP,#+4
        ADD      R0,SP,#+12
        SWI      +337
        MOV      R2,#+0
        MOV      R1,#+0
        ADD      R0,SP,#+12
        SWI      +331
        ADD      R0,SP,#+12
        SWI      +298
        MOV      R0,#+1
        ADD      SP,SP,#+4
        CFI CFA R13+52
??DrwImage_0:
        ADD      SP,SP,#+44       ;; stack cleaning
        CFI CFA R13+8
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock2 Using cfiCommon0
        CFI NoFunction
        THUMB
??DoScreen??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock2
        REQUIRE DoScreen

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock3 Using cfiCommon1
        CFI Function DoScreen
        ARM
DoScreen:
        PUSH     {R4-R8,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R8 Frame(CFA, -8)
        CFI R7 Frame(CFA, -12)
        CFI R6 Frame(CFA, -16)
        CFI R5 Frame(CFA, -20)
        CFI R4 Frame(CFA, -24)
        CFI CFA R13+24
        MOV      R6,R1
        LDR      R1,??DoScreen_0  ;; `?<Constant {0, 0, 8, &""}>`
        SUB      SP,SP,#+12
        CFI CFA R13+36
        MOV      R4,R0
        MOV      R5,R2
        LDM      R1,{R2,R3,R7}
        MOV      R0,SP
        STM      R0,{R2,R3,R7}
        SWI      +33160
        MOV      R8,R0
        SWI      +32992
        MOV      R7,R0
        MUL      R0,R6,R8
        STRH     R8,[SP, #+0]
        STRH     R6,[SP, #+2]
        LSL      R6,R0,#+1
        MOV      R0,R6
        SWI      +20
        STR      R0,[SP, #+8]
        MOV      R2,R6
        ADD      R1,R7,R5, LSL #+1
        SWI      +286
        MOV      R0,SP
        LDM      R0,{R1-R3}
        MOV      R0,R4
        STM      R4,{R1-R3}
        POP      {R1-R8,PC}       ;; return
        DATA
??DoScreen_0:
        DC32     `?<Constant {0, 0, 8, &""}>`
        CFI EndBlock cfiBlock3

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock4 Using cfiCommon0
        CFI NoFunction
        THUMB
??DrawSoftKeys??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock4
        REQUIRE DrawSoftKeys

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock5 Using cfiCommon1
        CFI Function DrawSoftKeys
        ARM
DrawSoftKeys:
        PUSH     {R4-R8,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R8 Frame(CFA, -8)
        CFI R7 Frame(CFA, -12)
        CFI R6 Frame(CFA, -16)
        CFI R5 Frame(CFA, -20)
        CFI R4 Frame(CFA, -24)
        CFI CFA R13+24
        LDR      R4,??DrawSoftKeys_0  ;; SoftShot
        SUB      SP,SP,#+8
        CFI CFA R13+32
        MOV      R8,R0
        MOV      R7,R1
        MOV      R1,SP
        MOV      R0,#+0
        SWI      +180
        MOV      R0,#+32
        SWI      +20
        MOV      R5,R0
        SWI      +326
        LDR      R0,[R4, #+40]
        _BLF     FontH,??FontH??rA
        MOV      R6,R0
        LDR      R0,[R4, #+36]
        ADD      R1,R4,#+64
        PUSH     {R1}
        CFI CFA R13+36
        PUSH     {R1}
        CFI CFA R13+40
        MOV      R3,R0
        SUB      R0,R0,R6
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+44
        PUSH     {R1}
        CFI CFA R13+48
        PUSH     {R1}
        CFI CFA R13+52
        LDR      R2,[R4, #+32]
        SUB      R1,R0,#+2
        MOV      R0,#+0
        SWI      +336
        LDR      R0,[R4, #+52]
        ADD      SP,SP,#+20
        CFI CFA R13+32
        CMP      R0,#+2
        BEQ      ??DrawSoftKeys_1
        LDR      R0,[R4, #+40]
        _BLF     FontH,??FontH??rA
        MOV      R5,R0
        CMP      R5,#+1
        BLT      ??DrawSoftKeys_2
??DrawSoftKeys_3:
        LDR      R1,[R4, #+48]
        LDR      R0,[R4, #+36]
        MOV      R2,R1
        PUSH     {R2}
        CFI CFA R13+36
        PUSH     {R1}
        CFI CFA R13+40
        SUB      R0,R0,R6
        ADD      R3,R5,R0
        SUB      R5,R5,#+2
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+44
        PUSH     {R1}
        CFI CFA R13+48
        PUSH     {R1}
        CFI CFA R13+52
        LDR      R2,[R4, #+32]
        SUB      R1,R0,#+2
        MOV      R0,#+0
        SWI      +336
        CMP      R5,#+1
        ADD      SP,SP,#+20
        CFI CFA R13+32
        BGE      ??DrawSoftKeys_3
??DrawSoftKeys_2:
        SWI      +33160
        LDR      R1,[R4, #+36]
        SUB      R1,R1,R6
        MUL      R2,R0,R1
        ADD      R1,R6,#+2
        MOV      R0,R4
        BL       DoScreen
        LDR      R0,[R4, #+52]
        ADD      R0,R0,#+1
        STR      R0,[R4, #+52]
        SWI      +370
        POP      {R0,R1,R4-R8,PC}
??DrawSoftKeys_1:
        LDR      R0,[R4, #+36]
        MOV      R1,#+0
        SUB      R0,R0,R6
        SUB      R2,R0,#+2
        MOV      R0,R4
        BL       DrwImage
        MOV      R2,#+0
        ADD      R1,R4,#+72
        ADD      R0,R4,#+68
        _BLF     SetFontColor,??SetFontColor??rA
        LDR      R0,[R4, #+40]
        _BLF     FontH,??FontH??rA
        LDR      R1,[R4, #+44]
        MOV      R3,#+0
        PUSH     {R1}
        CFI CFA R13+36
        LDR      R1,[R4, #+40]
        MOV      R2,R8
        PUSH     {R1}
        CFI CFA R13+40
        LDR      R1,[R4, #+36]
        SUB      R1,R1,#+1
        SUB      R1,R1,R0
        MOV      R0,#+2
        _BLF     PrintField,??PrintField??rA
        LDR      R0,[R4, #+40]
        _BLF     FontH,??FontH??rA
        LDR      R1,[R4, #+44]
        MOV      R3,#+2
        PUSH     {R1}
        CFI CFA R13+44
        LDR      R1,[R4, #+40]
        MOV      R2,R7
        PUSH     {R1}
        CFI CFA R13+48
        LDR      R1,[R4, #+36]
        SUB      R1,R1,#+1
        SUB      R1,R1,R0
        LDR      R0,[R4, #+32]
        _BLF     PrintField,??PrintField??rA
        LDRB     R3,[SP, #+17]
        LDRB     R2,[SP, #+16]
        LDR      R1,??DrawSoftKeys_0+0x4  ;; `?<Constant "%02d:%02d">`
        MOV      R0,R5
        SWI      +22
        LDR      R0,[R4, #+40]
        _BLF     FontH,??FontH??rA
        LDR      R6,[R4, #+32]
        LDR      R1,[R4, #+44]
        MOV      R3,#+1
        PUSH     {R1}
        CFI CFA R13+52
        LDR      R1,[R4, #+40]
        MOV      R2,R5
        PUSH     {R1}
        CFI CFA R13+56
        LDR      R1,[R4, #+36]
        SUB      R1,R1,#+1
        SUB      R1,R1,R0
        ADD      R0,R6,R6, LSR #+31
        ASR      R0,R0,#+1
        _BLF     PrintField,??PrintField??rA
        SWI      +327
        MOV      R0,R5
        SWI      +21
        ADD      SP,SP,#+24
        CFI CFA R13+32
        POP      {R0,R1,R4-R8,PC}  ;; return
        DATA
??DrawSoftKeys_0:
        DC32     SoftShot
        DC32     `?<Constant "%02d:%02d">`
        CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock6 Using cfiCommon0
        CFI NoFunction
        THUMB
??DrawHeader??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock6
        REQUIRE DrawHeader

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock7 Using cfiCommon1
        CFI Function DrawHeader
        ARM
DrawHeader:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        LDR      R4,??DataTable8  ;; SoftShot
        LDR      R7,??DrawHeader_0  ;; HeaderShot
        MOV      R6,R0
        LDR      R0,[R4, #+40]
        _BLF     FontH,??FontH??rA
        ADD      R5,R0,#+24
        ADD      R0,R4,#+64
        PUSH     {R0}
        CFI CFA R13+24
        PUSH     {R0}
        CFI CFA R13+28
        ADD      R3,R5,#+2
        MOV      R1,#+24
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+32
        PUSH     {R0}
        CFI CFA R13+36
        PUSH     {R0}
        CFI CFA R13+40
        LDR      R2,[R4, #+32]
        SWI      +336
        LDR      R0,[R4, #+56]
        ADD      SP,SP,#+20
        CFI CFA R13+20
        CMP      R0,#+2
        BEQ      ??DrawHeader_1
        SUB      R6,R5,#+24
        CMP      R6,#+1
        BLT      ??DrawHeader_2
??DrawHeader_3:
        LDR      R0,[R4, #+48]
        MOV      R1,R0
        PUSH     {R1}
        CFI CFA R13+24
        PUSH     {R0}
        CFI CFA R13+28
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+32
        PUSH     {R0}
        CFI CFA R13+36
        PUSH     {R0}
        CFI CFA R13+40
        LDR      R2,[R4, #+32]
        MOV      R1,#+24
        SUB      R0,R5,R6
        ADD      R3,R0,#+4
        MOV      R0,#+0
        SWI      +336
        SUB      R6,R6,#+2
        CMP      R6,#+1
        ADD      SP,SP,#+20
        CFI CFA R13+20
        BGE      ??DrawHeader_3
??DrawHeader_2:
        SUB      R6,R5,#+16
        SWI      +33160
        MUL      R2,R0,R6
        SUB      R1,R5,#+22
        MOV      R0,R7
        BL       DoScreen
        LDR      R0,[R4, #+56]
        ADD      R0,R0,#+1
        STR      R0,[R4, #+56]
        SWI      +370
        POP      {R4-R7,PC}
??DrawHeader_1:
        MOV      R2,#+24
        MOV      R1,#+0
        MOV      R0,R7
        BL       DrwImage
        MOV      R2,#+0
        ADD      R1,R4,#+72
        ADD      R0,R4,#+68
        _BLF     SetFontColor,??SetFontColor??rA
        LDR      R0,[R4, #+32]
        LDR      R2,??DrawHeader_0+0x4  ;; `?<Constant "NRSS v3.0">`
        SUB      R0,R0,#+2
        PUSH     {R0}
        CFI CFA R13+24
        MOV      R3,#+0
        MOV      R1,#+24
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+28
        MOV      R0,#+1
        PUSH     {R0}
        CFI CFA R13+32
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+36
        LDR      R0,[R4, #+44]
        PUSH     {R0}
        CFI CFA R13+40
        LDR      R0,[R4, #+40]
        PUSH     {R0}
        CFI CFA R13+44
        MOV      R0,#+2
        _BLF     PrintText,??PrintText??rA
        LDR      R0,[R4, #+44]
        MOV      R3,#+2
        PUSH     {R0}
        CFI CFA R13+48
        LDR      R0,[R4, #+40]
        MOV      R2,R6
        PUSH     {R0}
        CFI CFA R13+52
        LDR      R0,[R4, #+32]
        MOV      R1,#+24
        _BLF     PrintField,??PrintField??rA
        ADD      SP,SP,#+32
        CFI CFA R13+20
        POP      {R4-R7,PC}       ;; return
        DATA
??DrawHeader_0:
        DC32     HeaderShot
        DC32     `?<Constant "NRSS v3.0">`
        CFI EndBlock cfiBlock7

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock8 Using cfiCommon0
        CFI NoFunction
        THUMB
??DrawScrollBar??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock8
        REQUIRE DrawScrollBar

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock9 Using cfiCommon1
        CFI Function DrawScrollBar
        ARM
DrawScrollBar:
        PUSH     {R4-R8,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R8 Frame(CFA, -8)
        CFI R7 Frame(CFA, -12)
        CFI R6 Frame(CFA, -16)
        CFI R5 Frame(CFA, -20)
        CFI R4 Frame(CFA, -24)
        CFI CFA R13+24
        LDR      R4,??DataTable8  ;; SoftShot
        MOV      R5,R0
        LDR      R0,[R4, #+40]
        MOV      R6,R1
        _BLF     FontH,??FontH??rA
        MOV      R7,R0
        LDR      R0,[R4, #+40]
        _BLF     FontH,??FontH??rA
        LDR      R1,[R4, #+36]
        SUB      R1,R1,R7
        SUB      R1,R1,#+26
        SUB      R0,R1,R0
        SUB      R2,R0,#+2
        MUL      R0,R5,R2
        MOV      R1,R6
        _BLF     ??div32_a,??rA??div32_a
        MOV      R5,R1
        MOV      R0,R2
        MOV      R1,R6
        _BLF     ??div32_a,??rA??div32_a
        LDR      R0,[R4, #+40]
        MOV      R6,R1
        _BLF     FontH,??FontH??rA
        MOV      R7,R0
        LDR      R0,[R4, #+40]
        _BLF     FontH,??FontH??rA
        MOV      R1,R0
        LDR      R0,[R4, #+32]
        ADD      R2,R4,#+64
        PUSH     {R2}
        CFI CFA R13+28
        SUB      R0,R0,#+2
        ADD      R1,R1,#+26
        MOV      R2,#+1
        PUSH     {R2}
        CFI CFA R13+32
        LDR      R2,[R4, #+36]
        SUB      R3,R2,R7
        MOV      R2,R0
        SWI      +435
        LDR      R0,[R4, #+40]
        _BLF     FontH,??FontH??rA
        MOV      R7,R0
        LDR      R0,[R4, #+40]
        _BLF     FontH,??FontH??rA
        LDR      R12,[R4, #+32]
        ADD      R1,R4,#+64
        PUSH     {R1}
        CFI CFA R13+36
        PUSH     {R1}
        CFI CFA R13+40
        MOV      R2,R12
        ADD      R0,R5,R0
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+44
        PUSH     {R1}
        CFI CFA R13+48
        PUSH     {R1}
        CFI CFA R13+52
        ADD      R1,R5,R7
        MOV      R7,#+0
        ADD      R1,R6,R1
        ADD      R3,R1,#+26
        ADD      R1,R0,#+27
        SUB      R0,R12,#+4
        SWI      +336
        CMP      R6,#+1
        ADD      SP,SP,#+28
        CFI CFA R13+24
        BGE      ??DrawScrollBar_0
        POP      {R4-R8,PC}
??DrawScrollBar_1:
        LDR      R0,[R4, #+40]
        _BLF     FontH,??FontH??rA
        MOV      R8,R0
        LDR      R0,[R4, #+40]
        _BLF     FontH,??FontH??rA
        LDR      R1,[R4, #+48]
        LDR      R12,[R4, #+32]
        MOV      R2,R1
        PUSH     {R2}
        CFI CFA R13+28
        PUSH     {R1}
        CFI CFA R13+32
        ADD      R0,R0,R5
        MOV      R2,R12
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+36
        PUSH     {R1}
        CFI CFA R13+40
        PUSH     {R1}
        CFI CFA R13+44
        ADD      R1,R8,R7
        ADD      R7,R7,#+1
        ADD      R1,R5,R1
        ADD      R3,R1,#+26
        ADD      R1,R0,#+27
        SUB      R0,R12,#+4
        SWI      +336
        ADD      SP,SP,#+20
        CFI CFA R13+24
??DrawScrollBar_0:
        CMP      R7,R6
        BLT      ??DrawScrollBar_1
        POP      {R4-R8,PC}       ;; return
        CFI EndBlock cfiBlock9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock10 Using cfiCommon0
        CFI NoFunction
        THUMB
??GetItem??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock10
        REQUIRE GetItem

        RSEG DATA_I:DATA:SORT:NOROOT(2)
SoftShot:
        DS8 12
        REQUIRE `?<Initializer for SoftShot>`
itemFromDisp:
        DS8 4
        REQUIRE `?<Initializer for itemFromDisp>`
totalItems:
        DS8 4
        REQUIRE `?<Initializer for totalItems>`
curpos:
        DS8 4
        REQUIRE `?<Initializer for curpos>`
curpage:
        DS8 4
        REQUIRE `?<Initializer for curpage>`
collum:
        DS8 4
        REQUIRE `?<Initializer for collum>`
scr_w:
        DS8 4
        REQUIRE `?<Initializer for scr_w>`
scr_h:
        DS8 4
        REQUIRE `?<Initializer for scr_h>`
font:
        DS8 4
        REQUIRE `?<Initializer for font>`
space:
        DS8 4
        REQUIRE `?<Initializer for space>`
CursorClr:
        DS8 4
        REQUIRE `?<Initializer for CursorClr>`
soft_shot:
        DS8 4
        REQUIRE `?<Initializer for soft_shot>`
header_shot:
        DS8 4
        REQUIRE `?<Initializer for header_shot>`
cursor_shot:
        DS8 4
        REQUIRE `?<Initializer for cursor_shot>`
clrBlack:
        DS8 4
        REQUIRE `?<Initializer for clrBlack>`
clrWhite:
        DS8 4
        REQUIRE `?<Initializer for clrWhite>`
transparent:
        DS8 4
        REQUIRE `?<Initializer for transparent>`

        RSEG DATA_I:DATA:SORT:NOROOT(2)
clrRed:
        DS8 4
        REQUIRE `?<Initializer for clrRed>`

        RSEG DATA_I:DATA:SORT:NOROOT(2)
HeaderShot:
        DS8 12
        REQUIRE `?<Initializer for HeaderShot>`

        RSEG DATA_I:DATA:SORT:NOROOT(2)
cursor:
        DS8 12
        REQUIRE `?<Initializer for cursor>`

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock11 Using cfiCommon1
        CFI Function GetItem
        ARM
GetItem:
        LDR      R1,??DataTable9  ;; rss_first
        MOV      R2,#+0
        LDR      R1,[R1, #+0]
        B        ??GetItem_0
??GetItem_1:
        LDR      R1,[R1, #+0]
        ADD      R2,R2,#+1
??GetItem_0:
        CMP      R1,#+0
        CMPNE    R2,R0
        BNE      ??GetItem_1
        MOV      R0,R1
        BX       LR               ;; return
        CFI EndBlock cfiBlock11

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock12 Using cfiCommon0
        CFI NoFunction
        THUMB
??DrawList??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock12
        REQUIRE DrawList

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "\\307\\340\\352\\360\\373\\362\\374">`:
        DATA
        DC8 "\307\340\352\360\373\362\374"
        DC8 "\302\373\341\360\340\362\374"

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "\\377\\000\\000\\025">`:
        DATA
        DC8 0FFH, 0, 0, 15H, 0
        DC8 0, 0, 0
        DC8 "%d/%d"
        DC8 0, 0
        DC8 "Unknown title"
        DC8 0, 0
        DC8 "No description"
        DC8 0
CursorBGClr:
        DC8 0, 0, 0, 96

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "NRSS v3.0">`:
        DATA
        DC8 "NRSS v3.0"
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "%02d:%02d">`:
        DATA
        DC8 "%02d:%02d"
        DC8 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant {0, 0, 8, &""}>`:
        DATA
        DC16 0, 0
        DC32 8, `?<Constant "">`

        RSEG DATA_C:CONST:SORT:NOROOT(0)
`?<Constant "">`:
        DATA
        DC8 ""

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "\\377\\000\\000\\033">`:
        DATA
        DC8 0FFH, 0, 0, 1BH, 0
        DC8 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(2)
clrSelect:
        DATA
        DC8 0, 0, 0, 0

        RSEG DATA_C:CONST:SORT:NOROOT(0)
_t:
        DATA
        DC8 "%t"

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock13 Using cfiCommon1
        CFI Function DrawList
        ARM
DrawList:
        PUSH     {R4-R11,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R11 Frame(CFA, -8)
        CFI R10 Frame(CFA, -12)
        CFI R9 Frame(CFA, -16)
        CFI R8 Frame(CFA, -20)
        CFI R7 Frame(CFA, -24)
        CFI R6 Frame(CFA, -28)
        CFI R5 Frame(CFA, -32)
        CFI R4 Frame(CFA, -36)
        CFI CFA R13+36
        LDR      R4,??DataTable8  ;; SoftShot
        LDR      R9,??DrawList_0  ;; `?<Constant "\\377\\000\\000\\025">`
        LDR      R11,??DrawList_0+0x4  ;; cursor
        SUB      SP,SP,#+12
        CFI CFA R13+48
        LDR      R0,[R4, #+40]
        _BLF     FontH,??FontH??rA
        ADD      R5,R0,#+4
        LDR      R0,[R4, #+40]
        _BLF     FontH,??FontH??rA
        MOV      R6,R0
        LDR      R0,[R4, #+40]
        _BLF     FontH,??FontH??rA
        LDR      R1,[R4, #+36]
        SUB      R1,R1,R6
        SUB      R1,R1,#+26
        SUB      R0,R1,R0
        SUB      R1,R0,#+2
        MOV      R0,R5
        SWI      +184
        SUB      R0,R0,#+2
        STR      R0,[R4, #+12]
        SWI      +326
        LDR      R0,[R4, #+12]
        LDR      R1,[R4, #+16]
        MOV      R6,#+0
        SWI      +184
        STR      R0,[SP, #+8]
        MOV      R0,#+64
        SWI      +20
        MOV      R7,R0
        MOV      R0,#+0
        STR      R0,[R4, #+28]
??DrawList_1:
        LDR      R10,[R4, #+16]
        CMP      R6,R10
        BGE      ??DrawList_2
        LDR      R0,[R4, #+12]
        LDR      R1,[R4, #+24]
        SUB      R2,R1,#+1
        MUL      R2,R0,R2
        CMP      R6,R2
        MULGE    R0,R1,R0
        CMPGE    R0,R6
        BLT      ??DrawList_3
        MOV      R0,R6
        BL       GetItem
        MOVS     R8,R0
        BEQ      ??DrawList_3
        LDR      R0,[R4, #+20]
        MOV      R3,R10
        ADD      R2,R0,#+1
        ADD      R1,R9,#+8
        MOV      R0,R7
        SWI      +22
        LDR      R0,[R4, #+20]
        MOV      R10,#+0
        CMP      R0,R6
        LDR      R0,[R4, #+40]
        ADDLT    R10,R5,#+3
        _BLF     FontH,??FontH??rA
        LDR      R1,[R4, #+24]
        LDR      R2,[R4, #+12]
        SUB      R1,R1,#+1
        MUL      R1,R2,R1
        SUB      R1,R6,R1
        MLA      R0,R5,R1,R0
        MOV      R1,#+2
        ADD      R0,R0,#+28
        ADD      R2,R0,R10
        ADD      R0,R2,R5, LSL #+1
        PUSH     {R0}
        CFI CFA R13+52
        LDR      R3,[R4, #+32]
        MOV      R10,#+94
        ORR      R10,R10,#0x100
        ADD      R0,SP,#+4
        SWI      +308
        LDR      R0,[R4, #+20]
        ADD      SP,SP,#+4
        CFI CFA R13+48
        CMP      R6,R0
        BNE      ??DrawList_4
        MOV      R2,#+0
        MOV      R1,#+0
        MOV      R0,R9
        _BLF     SetFontColor,??SetFontColor??rA
        ADD      R0,R4,#+64
        PUSH     {R0}
        CFI CFA R13+52
        PUSH     {R0}
        CFI CFA R13+56
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+60
        PUSH     {R0}
        CFI CFA R13+64
        PUSH     {R0}
        CFI CFA R13+68
        LDRSH    R3,[SP, #+26]
        LDRSH    R1,[SP, #+22]
        LDRSH    R0,[SP, #+24]
        SUB      R2,R0,#+5
        LDRSH    R0,[SP, #+20]
        SWI      +336
        LDR      R0,[R4, #+60]
        ADD      SP,SP,#+20
        CFI CFA R13+48
        CMP      R0,#+2
        BEQ      ??DrawList_5
        LSL      R5,R5,#+1
        CMP      R5,#+1
        BLT      ??DrawList_6
??DrawList_7:
        LDR      R0,[R4, #+48]
        PUSH     {R0}
        CFI CFA R13+52
        ADD      R0,R9,#+48
        PUSH     {R0}
        CFI CFA R13+56
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+60
        PUSH     {R0}
        CFI CFA R13+64
        PUSH     {R0}
        CFI CFA R13+68
        LDRSH    R1,[SP, #+22]
        LDRSH    R0,[SP, #+26]
        SUB      R3,R0,R5
        LDRSH    R0,[SP, #+24]
        SUB      R5,R5,#+4
        SUB      R2,R0,#+5
        LDRSH    R0,[SP, #+20]
        SWI      +336
        CMP      R5,#+1
        ADD      SP,SP,#+20
        CFI CFA R13+48
        BGE      ??DrawList_7
??DrawList_6:
        LDRSH    R0,[SP, #+2]
        ADD      R5,R0,#+2
        SWI      +33160
        LDRSH    R1,[SP, #+6]
        LDRSH    R2,[SP, #+2]
        SUB      R1,R1,R2
        ADD      R1,R1,#+8
        MUL      R2,R0,R1
        MOV      R1,R5
        MOV      R0,R11
        BL       DoScreen
        LDR      R0,[R4, #+60]
        ADD      R0,R0,#+1
        STR      R0,[R4, #+60]
        SWI      +370
        POP      {R0-R2,R4-R11,PC}
??DrawList_5:
        LDRSH    R2,[SP, #+2]
        LDRSH    R1,[SP, #+0]
        MOV      R0,R11
        BL       DrwImage
        MOV      R0,R7
        BL       DrawHeader
        LDR      R1,[R4, #+16]
        MOV      R0,R6
        BL       DrawScrollBar
        LDR      R2,[R8, #+8]
        LDRSH    R0,[SP, #+4]
        CMP      R2,#+0
        ADDEQ    R2,R9,#+32
        PUSH     {R0}
        CFI CFA R13+52
        MOV      R3,#+0
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+56
        PUSH     {R0}
        CFI CFA R13+60
        MOV      R0,R10
        PUSH     {R0}
        CFI CFA R13+64
        LDR      R0,[R4, #+44]
        PUSH     {R0}
        CFI CFA R13+68
        LDR      R0,[R4, #+40]
        PUSH     {R0}
        CFI CFA R13+72
        LDRSH    R0,[SP, #+26]
        ADD      R1,R5,R0
        LDRSH    R0,[SP, #+24]
        ADD      R0,R0,#+5
        _BLF     PrintText,??PrintText??rA
        ADD      SP,SP,#+24
        CFI CFA R13+48
??DrawList_4:
        MOV      R2,#+0
        ADD      R1,R4,#+72
        ADD      R0,R4,#+64
        _BLF     SetFontColor,??SetFontColor??rA
        LDRSH    R0,[SP, #+4]
        LDR      R2,[R8, #+4]
        MOV      R3,#+0
        SUB      R0,R0,#+5
        PUSH     {R0}
        CFI CFA R13+52
        CMP      R2,#+0
        ADDEQ    R2,R9,#+16
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+56
        PUSH     {R0}
        CFI CFA R13+60
        PUSH     {R10}
        CFI CFA R13+64
        LDR      R0,[R4, #+44]
        PUSH     {R0}
        CFI CFA R13+68
        LDR      R0,[R4, #+40]
        PUSH     {R0}
        CFI CFA R13+72
        LDRSH    R0,[SP, #+26]
        ADD      R1,R0,#+1
        LDRSH    R0,[SP, #+24]
        ADD      R0,R0,#+5
        _BLF     PrintText,??PrintText??rA
        ADD      SP,SP,#+24
        CFI CFA R13+48
??DrawList_3:
        LDR      R0,[SP, #+8]
        LDR      R1,[R4, #+12]
        ADD      R6,R6,#+1
        MUL      R0,R1,R0
        CMP      R0,R6
        BGE      ??DrawList_1
??DrawList_2:
        MOV      R0,R7
        SWI      +21
        SWI      +327
        POP      {R0-R2,R4-R11,PC}  ;; return
        DATA
??DrawList_0:
        DC32     `?<Constant "\\377\\000\\000\\025">`
        DC32     cursor
        CFI EndBlock cfiBlock13

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock14 Using cfiCommon0
        CFI NoFunction
        THUMB
??MoveUp??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock14
        REQUIRE MoveUp

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock15 Using cfiCommon1
        CFI Function MoveUp
        ARM
MoveUp:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        LDR      R4,??DataTable8  ;; SoftShot
        LDR      R2,[R4, #+12]
        CMP      R2,#+0
        POPEQ    {R4,PC}
        LDR      R1,[R4, #+20]
        CMP      R1,#+1
        BGE      ??MoveUp_0
        LDR      R1,[R4, #+16]
        SUB      R0,R1,#+1
        STR      R0,[R4, #+20]
        CMP      R2,R1
        BEQ      ??MoveUp_1
        MOV      R0,R2
        SWI      +184
        ADD      R0,R0,#+1
        STR      R0,[R4, #+24]
        POP      {R4,PC}
??MoveUp_1:
        MOV      R0,#+1
        STR      R0,[R4, #+24]
        POP      {R4,PC}
??MoveUp_0:
        CMP      R0,#+0
        SUBNE    R0,R1,#+2
        SUBEQ    R0,R1,#+1
        LDR      R1,[R4, #+24]
        STR      R0,[R4, #+20]
        SUB      R1,R1,#+1
        MUL      R3,R2,R1
        CMP      R0,R3
        ADDLT    R0,R0,#+1
        STRLT    R0,[R4, #+20]
        STRLT    R1,[R4, #+24]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock15

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock16 Using cfiCommon0
        CFI NoFunction
        THUMB
??MoveDown??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock16
        REQUIRE MoveDown

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock17 Using cfiCommon1
        CFI Function MoveDown
        ARM
MoveDown:
        LDR      R1,??DataTable8  ;; SoftShot
        LDR      R2,[R1, #+16]
        CMP      R2,#+0
        BXEQ     LR
        LDR      R3,[R1, #+20]
        CMP      R0,#+0
        ADDNE    R0,R3,#+2
        ADDEQ    R0,R3,#+1
        LDR      R3,[R1, #+12]
        CMP      R0,R2
        MOVGE    R2,#+1
        STRGE    R2,[R1, #+24]
        LDR      R2,[R1, #+24]
        MOVGE    R0,#+0
        MUL      R12,R3,R2
        STR      R0,[R1, #+20]
        CMP      R12,R0
        BXGE     LR
        SUB      R0,R0,#+1
        STR      R0,[R1, #+20]
        ADD      R0,R2,#+1
        STR      R0,[R1, #+24]
        BX       LR               ;; return
        CFI EndBlock cfiBlock17

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock18 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnRedraw??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock18
        REQUIRE OnRedraw

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock19 Using cfiCommon1
        CFI Function OnRedraw
        ARM
OnRedraw:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        LDR      R4,??DataTable8  ;; SoftShot
        SWI      +326
        ADD      R0,R4,#+68
        PUSH     {R0}
        CFI CFA R13+16
        PUSH     {R0}
        CFI CFA R13+20
        MOV      R1,#+24
        MOV      R0,#+0
        PUSH     {R0}
        CFI CFA R13+24
        PUSH     {R0}
        CFI CFA R13+28
        PUSH     {R0}
        CFI CFA R13+32
        LDR      R3,[R4, #+36]
        LDR      R2,[R4, #+32]
        SWI      +336
        LDR      R0,[R4, #+40]
        _BLF     FontH,??FontH??rA
        MOV      R5,R0
        LDR      R0,[R4, #+40]
        _BLF     FontH,??FontH??rA
        ADD      R1,R4,#+68
        PUSH     {R1}
        CFI CFA R13+36
        ADD      R3,R5,#+26
        MOV      R1,#+0
        PUSH     {R1}
        CFI CFA R13+40
        LDR      R2,[R4, #+32]
        ADD      R1,R0,#+26
        MOV      R0,#+0
        SWI      +435
        LDR      R0,??OnRedraw_0  ;; `?<Constant "\\307\\340\\352\\360\\373\\362\\374">`
        MOV      R1,R0
        ADD      R0,R0,#+8
        BL       DrawSoftKeys
        SWI      +327
        BL       DrawList
        ADD      SP,SP,#+28
        CFI CFA R13+12
        POP      {R4,R5,PC}       ;; return
        DATA
??OnRedraw_0:
        DC32     `?<Constant "\\307\\340\\352\\360\\373\\362\\374">`
        CFI EndBlock cfiBlock19

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock20 Using cfiCommon0
        CFI NoFunction
        THUMB
??onCreate??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock20
        REQUIRE onCreate

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock21 Using cfiCommon1
        CFI Function onCreate
        ARM
onCreate:
        PUSH     {R4,R5,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R5 Frame(CFA, -8)
        CFI R4 Frame(CFA, -12)
        CFI CFA R13+12
        LDR      R5,??DataTable8  ;; SoftShot
        MOV      R4,R0
        SWI      +33160
        SUB      R0,R0,#+1
        STR      R0,[R5, #+32]
        SWI      +33161
        SUB      R0,R0,#+1
        STR      R0,[R5, #+36]
        MOV      R0,#+256
        SWI      +293
        STR      R0,[R4, #+52]
        MOV      R0,#+1
        STRB     R0,[R4, #+12]
        POP      {R4,R5,PC}       ;; return
        CFI EndBlock cfiBlock21

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock22 Using cfiCommon0
        CFI NoFunction
        THUMB
??onClose??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock22
        REQUIRE onClose

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock23 Using cfiCommon1
        CFI Function onClose
        ARM
onClose:
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R4,R0
        LDR      R0,[R4, #+52]
        SWI      +297
        MOV      R0,#+0
        STRB     R0,[R4, #+12]
        POP      {R4,PC}          ;; return
        CFI EndBlock cfiBlock23

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock24 Using cfiCommon0
        CFI NoFunction
        THUMB
??onFocus??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock24
        REQUIRE onFocus

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock25 Using cfiCommon1
        CFI Function onFocus
        ARM
onFocus:
        PUSH     {LR}
        CFI ?RET Frame(CFA, -4)
        CFI CFA R13+4
        MOV      R1,#+2
        STRB     R1,[R0, #+12]
        SWI      +383
        POP      {PC}             ;; return
        CFI EndBlock cfiBlock25

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock26 Using cfiCommon0
        CFI NoFunction
        THUMB
??onUnfocus??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock26
        REQUIRE onUnfocus

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock27 Using cfiCommon1
        CFI Function onUnfocus
        ARM
onUnfocus:
        LDRB     R1,[R0, #+12]
        CMP      R1,#+2
        MOVEQ    R1,#+1
        STRBEQ   R1,[R0, #+12]
        BX       LR               ;; return
        CFI EndBlock cfiBlock27

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock28 Using cfiCommon0
        CFI NoFunction
        THUMB
??OnKey??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock28
        REQUIRE OnKey

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock29 Using cfiCommon1
        CFI Function OnKey
        ARM
OnKey:
        PUSH     {R4-R7,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R7 Frame(CFA, -8)
        CFI R6 Frame(CFA, -12)
        CFI R5 Frame(CFA, -16)
        CFI R4 Frame(CFA, -20)
        CFI CFA R13+20
        MOV      R4,R1
        MOV      R6,#+147
        ORR      R6,R6,#0x100
        SWI      +319
        LDR      R0,[R4, #+4]
        LDR      R5,[R0, #+8]
        LDR      R1,[R0, #+4]
        CMP      R1,R6
        BEQ      ??OnKey_1
        MOV      R0,R1
        ADD      R1,R6,#+2
        CMP      R0,R1
        BNE      ??OnKey_2
??OnKey_1:
        SUB      R0,R5,#+4
        CMP      R0,#+58
        BHI      ??OnKey_2
        ADR      R1,??OnKey_0
        LDRB     R1,[R1, R0]
        ADD      PC,PC,R1, LSL #+2
        DATA
??OnKey_0:
        DC8      +53,+16,+16,+16
        DC8      +16,+16,+16,+16
        DC8      +53,+16,+16,+16
        DC8      +16,+16,+16,+16
        DC8      +16,+16,+16,+16
        DC8      +16,+16,+16,+16
        DC8      +16,+16,+16,+16
        DC8      +16,+16,+16,+38
        DC8      +16,+16,+16,+16
        DC8      +16,+16,+16,+16
        DC8      +16,+16,+16,+16
        DC8      +16,+16,+16,+16
        DC8      +16,+16,+16,+16
        DC8      +16,+16,+16,+14
        DC8      +31,+34,+36,+0
        ARM
??OnKey_3:
        MOV      R0,#+0
??OnKey_4:
        BL       MoveUp
??OnKey_2:
        LDR      R0,[R4, #+4]
        LDR      R0,[R0, #+4]
        CMP      R0,R6
        BNE      ??OnKey_5
        CMP      R5,#+26
        CMPNE    R5,#+1
        BNE      ??OnKey_5
        LDR      R0,??OnKey_6     ;; SoftShot + 20
        LDR      R0,[R0, #+0]
        BL       GetItem
        CMP      R0,#+0
        BEQ      ??OnKey_7
        _BLF     create_view_item,??create_view_item??rA
??OnKey_7:
        MVN      R0,#+0
        POP      {R4-R7,PC}
??OnKey_8:
        MOV      R0,#+0
??OnKey_9:
        BL       MoveDown
        B        ??OnKey_2
??OnKey_10:
        MOV      R0,#+1
        B        ??OnKey_4
??OnKey_11:
        MOV      R0,#+1
        B        ??OnKey_9
??OnKey_12:
        MOV      R0,#+150
        SWI      +293
        MOV      R7,R0
        LDR      R0,??OnKey_6+0x4  ;; successed_config_filename
        MOV      R2,#+128
        LDR      R1,[R0, #+0]
        MOV      R0,R7
        SWI      +364
        MOV      R2,#+0
        MOV      R1,#+0
        MOV      R0,R7
        SWI      +148
        MOV      R0,R7
        SWI      +297
        B        ??OnKey_2
??OnKey_13:
        MOV      R0,#+1
        POP      {R4-R7,PC}
??OnKey_5:
        MOV      R0,#+0
        POP      {R4-R7,PC}       ;; return
        DATA
??OnKey_6:
        DC32     SoftShot + 20
        DC32     successed_config_filename
        CFI EndBlock cfiBlock29

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock30 Using cfiCommon0
        CFI NoFunction
        THUMB
??method8??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock30
        REQUIRE method8

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock31 Using cfiCommon1
        CFI Function method8
        ARM
method8:
        MOV      R0,#+0
        BX       LR               ;; return
        CFI EndBlock cfiBlock31

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock32 Using cfiCommon0
        CFI NoFunction
        THUMB
??method9??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock32
        REQUIRE method9

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock33 Using cfiCommon1
        CFI Function method9
        ARM
method9:
        MOV      R0,#+0
        BX       LR               ;; return
        CFI EndBlock cfiBlock33

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock34 Using cfiCommon0
        CFI NoFunction
        THUMB
??create_rssitems_menu??rT:
        BX       PC
        Nop      
        CFI EndBlock cfiBlock34
        REQUIRE create_rssitems_menu

        RSEG DATA_C:CONST:SORT:NOROOT(2)
gui_methods:
        DATA
        DC32 OnRedraw, onCreate, onClose, onFocus, onUnfocus, OnKey, 0H
        DC32 kill_data, method8, method9, 0H

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock35 Using cfiCommon1
        CFI Function create_rssitems_menu
        ARM
create_rssitems_menu:
        LDR      R0,??DataTable8  ;; SoftShot
        PUSH     {R4,LR}
        CFI ?RET Frame(CFA, -4)
        CFI R4 Frame(CFA, -8)
        CFI CFA R13+8
        MOV      R1,#+0
        STR      R1,[R0, #+16]
        LDR      R1,??DataTable9  ;; rss_first
        B        ??create_rssitems_menu_0
??create_rssitems_menu_1:
        LDR      R2,[R0, #+16]
        ADD      R2,R2,#+1
        STR      R2,[R0, #+16]
??create_rssitems_menu_0:
        LDR      R1,[R1, #+0]
        CMP      R1,#+0
        BNE      ??create_rssitems_menu_1
        MOV      R0,#+56
        SWI      +20
        MOV      R4,R0
        MOV      R1,#+56
        SWI      +285
        LDR      R0,??create_rssitems_menu_2  ;; gui_methods
        STR      R0,[R4, #+4]
        SWI      +32789
        STR      R0,[R4, #+32]
        MOV      R0,R4
        SWI      +311
        POP      {R4,PC}          ;; return
        DATA
??create_rssitems_menu_2:
        DC32     gui_methods
        CFI EndBlock cfiBlock35

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable8:
        DC32     SoftShot

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable9:
        DC32     rss_first

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock36 Using cfiCommon1
        CFI NoFunction
        ARM
??FontH??rA:
        LDR      R12,??Subroutine18_0  ;; FontH
        BX       R12
        DATA
??Subroutine18_0:
        DC32     FontH
        CFI EndBlock cfiBlock36

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock37 Using cfiCommon1
        CFI NoFunction
        ARM
??SetFontColor??rA:
        LDR      R12,??Subroutine19_0  ;; SetFontColor
        BX       R12
        DATA
??Subroutine19_0:
        DC32     SetFontColor
        CFI EndBlock cfiBlock37

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock38 Using cfiCommon1
        CFI NoFunction
        ARM
??PrintField??rA:
        LDR      R12,??Subroutine20_0  ;; PrintField
        BX       R12
        DATA
??Subroutine20_0:
        DC32     PrintField
        CFI EndBlock cfiBlock38

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock39 Using cfiCommon1
        CFI NoFunction
        ARM
??PrintText??rA:
        LDR      R12,??Subroutine21_0  ;; PrintText
        BX       R12
        DATA
??Subroutine21_0:
        DC32     PrintText
        CFI EndBlock cfiBlock39

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock40 Using cfiCommon1
        CFI NoFunction
        ARM
??rA??div32_a:
        LDR      R12,??Subroutine22_0  ;; ??div32_a
        MOV      PC,R12
        DATA
??Subroutine22_0:
        DC32     ??div32_a
        CFI EndBlock cfiBlock40

        RSEG CODE:CODE:NOROOT(2)
        CFI Block cfiBlock41 Using cfiCommon1
        CFI NoFunction
        ARM
??create_view_item??rA:
        LDR      R12,??Subroutine23_0  ;; create_view_item
        BX       R12
        DATA
??Subroutine23_0:
        DC32     create_view_item
        CFI EndBlock cfiBlock41

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for SoftShot>`:
        DATA
        DC16 0, 0
        DC32 8, `?<Constant "">`
`?<Initializer for itemFromDisp>`:
        DC8 0, 0, 0, 0
`?<Initializer for totalItems>`:
        DC8 0, 0, 0, 0
`?<Initializer for curpos>`:
        DC32 0
`?<Initializer for curpage>`:
        DC32 1
`?<Initializer for collum>`:
        DC32 0
`?<Initializer for scr_w>`:
        DC8 0, 0, 0, 0
`?<Initializer for scr_h>`:
        DC8 0, 0, 0, 0
`?<Initializer for font>`:
        DC32 108
`?<Initializer for space>`:
        DC32 1
`?<Initializer for CursorClr>`:
        DC32 `?<Constant "\\377\\000\\000\\033">`
`?<Initializer for soft_shot>`:
        DC32 0
`?<Initializer for header_shot>`:
        DC32 0
`?<Initializer for cursor_shot>`:
        DC32 0
`?<Initializer for clrBlack>`:
        DC8 0, 0, 0, 100
`?<Initializer for clrWhite>`:
        DC8 255, 255, 255, 100
`?<Initializer for transparent>`:
        DC8 0, 0, 0, 0

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for clrRed>`:
        DATA
        DC8 255, 0, 72, 100

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for HeaderShot>`:
        DATA
        DC16 0, 0
        DC32 8, `?<Constant "">`

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?<Initializer for cursor>`:
        DATA
        DC16 0, 0
        DC32 8, `?<Constant "">`

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_Z:
        DCD      sfe(DATA_Z) - sfb(DATA_Z), sfb(DATA_Z), sfb(DATA_Z)

        RSEG DATA_ID:CONST:SORT:NOROOT(2)
`?*?DATA_ID`:

        RSEG INITTAB:CODE:ROOT(2)
        DATA
?init?tab?DATA_I:
        DCD      sfe(DATA_I) - sfb(DATA_I), sfb(DATA_I), sfb(DATA_ID)

        END
// 
// 3 444 bytes in segment CODE
//   164 bytes in segment DATA_C
//   104 bytes in segment DATA_I
//   104 bytes in segment DATA_ID
//     4 bytes in segment DATA_Z
//    24 bytes in segment INITTAB
// 
// 3 300 bytes of CODE  memory (+ 168 bytes shared)
//   268 bytes of CONST memory
//   108 bytes of DATA  memory
//
//Errors: none
//Warnings: none
